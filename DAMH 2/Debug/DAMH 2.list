
DAMH 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000758c  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e8  08007720  08007720  00017720  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007808  08007808  00020100  2**0
                  CONTENTS
  4 .ARM          00000008  08007808  08007808  00017808  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007810  08007810  00020100  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007810  08007810  00017810  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007814  08007814  00017814  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000100  20000000  08007818  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020100  2**0
                  CONTENTS
 10 .bss          000043f4  20000100  20000100  00020100  2**3
                  ALLOC
 11 ._user_heap_stack 00000604  200044f4  200044f4  00020100  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020100  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020130  2**0
                  CONTENTS, READONLY
 14 .debug_info   00012704  00000000  00000000  00020173  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00002cd5  00000000  00000000  00032877  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000011e8  00000000  00000000  00035550  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000df1  00000000  00000000  00036738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00022d21  00000000  00000000  00037529  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00015101  00000000  00000000  0005a24a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000d3d58  00000000  00000000  0006f34b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00004fdc  00000000  00000000  001430a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000003c  00000000  00000000  00148080  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000100 	.word	0x20000100
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007704 	.word	0x08007704

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000104 	.word	0x20000104
 80001cc:	08007704 	.word	0x08007704

080001d0 <__aeabi_drsub>:
 80001d0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001d4:	e002      	b.n	80001dc <__adddf3>
 80001d6:	bf00      	nop

080001d8 <__aeabi_dsub>:
 80001d8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001dc <__adddf3>:
 80001dc:	b530      	push	{r4, r5, lr}
 80001de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001e6:	ea94 0f05 	teq	r4, r5
 80001ea:	bf08      	it	eq
 80001ec:	ea90 0f02 	teqeq	r0, r2
 80001f0:	bf1f      	itttt	ne
 80001f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000202:	f000 80e2 	beq.w	80003ca <__adddf3+0x1ee>
 8000206:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800020a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800020e:	bfb8      	it	lt
 8000210:	426d      	neglt	r5, r5
 8000212:	dd0c      	ble.n	800022e <__adddf3+0x52>
 8000214:	442c      	add	r4, r5
 8000216:	ea80 0202 	eor.w	r2, r0, r2
 800021a:	ea81 0303 	eor.w	r3, r1, r3
 800021e:	ea82 0000 	eor.w	r0, r2, r0
 8000222:	ea83 0101 	eor.w	r1, r3, r1
 8000226:	ea80 0202 	eor.w	r2, r0, r2
 800022a:	ea81 0303 	eor.w	r3, r1, r3
 800022e:	2d36      	cmp	r5, #54	; 0x36
 8000230:	bf88      	it	hi
 8000232:	bd30      	pophi	{r4, r5, pc}
 8000234:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000238:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800023c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000240:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000244:	d002      	beq.n	800024c <__adddf3+0x70>
 8000246:	4240      	negs	r0, r0
 8000248:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800024c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000250:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000254:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000258:	d002      	beq.n	8000260 <__adddf3+0x84>
 800025a:	4252      	negs	r2, r2
 800025c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000260:	ea94 0f05 	teq	r4, r5
 8000264:	f000 80a7 	beq.w	80003b6 <__adddf3+0x1da>
 8000268:	f1a4 0401 	sub.w	r4, r4, #1
 800026c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000270:	db0d      	blt.n	800028e <__adddf3+0xb2>
 8000272:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000276:	fa22 f205 	lsr.w	r2, r2, r5
 800027a:	1880      	adds	r0, r0, r2
 800027c:	f141 0100 	adc.w	r1, r1, #0
 8000280:	fa03 f20e 	lsl.w	r2, r3, lr
 8000284:	1880      	adds	r0, r0, r2
 8000286:	fa43 f305 	asr.w	r3, r3, r5
 800028a:	4159      	adcs	r1, r3
 800028c:	e00e      	b.n	80002ac <__adddf3+0xd0>
 800028e:	f1a5 0520 	sub.w	r5, r5, #32
 8000292:	f10e 0e20 	add.w	lr, lr, #32
 8000296:	2a01      	cmp	r2, #1
 8000298:	fa03 fc0e 	lsl.w	ip, r3, lr
 800029c:	bf28      	it	cs
 800029e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002a2:	fa43 f305 	asr.w	r3, r3, r5
 80002a6:	18c0      	adds	r0, r0, r3
 80002a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b0:	d507      	bpl.n	80002c2 <__adddf3+0xe6>
 80002b2:	f04f 0e00 	mov.w	lr, #0
 80002b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80002ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002be:	eb6e 0101 	sbc.w	r1, lr, r1
 80002c2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002c6:	d31b      	bcc.n	8000300 <__adddf3+0x124>
 80002c8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002cc:	d30c      	bcc.n	80002e8 <__adddf3+0x10c>
 80002ce:	0849      	lsrs	r1, r1, #1
 80002d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80002d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002d8:	f104 0401 	add.w	r4, r4, #1
 80002dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002e4:	f080 809a 	bcs.w	800041c <__adddf3+0x240>
 80002e8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002ec:	bf08      	it	eq
 80002ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002f2:	f150 0000 	adcs.w	r0, r0, #0
 80002f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002fa:	ea41 0105 	orr.w	r1, r1, r5
 80002fe:	bd30      	pop	{r4, r5, pc}
 8000300:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000304:	4140      	adcs	r0, r0
 8000306:	eb41 0101 	adc.w	r1, r1, r1
 800030a:	3c01      	subs	r4, #1
 800030c:	bf28      	it	cs
 800030e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000312:	d2e9      	bcs.n	80002e8 <__adddf3+0x10c>
 8000314:	f091 0f00 	teq	r1, #0
 8000318:	bf04      	itt	eq
 800031a:	4601      	moveq	r1, r0
 800031c:	2000      	moveq	r0, #0
 800031e:	fab1 f381 	clz	r3, r1
 8000322:	bf08      	it	eq
 8000324:	3320      	addeq	r3, #32
 8000326:	f1a3 030b 	sub.w	r3, r3, #11
 800032a:	f1b3 0220 	subs.w	r2, r3, #32
 800032e:	da0c      	bge.n	800034a <__adddf3+0x16e>
 8000330:	320c      	adds	r2, #12
 8000332:	dd08      	ble.n	8000346 <__adddf3+0x16a>
 8000334:	f102 0c14 	add.w	ip, r2, #20
 8000338:	f1c2 020c 	rsb	r2, r2, #12
 800033c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000340:	fa21 f102 	lsr.w	r1, r1, r2
 8000344:	e00c      	b.n	8000360 <__adddf3+0x184>
 8000346:	f102 0214 	add.w	r2, r2, #20
 800034a:	bfd8      	it	le
 800034c:	f1c2 0c20 	rsble	ip, r2, #32
 8000350:	fa01 f102 	lsl.w	r1, r1, r2
 8000354:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000358:	bfdc      	itt	le
 800035a:	ea41 010c 	orrle.w	r1, r1, ip
 800035e:	4090      	lslle	r0, r2
 8000360:	1ae4      	subs	r4, r4, r3
 8000362:	bfa2      	ittt	ge
 8000364:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000368:	4329      	orrge	r1, r5
 800036a:	bd30      	popge	{r4, r5, pc}
 800036c:	ea6f 0404 	mvn.w	r4, r4
 8000370:	3c1f      	subs	r4, #31
 8000372:	da1c      	bge.n	80003ae <__adddf3+0x1d2>
 8000374:	340c      	adds	r4, #12
 8000376:	dc0e      	bgt.n	8000396 <__adddf3+0x1ba>
 8000378:	f104 0414 	add.w	r4, r4, #20
 800037c:	f1c4 0220 	rsb	r2, r4, #32
 8000380:	fa20 f004 	lsr.w	r0, r0, r4
 8000384:	fa01 f302 	lsl.w	r3, r1, r2
 8000388:	ea40 0003 	orr.w	r0, r0, r3
 800038c:	fa21 f304 	lsr.w	r3, r1, r4
 8000390:	ea45 0103 	orr.w	r1, r5, r3
 8000394:	bd30      	pop	{r4, r5, pc}
 8000396:	f1c4 040c 	rsb	r4, r4, #12
 800039a:	f1c4 0220 	rsb	r2, r4, #32
 800039e:	fa20 f002 	lsr.w	r0, r0, r2
 80003a2:	fa01 f304 	lsl.w	r3, r1, r4
 80003a6:	ea40 0003 	orr.w	r0, r0, r3
 80003aa:	4629      	mov	r1, r5
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	fa21 f004 	lsr.w	r0, r1, r4
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	f094 0f00 	teq	r4, #0
 80003ba:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003be:	bf06      	itte	eq
 80003c0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003c4:	3401      	addeq	r4, #1
 80003c6:	3d01      	subne	r5, #1
 80003c8:	e74e      	b.n	8000268 <__adddf3+0x8c>
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf18      	it	ne
 80003d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003d4:	d029      	beq.n	800042a <__adddf3+0x24e>
 80003d6:	ea94 0f05 	teq	r4, r5
 80003da:	bf08      	it	eq
 80003dc:	ea90 0f02 	teqeq	r0, r2
 80003e0:	d005      	beq.n	80003ee <__adddf3+0x212>
 80003e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80003e6:	bf04      	itt	eq
 80003e8:	4619      	moveq	r1, r3
 80003ea:	4610      	moveq	r0, r2
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	ea91 0f03 	teq	r1, r3
 80003f2:	bf1e      	ittt	ne
 80003f4:	2100      	movne	r1, #0
 80003f6:	2000      	movne	r0, #0
 80003f8:	bd30      	popne	{r4, r5, pc}
 80003fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003fe:	d105      	bne.n	800040c <__adddf3+0x230>
 8000400:	0040      	lsls	r0, r0, #1
 8000402:	4149      	adcs	r1, r1
 8000404:	bf28      	it	cs
 8000406:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800040a:	bd30      	pop	{r4, r5, pc}
 800040c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000410:	bf3c      	itt	cc
 8000412:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000416:	bd30      	popcc	{r4, r5, pc}
 8000418:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800041c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000420:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000424:	f04f 0000 	mov.w	r0, #0
 8000428:	bd30      	pop	{r4, r5, pc}
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf1a      	itte	ne
 8000430:	4619      	movne	r1, r3
 8000432:	4610      	movne	r0, r2
 8000434:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000438:	bf1c      	itt	ne
 800043a:	460b      	movne	r3, r1
 800043c:	4602      	movne	r2, r0
 800043e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000442:	bf06      	itte	eq
 8000444:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000448:	ea91 0f03 	teqeq	r1, r3
 800044c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000450:	bd30      	pop	{r4, r5, pc}
 8000452:	bf00      	nop

08000454 <__aeabi_ui2d>:
 8000454:	f090 0f00 	teq	r0, #0
 8000458:	bf04      	itt	eq
 800045a:	2100      	moveq	r1, #0
 800045c:	4770      	bxeq	lr
 800045e:	b530      	push	{r4, r5, lr}
 8000460:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000464:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000468:	f04f 0500 	mov.w	r5, #0
 800046c:	f04f 0100 	mov.w	r1, #0
 8000470:	e750      	b.n	8000314 <__adddf3+0x138>
 8000472:	bf00      	nop

08000474 <__aeabi_i2d>:
 8000474:	f090 0f00 	teq	r0, #0
 8000478:	bf04      	itt	eq
 800047a:	2100      	moveq	r1, #0
 800047c:	4770      	bxeq	lr
 800047e:	b530      	push	{r4, r5, lr}
 8000480:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000484:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000488:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800048c:	bf48      	it	mi
 800048e:	4240      	negmi	r0, r0
 8000490:	f04f 0100 	mov.w	r1, #0
 8000494:	e73e      	b.n	8000314 <__adddf3+0x138>
 8000496:	bf00      	nop

08000498 <__aeabi_f2d>:
 8000498:	0042      	lsls	r2, r0, #1
 800049a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800049e:	ea4f 0131 	mov.w	r1, r1, rrx
 80004a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004a6:	bf1f      	itttt	ne
 80004a8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004ac:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004b4:	4770      	bxne	lr
 80004b6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004ba:	bf08      	it	eq
 80004bc:	4770      	bxeq	lr
 80004be:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004c2:	bf04      	itt	eq
 80004c4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004c8:	4770      	bxeq	lr
 80004ca:	b530      	push	{r4, r5, lr}
 80004cc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004d8:	e71c      	b.n	8000314 <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_ul2d>:
 80004dc:	ea50 0201 	orrs.w	r2, r0, r1
 80004e0:	bf08      	it	eq
 80004e2:	4770      	bxeq	lr
 80004e4:	b530      	push	{r4, r5, lr}
 80004e6:	f04f 0500 	mov.w	r5, #0
 80004ea:	e00a      	b.n	8000502 <__aeabi_l2d+0x16>

080004ec <__aeabi_l2d>:
 80004ec:	ea50 0201 	orrs.w	r2, r0, r1
 80004f0:	bf08      	it	eq
 80004f2:	4770      	bxeq	lr
 80004f4:	b530      	push	{r4, r5, lr}
 80004f6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004fa:	d502      	bpl.n	8000502 <__aeabi_l2d+0x16>
 80004fc:	4240      	negs	r0, r0
 80004fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000502:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000506:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800050a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800050e:	f43f aed8 	beq.w	80002c2 <__adddf3+0xe6>
 8000512:	f04f 0203 	mov.w	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800052a:	f1c2 0320 	rsb	r3, r2, #32
 800052e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000532:	fa20 f002 	lsr.w	r0, r0, r2
 8000536:	fa01 fe03 	lsl.w	lr, r1, r3
 800053a:	ea40 000e 	orr.w	r0, r0, lr
 800053e:	fa21 f102 	lsr.w	r1, r1, r2
 8000542:	4414      	add	r4, r2
 8000544:	e6bd      	b.n	80002c2 <__adddf3+0xe6>
 8000546:	bf00      	nop

08000548 <__aeabi_dmul>:
 8000548:	b570      	push	{r4, r5, r6, lr}
 800054a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800054e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000552:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000556:	bf1d      	ittte	ne
 8000558:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800055c:	ea94 0f0c 	teqne	r4, ip
 8000560:	ea95 0f0c 	teqne	r5, ip
 8000564:	f000 f8de 	bleq	8000724 <__aeabi_dmul+0x1dc>
 8000568:	442c      	add	r4, r5
 800056a:	ea81 0603 	eor.w	r6, r1, r3
 800056e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000572:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000576:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800057a:	bf18      	it	ne
 800057c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000580:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000584:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000588:	d038      	beq.n	80005fc <__aeabi_dmul+0xb4>
 800058a:	fba0 ce02 	umull	ip, lr, r0, r2
 800058e:	f04f 0500 	mov.w	r5, #0
 8000592:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000596:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800059a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800059e:	f04f 0600 	mov.w	r6, #0
 80005a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005a6:	f09c 0f00 	teq	ip, #0
 80005aa:	bf18      	it	ne
 80005ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005b4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005b8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005bc:	d204      	bcs.n	80005c8 <__aeabi_dmul+0x80>
 80005be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005c2:	416d      	adcs	r5, r5
 80005c4:	eb46 0606 	adc.w	r6, r6, r6
 80005c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005dc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e0:	bf88      	it	hi
 80005e2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005e6:	d81e      	bhi.n	8000626 <__aeabi_dmul+0xde>
 80005e8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005ec:	bf08      	it	eq
 80005ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005f2:	f150 0000 	adcs.w	r0, r0, #0
 80005f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000600:	ea46 0101 	orr.w	r1, r6, r1
 8000604:	ea40 0002 	orr.w	r0, r0, r2
 8000608:	ea81 0103 	eor.w	r1, r1, r3
 800060c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000610:	bfc2      	ittt	gt
 8000612:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000616:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800061a:	bd70      	popgt	{r4, r5, r6, pc}
 800061c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000620:	f04f 0e00 	mov.w	lr, #0
 8000624:	3c01      	subs	r4, #1
 8000626:	f300 80ab 	bgt.w	8000780 <__aeabi_dmul+0x238>
 800062a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800062e:	bfde      	ittt	le
 8000630:	2000      	movle	r0, #0
 8000632:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000636:	bd70      	pople	{r4, r5, r6, pc}
 8000638:	f1c4 0400 	rsb	r4, r4, #0
 800063c:	3c20      	subs	r4, #32
 800063e:	da35      	bge.n	80006ac <__aeabi_dmul+0x164>
 8000640:	340c      	adds	r4, #12
 8000642:	dc1b      	bgt.n	800067c <__aeabi_dmul+0x134>
 8000644:	f104 0414 	add.w	r4, r4, #20
 8000648:	f1c4 0520 	rsb	r5, r4, #32
 800064c:	fa00 f305 	lsl.w	r3, r0, r5
 8000650:	fa20 f004 	lsr.w	r0, r0, r4
 8000654:	fa01 f205 	lsl.w	r2, r1, r5
 8000658:	ea40 0002 	orr.w	r0, r0, r2
 800065c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000660:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000664:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000668:	fa21 f604 	lsr.w	r6, r1, r4
 800066c:	eb42 0106 	adc.w	r1, r2, r6
 8000670:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000674:	bf08      	it	eq
 8000676:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f1c4 040c 	rsb	r4, r4, #12
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f304 	lsl.w	r3, r0, r4
 8000688:	fa20 f005 	lsr.w	r0, r0, r5
 800068c:	fa01 f204 	lsl.w	r2, r1, r4
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000698:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800069c:	f141 0100 	adc.w	r1, r1, #0
 80006a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006a4:	bf08      	it	eq
 80006a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f1c4 0520 	rsb	r5, r4, #32
 80006b0:	fa00 f205 	lsl.w	r2, r0, r5
 80006b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b8:	fa20 f304 	lsr.w	r3, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea43 0302 	orr.w	r3, r3, r2
 80006c4:	fa21 f004 	lsr.w	r0, r1, r4
 80006c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	fa21 f204 	lsr.w	r2, r1, r4
 80006d0:	ea20 0002 	bic.w	r0, r0, r2
 80006d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f094 0f00 	teq	r4, #0
 80006e8:	d10f      	bne.n	800070a <__aeabi_dmul+0x1c2>
 80006ea:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006ee:	0040      	lsls	r0, r0, #1
 80006f0:	eb41 0101 	adc.w	r1, r1, r1
 80006f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006f8:	bf08      	it	eq
 80006fa:	3c01      	subeq	r4, #1
 80006fc:	d0f7      	beq.n	80006ee <__aeabi_dmul+0x1a6>
 80006fe:	ea41 0106 	orr.w	r1, r1, r6
 8000702:	f095 0f00 	teq	r5, #0
 8000706:	bf18      	it	ne
 8000708:	4770      	bxne	lr
 800070a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800070e:	0052      	lsls	r2, r2, #1
 8000710:	eb43 0303 	adc.w	r3, r3, r3
 8000714:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000718:	bf08      	it	eq
 800071a:	3d01      	subeq	r5, #1
 800071c:	d0f7      	beq.n	800070e <__aeabi_dmul+0x1c6>
 800071e:	ea43 0306 	orr.w	r3, r3, r6
 8000722:	4770      	bx	lr
 8000724:	ea94 0f0c 	teq	r4, ip
 8000728:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800072c:	bf18      	it	ne
 800072e:	ea95 0f0c 	teqne	r5, ip
 8000732:	d00c      	beq.n	800074e <__aeabi_dmul+0x206>
 8000734:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000738:	bf18      	it	ne
 800073a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800073e:	d1d1      	bne.n	80006e4 <__aeabi_dmul+0x19c>
 8000740:	ea81 0103 	eor.w	r1, r1, r3
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd70      	pop	{r4, r5, r6, pc}
 800074e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000752:	bf06      	itte	eq
 8000754:	4610      	moveq	r0, r2
 8000756:	4619      	moveq	r1, r3
 8000758:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800075c:	d019      	beq.n	8000792 <__aeabi_dmul+0x24a>
 800075e:	ea94 0f0c 	teq	r4, ip
 8000762:	d102      	bne.n	800076a <__aeabi_dmul+0x222>
 8000764:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000768:	d113      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800076a:	ea95 0f0c 	teq	r5, ip
 800076e:	d105      	bne.n	800077c <__aeabi_dmul+0x234>
 8000770:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000774:	bf1c      	itt	ne
 8000776:	4610      	movne	r0, r2
 8000778:	4619      	movne	r1, r3
 800077a:	d10a      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800077c:	ea81 0103 	eor.w	r1, r1, r3
 8000780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000784:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000788:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800078c:	f04f 0000 	mov.w	r0, #0
 8000790:	bd70      	pop	{r4, r5, r6, pc}
 8000792:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000796:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800079a:	bd70      	pop	{r4, r5, r6, pc}

0800079c <__aeabi_ddiv>:
 800079c:	b570      	push	{r4, r5, r6, lr}
 800079e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007a2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007aa:	bf1d      	ittte	ne
 80007ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b0:	ea94 0f0c 	teqne	r4, ip
 80007b4:	ea95 0f0c 	teqne	r5, ip
 80007b8:	f000 f8a7 	bleq	800090a <__aeabi_ddiv+0x16e>
 80007bc:	eba4 0405 	sub.w	r4, r4, r5
 80007c0:	ea81 0e03 	eor.w	lr, r1, r3
 80007c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007cc:	f000 8088 	beq.w	80008e0 <__aeabi_ddiv+0x144>
 80007d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007d4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007f4:	429d      	cmp	r5, r3
 80007f6:	bf08      	it	eq
 80007f8:	4296      	cmpeq	r6, r2
 80007fa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007fe:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000802:	d202      	bcs.n	800080a <__aeabi_ddiv+0x6e>
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	1ab6      	subs	r6, r6, r2
 800080c:	eb65 0503 	sbc.w	r5, r5, r3
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800081a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800081e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000822:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000826:	bf22      	ittt	cs
 8000828:	1ab6      	subcs	r6, r6, r2
 800082a:	4675      	movcs	r5, lr
 800082c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000830:	085b      	lsrs	r3, r3, #1
 8000832:	ea4f 0232 	mov.w	r2, r2, rrx
 8000836:	ebb6 0e02 	subs.w	lr, r6, r2
 800083a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800083e:	bf22      	ittt	cs
 8000840:	1ab6      	subcs	r6, r6, r2
 8000842:	4675      	movcs	r5, lr
 8000844:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000852:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000856:	bf22      	ittt	cs
 8000858:	1ab6      	subcs	r6, r6, r2
 800085a:	4675      	movcs	r5, lr
 800085c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000878:	ea55 0e06 	orrs.w	lr, r5, r6
 800087c:	d018      	beq.n	80008b0 <__aeabi_ddiv+0x114>
 800087e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000882:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000886:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800088a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800088e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000892:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000896:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800089a:	d1c0      	bne.n	800081e <__aeabi_ddiv+0x82>
 800089c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a0:	d10b      	bne.n	80008ba <__aeabi_ddiv+0x11e>
 80008a2:	ea41 0100 	orr.w	r1, r1, r0
 80008a6:	f04f 0000 	mov.w	r0, #0
 80008aa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008ae:	e7b6      	b.n	800081e <__aeabi_ddiv+0x82>
 80008b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008b4:	bf04      	itt	eq
 80008b6:	4301      	orreq	r1, r0
 80008b8:	2000      	moveq	r0, #0
 80008ba:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008be:	bf88      	it	hi
 80008c0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008c4:	f63f aeaf 	bhi.w	8000626 <__aeabi_dmul+0xde>
 80008c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80008cc:	bf04      	itt	eq
 80008ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008d6:	f150 0000 	adcs.w	r0, r0, #0
 80008da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008de:	bd70      	pop	{r4, r5, r6, pc}
 80008e0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008ec:	bfc2      	ittt	gt
 80008ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008f6:	bd70      	popgt	{r4, r5, r6, pc}
 80008f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008fc:	f04f 0e00 	mov.w	lr, #0
 8000900:	3c01      	subs	r4, #1
 8000902:	e690      	b.n	8000626 <__aeabi_dmul+0xde>
 8000904:	ea45 0e06 	orr.w	lr, r5, r6
 8000908:	e68d      	b.n	8000626 <__aeabi_dmul+0xde>
 800090a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800090e:	ea94 0f0c 	teq	r4, ip
 8000912:	bf08      	it	eq
 8000914:	ea95 0f0c 	teqeq	r5, ip
 8000918:	f43f af3b 	beq.w	8000792 <__aeabi_dmul+0x24a>
 800091c:	ea94 0f0c 	teq	r4, ip
 8000920:	d10a      	bne.n	8000938 <__aeabi_ddiv+0x19c>
 8000922:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000926:	f47f af34 	bne.w	8000792 <__aeabi_dmul+0x24a>
 800092a:	ea95 0f0c 	teq	r5, ip
 800092e:	f47f af25 	bne.w	800077c <__aeabi_dmul+0x234>
 8000932:	4610      	mov	r0, r2
 8000934:	4619      	mov	r1, r3
 8000936:	e72c      	b.n	8000792 <__aeabi_dmul+0x24a>
 8000938:	ea95 0f0c 	teq	r5, ip
 800093c:	d106      	bne.n	800094c <__aeabi_ddiv+0x1b0>
 800093e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000942:	f43f aefd 	beq.w	8000740 <__aeabi_dmul+0x1f8>
 8000946:	4610      	mov	r0, r2
 8000948:	4619      	mov	r1, r3
 800094a:	e722      	b.n	8000792 <__aeabi_dmul+0x24a>
 800094c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000950:	bf18      	it	ne
 8000952:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000956:	f47f aec5 	bne.w	80006e4 <__aeabi_dmul+0x19c>
 800095a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800095e:	f47f af0d 	bne.w	800077c <__aeabi_dmul+0x234>
 8000962:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000966:	f47f aeeb 	bne.w	8000740 <__aeabi_dmul+0x1f8>
 800096a:	e712      	b.n	8000792 <__aeabi_dmul+0x24a>

0800096c <__gedf2>:
 800096c:	f04f 3cff 	mov.w	ip, #4294967295
 8000970:	e006      	b.n	8000980 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__ledf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	e002      	b.n	8000980 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__cmpdf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000984:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000988:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800098c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000990:	bf18      	it	ne
 8000992:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000996:	d01b      	beq.n	80009d0 <__cmpdf2+0x54>
 8000998:	b001      	add	sp, #4
 800099a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800099e:	bf0c      	ite	eq
 80009a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009a4:	ea91 0f03 	teqne	r1, r3
 80009a8:	bf02      	ittt	eq
 80009aa:	ea90 0f02 	teqeq	r0, r2
 80009ae:	2000      	moveq	r0, #0
 80009b0:	4770      	bxeq	lr
 80009b2:	f110 0f00 	cmn.w	r0, #0
 80009b6:	ea91 0f03 	teq	r1, r3
 80009ba:	bf58      	it	pl
 80009bc:	4299      	cmppl	r1, r3
 80009be:	bf08      	it	eq
 80009c0:	4290      	cmpeq	r0, r2
 80009c2:	bf2c      	ite	cs
 80009c4:	17d8      	asrcs	r0, r3, #31
 80009c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009ca:	f040 0001 	orr.w	r0, r0, #1
 80009ce:	4770      	bx	lr
 80009d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d8:	d102      	bne.n	80009e0 <__cmpdf2+0x64>
 80009da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009de:	d107      	bne.n	80009f0 <__cmpdf2+0x74>
 80009e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e8:	d1d6      	bne.n	8000998 <__cmpdf2+0x1c>
 80009ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009ee:	d0d3      	beq.n	8000998 <__cmpdf2+0x1c>
 80009f0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009f4:	4770      	bx	lr
 80009f6:	bf00      	nop

080009f8 <__aeabi_cdrcmple>:
 80009f8:	4684      	mov	ip, r0
 80009fa:	4610      	mov	r0, r2
 80009fc:	4662      	mov	r2, ip
 80009fe:	468c      	mov	ip, r1
 8000a00:	4619      	mov	r1, r3
 8000a02:	4663      	mov	r3, ip
 8000a04:	e000      	b.n	8000a08 <__aeabi_cdcmpeq>
 8000a06:	bf00      	nop

08000a08 <__aeabi_cdcmpeq>:
 8000a08:	b501      	push	{r0, lr}
 8000a0a:	f7ff ffb7 	bl	800097c <__cmpdf2>
 8000a0e:	2800      	cmp	r0, #0
 8000a10:	bf48      	it	mi
 8000a12:	f110 0f00 	cmnmi.w	r0, #0
 8000a16:	bd01      	pop	{r0, pc}

08000a18 <__aeabi_dcmpeq>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff fff4 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a20:	bf0c      	ite	eq
 8000a22:	2001      	moveq	r0, #1
 8000a24:	2000      	movne	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmplt>:
 8000a2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a30:	f7ff ffea 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a34:	bf34      	ite	cc
 8000a36:	2001      	movcc	r0, #1
 8000a38:	2000      	movcs	r0, #0
 8000a3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3e:	bf00      	nop

08000a40 <__aeabi_dcmple>:
 8000a40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a44:	f7ff ffe0 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a48:	bf94      	ite	ls
 8000a4a:	2001      	movls	r0, #1
 8000a4c:	2000      	movhi	r0, #0
 8000a4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a52:	bf00      	nop

08000a54 <__aeabi_dcmpge>:
 8000a54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a58:	f7ff ffce 	bl	80009f8 <__aeabi_cdrcmple>
 8000a5c:	bf94      	ite	ls
 8000a5e:	2001      	movls	r0, #1
 8000a60:	2000      	movhi	r0, #0
 8000a62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a66:	bf00      	nop

08000a68 <__aeabi_dcmpgt>:
 8000a68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a6c:	f7ff ffc4 	bl	80009f8 <__aeabi_cdrcmple>
 8000a70:	bf34      	ite	cc
 8000a72:	2001      	movcc	r0, #1
 8000a74:	2000      	movcs	r0, #0
 8000a76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7a:	bf00      	nop

08000a7c <__aeabi_dcmpun>:
 8000a7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a84:	d102      	bne.n	8000a8c <__aeabi_dcmpun+0x10>
 8000a86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8a:	d10a      	bne.n	8000aa2 <__aeabi_dcmpun+0x26>
 8000a8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a94:	d102      	bne.n	8000a9c <__aeabi_dcmpun+0x20>
 8000a96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9a:	d102      	bne.n	8000aa2 <__aeabi_dcmpun+0x26>
 8000a9c:	f04f 0000 	mov.w	r0, #0
 8000aa0:	4770      	bx	lr
 8000aa2:	f04f 0001 	mov.w	r0, #1
 8000aa6:	4770      	bx	lr

08000aa8 <__aeabi_d2iz>:
 8000aa8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000aac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab0:	d215      	bcs.n	8000ade <__aeabi_d2iz+0x36>
 8000ab2:	d511      	bpl.n	8000ad8 <__aeabi_d2iz+0x30>
 8000ab4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ab8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000abc:	d912      	bls.n	8000ae4 <__aeabi_d2iz+0x3c>
 8000abe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ac2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ac6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aca:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ace:	fa23 f002 	lsr.w	r0, r3, r2
 8000ad2:	bf18      	it	ne
 8000ad4:	4240      	negne	r0, r0
 8000ad6:	4770      	bx	lr
 8000ad8:	f04f 0000 	mov.w	r0, #0
 8000adc:	4770      	bx	lr
 8000ade:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ae2:	d105      	bne.n	8000af0 <__aeabi_d2iz+0x48>
 8000ae4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ae8:	bf08      	it	eq
 8000aea:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aee:	4770      	bx	lr
 8000af0:	f04f 0000 	mov.w	r0, #0
 8000af4:	4770      	bx	lr
 8000af6:	bf00      	nop

08000af8 <__aeabi_d2f>:
 8000af8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000afc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b00:	bf24      	itt	cs
 8000b02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b0a:	d90d      	bls.n	8000b28 <__aeabi_d2f+0x30>
 8000b0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b20:	bf08      	it	eq
 8000b22:	f020 0001 	biceq.w	r0, r0, #1
 8000b26:	4770      	bx	lr
 8000b28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b2c:	d121      	bne.n	8000b72 <__aeabi_d2f+0x7a>
 8000b2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b32:	bfbc      	itt	lt
 8000b34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b38:	4770      	bxlt	lr
 8000b3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b42:	f1c2 0218 	rsb	r2, r2, #24
 8000b46:	f1c2 0c20 	rsb	ip, r2, #32
 8000b4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b52:	bf18      	it	ne
 8000b54:	f040 0001 	orrne.w	r0, r0, #1
 8000b58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b64:	ea40 000c 	orr.w	r0, r0, ip
 8000b68:	fa23 f302 	lsr.w	r3, r3, r2
 8000b6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b70:	e7cc      	b.n	8000b0c <__aeabi_d2f+0x14>
 8000b72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b76:	d107      	bne.n	8000b88 <__aeabi_d2f+0x90>
 8000b78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b7c:	bf1e      	ittt	ne
 8000b7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b86:	4770      	bxne	lr
 8000b88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b94:	4770      	bx	lr
 8000b96:	bf00      	nop

08000b98 <__aeabi_uldivmod>:
 8000b98:	b953      	cbnz	r3, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9a:	b94a      	cbnz	r2, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	bf08      	it	eq
 8000ba0:	2800      	cmpeq	r0, #0
 8000ba2:	bf1c      	itt	ne
 8000ba4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bac:	f000 b970 	b.w	8000e90 <__aeabi_idiv0>
 8000bb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb8:	f000 f806 	bl	8000bc8 <__udivmoddi4>
 8000bbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bc4:	b004      	add	sp, #16
 8000bc6:	4770      	bx	lr

08000bc8 <__udivmoddi4>:
 8000bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bcc:	9e08      	ldr	r6, [sp, #32]
 8000bce:	460d      	mov	r5, r1
 8000bd0:	4604      	mov	r4, r0
 8000bd2:	460f      	mov	r7, r1
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d14a      	bne.n	8000c6e <__udivmoddi4+0xa6>
 8000bd8:	428a      	cmp	r2, r1
 8000bda:	4694      	mov	ip, r2
 8000bdc:	d965      	bls.n	8000caa <__udivmoddi4+0xe2>
 8000bde:	fab2 f382 	clz	r3, r2
 8000be2:	b143      	cbz	r3, 8000bf6 <__udivmoddi4+0x2e>
 8000be4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000be8:	f1c3 0220 	rsb	r2, r3, #32
 8000bec:	409f      	lsls	r7, r3
 8000bee:	fa20 f202 	lsr.w	r2, r0, r2
 8000bf2:	4317      	orrs	r7, r2
 8000bf4:	409c      	lsls	r4, r3
 8000bf6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bfa:	fa1f f58c 	uxth.w	r5, ip
 8000bfe:	fbb7 f1fe 	udiv	r1, r7, lr
 8000c02:	0c22      	lsrs	r2, r4, #16
 8000c04:	fb0e 7711 	mls	r7, lr, r1, r7
 8000c08:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c0c:	fb01 f005 	mul.w	r0, r1, r5
 8000c10:	4290      	cmp	r0, r2
 8000c12:	d90a      	bls.n	8000c2a <__udivmoddi4+0x62>
 8000c14:	eb1c 0202 	adds.w	r2, ip, r2
 8000c18:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c1c:	f080 811c 	bcs.w	8000e58 <__udivmoddi4+0x290>
 8000c20:	4290      	cmp	r0, r2
 8000c22:	f240 8119 	bls.w	8000e58 <__udivmoddi4+0x290>
 8000c26:	3902      	subs	r1, #2
 8000c28:	4462      	add	r2, ip
 8000c2a:	1a12      	subs	r2, r2, r0
 8000c2c:	b2a4      	uxth	r4, r4
 8000c2e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c32:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c36:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c3a:	fb00 f505 	mul.w	r5, r0, r5
 8000c3e:	42a5      	cmp	r5, r4
 8000c40:	d90a      	bls.n	8000c58 <__udivmoddi4+0x90>
 8000c42:	eb1c 0404 	adds.w	r4, ip, r4
 8000c46:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c4a:	f080 8107 	bcs.w	8000e5c <__udivmoddi4+0x294>
 8000c4e:	42a5      	cmp	r5, r4
 8000c50:	f240 8104 	bls.w	8000e5c <__udivmoddi4+0x294>
 8000c54:	4464      	add	r4, ip
 8000c56:	3802      	subs	r0, #2
 8000c58:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c5c:	1b64      	subs	r4, r4, r5
 8000c5e:	2100      	movs	r1, #0
 8000c60:	b11e      	cbz	r6, 8000c6a <__udivmoddi4+0xa2>
 8000c62:	40dc      	lsrs	r4, r3
 8000c64:	2300      	movs	r3, #0
 8000c66:	e9c6 4300 	strd	r4, r3, [r6]
 8000c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6e:	428b      	cmp	r3, r1
 8000c70:	d908      	bls.n	8000c84 <__udivmoddi4+0xbc>
 8000c72:	2e00      	cmp	r6, #0
 8000c74:	f000 80ed 	beq.w	8000e52 <__udivmoddi4+0x28a>
 8000c78:	2100      	movs	r1, #0
 8000c7a:	e9c6 0500 	strd	r0, r5, [r6]
 8000c7e:	4608      	mov	r0, r1
 8000c80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c84:	fab3 f183 	clz	r1, r3
 8000c88:	2900      	cmp	r1, #0
 8000c8a:	d149      	bne.n	8000d20 <__udivmoddi4+0x158>
 8000c8c:	42ab      	cmp	r3, r5
 8000c8e:	d302      	bcc.n	8000c96 <__udivmoddi4+0xce>
 8000c90:	4282      	cmp	r2, r0
 8000c92:	f200 80f8 	bhi.w	8000e86 <__udivmoddi4+0x2be>
 8000c96:	1a84      	subs	r4, r0, r2
 8000c98:	eb65 0203 	sbc.w	r2, r5, r3
 8000c9c:	2001      	movs	r0, #1
 8000c9e:	4617      	mov	r7, r2
 8000ca0:	2e00      	cmp	r6, #0
 8000ca2:	d0e2      	beq.n	8000c6a <__udivmoddi4+0xa2>
 8000ca4:	e9c6 4700 	strd	r4, r7, [r6]
 8000ca8:	e7df      	b.n	8000c6a <__udivmoddi4+0xa2>
 8000caa:	b902      	cbnz	r2, 8000cae <__udivmoddi4+0xe6>
 8000cac:	deff      	udf	#255	; 0xff
 8000cae:	fab2 f382 	clz	r3, r2
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	f040 8090 	bne.w	8000dd8 <__udivmoddi4+0x210>
 8000cb8:	1a8a      	subs	r2, r1, r2
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2101      	movs	r1, #1
 8000cc4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000cc8:	fb07 2015 	mls	r0, r7, r5, r2
 8000ccc:	0c22      	lsrs	r2, r4, #16
 8000cce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cd2:	fb0e f005 	mul.w	r0, lr, r5
 8000cd6:	4290      	cmp	r0, r2
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x124>
 8000cda:	eb1c 0202 	adds.w	r2, ip, r2
 8000cde:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x122>
 8000ce4:	4290      	cmp	r0, r2
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2b8>
 8000cea:	4645      	mov	r5, r8
 8000cec:	1a12      	subs	r2, r2, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000cf4:	fb07 2210 	mls	r2, r7, r0, r2
 8000cf8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x14e>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x14c>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2c2>
 8000d14:	4610      	mov	r0, r2
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d1e:	e79f      	b.n	8000c60 <__udivmoddi4+0x98>
 8000d20:	f1c1 0720 	rsb	r7, r1, #32
 8000d24:	408b      	lsls	r3, r1
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa05 f401 	lsl.w	r4, r5, r1
 8000d32:	fa20 f307 	lsr.w	r3, r0, r7
 8000d36:	40fd      	lsrs	r5, r7
 8000d38:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3c:	4323      	orrs	r3, r4
 8000d3e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d42:	fa1f fe8c 	uxth.w	lr, ip
 8000d46:	fb09 5518 	mls	r5, r9, r8, r5
 8000d4a:	0c1c      	lsrs	r4, r3, #16
 8000d4c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d50:	fb08 f50e 	mul.w	r5, r8, lr
 8000d54:	42a5      	cmp	r5, r4
 8000d56:	fa02 f201 	lsl.w	r2, r2, r1
 8000d5a:	fa00 f001 	lsl.w	r0, r0, r1
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b0>
 8000d60:	eb1c 0404 	adds.w	r4, ip, r4
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2b4>
 8000d6c:	42a5      	cmp	r5, r4
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2b4>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4464      	add	r4, ip
 8000d78:	1b64      	subs	r4, r4, r5
 8000d7a:	b29d      	uxth	r5, r3
 8000d7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d80:	fb09 4413 	mls	r4, r9, r3, r4
 8000d84:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d88:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d8c:	45a6      	cmp	lr, r4
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1da>
 8000d90:	eb1c 0404 	adds.w	r4, ip, r4
 8000d94:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2ac>
 8000d9a:	45a6      	cmp	lr, r4
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2ac>
 8000d9e:	3b02      	subs	r3, #2
 8000da0:	4464      	add	r4, ip
 8000da2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000da6:	fba3 9502 	umull	r9, r5, r3, r2
 8000daa:	eba4 040e 	sub.w	r4, r4, lr
 8000dae:	42ac      	cmp	r4, r5
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46ae      	mov	lr, r5
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x29c>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x298>
 8000db8:	b156      	cbz	r6, 8000dd0 <__udivmoddi4+0x208>
 8000dba:	ebb0 0208 	subs.w	r2, r0, r8
 8000dbe:	eb64 040e 	sbc.w	r4, r4, lr
 8000dc2:	fa04 f707 	lsl.w	r7, r4, r7
 8000dc6:	40ca      	lsrs	r2, r1
 8000dc8:	40cc      	lsrs	r4, r1
 8000dca:	4317      	orrs	r7, r2
 8000dcc:	e9c6 7400 	strd	r7, r4, [r6]
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dd8:	f1c3 0120 	rsb	r1, r3, #32
 8000ddc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000de0:	fa20 f201 	lsr.w	r2, r0, r1
 8000de4:	fa25 f101 	lsr.w	r1, r5, r1
 8000de8:	409d      	lsls	r5, r3
 8000dea:	432a      	orrs	r2, r5
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000df8:	fb07 1510 	mls	r5, r7, r0, r1
 8000dfc:	0c11      	lsrs	r1, r2, #16
 8000dfe:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000e02:	fb00 f50e 	mul.w	r5, r0, lr
 8000e06:	428d      	cmp	r5, r1
 8000e08:	fa04 f403 	lsl.w	r4, r4, r3
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x258>
 8000e0e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b0>
 8000e18:	428d      	cmp	r5, r1
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b0>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4461      	add	r1, ip
 8000e20:	1b49      	subs	r1, r1, r5
 8000e22:	b292      	uxth	r2, r2
 8000e24:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e28:	fb07 1115 	mls	r1, r7, r5, r1
 8000e2c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e30:	fb05 f10e 	mul.w	r1, r5, lr
 8000e34:	4291      	cmp	r1, r2
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x282>
 8000e38:	eb1c 0202 	adds.w	r2, ip, r2
 8000e3c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2a8>
 8000e42:	4291      	cmp	r1, r2
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2a8>
 8000e46:	3d02      	subs	r5, #2
 8000e48:	4462      	add	r2, ip
 8000e4a:	1a52      	subs	r2, r2, r1
 8000e4c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0xfc>
 8000e52:	4631      	mov	r1, r6
 8000e54:	4630      	mov	r0, r6
 8000e56:	e708      	b.n	8000c6a <__udivmoddi4+0xa2>
 8000e58:	4639      	mov	r1, r7
 8000e5a:	e6e6      	b.n	8000c2a <__udivmoddi4+0x62>
 8000e5c:	4610      	mov	r0, r2
 8000e5e:	e6fb      	b.n	8000c58 <__udivmoddi4+0x90>
 8000e60:	4548      	cmp	r0, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f0>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e6c:	3b01      	subs	r3, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f0>
 8000e70:	4645      	mov	r5, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x282>
 8000e74:	462b      	mov	r3, r5
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1da>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x258>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b0>
 8000e80:	3d02      	subs	r5, #2
 8000e82:	4462      	add	r2, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x124>
 8000e86:	4608      	mov	r0, r1
 8000e88:	e70a      	b.n	8000ca0 <__udivmoddi4+0xd8>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x14e>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop

08000e94 <EncoderSetting>:
 */
#include "main.h"
#include "Encoder.h"

void EncoderSetting(EncoderRead *enc,TIM_HandleTypeDef *htim,int count_PerRevol,double deltaT)
{
 8000e94:	b480      	push	{r7}
 8000e96:	b087      	sub	sp, #28
 8000e98:	af00      	add	r7, sp, #0
 8000e9a:	6178      	str	r0, [r7, #20]
 8000e9c:	6139      	str	r1, [r7, #16]
 8000e9e:	60fa      	str	r2, [r7, #12]
 8000ea0:	ed87 0b00 	vstr	d0, [r7]
	enc->htim = htim;
 8000ea4:	697b      	ldr	r3, [r7, #20]
 8000ea6:	693a      	ldr	r2, [r7, #16]
 8000ea8:	601a      	str	r2, [r3, #0]
	enc->count_PerRevol = count_PerRevol;
 8000eaa:	697b      	ldr	r3, [r7, #20]
 8000eac:	68fa      	ldr	r2, [r7, #12]
 8000eae:	615a      	str	r2, [r3, #20]
	enc->deltaT = deltaT;
 8000eb0:	6979      	ldr	r1, [r7, #20]
 8000eb2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000eb6:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40
}
 8000eba:	bf00      	nop
 8000ebc:	371c      	adds	r7, #28
 8000ebe:	46bd      	mov	sp, r7
 8000ec0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec4:	4770      	bx	lr
	...

08000ec8 <SpeedReadNonReset>:
	enc->count_X4 = 0;
}



void SpeedReadNonReset(EncoderRead *enc){
 8000ec8:	b5b0      	push	{r4, r5, r7, lr}
 8000eca:	b082      	sub	sp, #8
 8000ecc:	af00      	add	r7, sp, #0
 8000ece:	6078      	str	r0, [r7, #4]

	enc->count_Timer = __HAL_TIM_GET_COUNTER(enc->htim);
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ed8:	b21a      	sxth	r2, r3
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	809a      	strh	r2, [r3, #4]
	enc->count_X4 += enc->count_Timer;
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	689b      	ldr	r3, [r3, #8]
 8000ee2:	687a      	ldr	r2, [r7, #4]
 8000ee4:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8000ee8:	441a      	add	r2, r3
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	609a      	str	r2, [r3, #8]
	__HAL_TIM_SET_COUNTER(enc->htim,0);
 8000eee:	687b      	ldr	r3, [r7, #4]
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	2200      	movs	r2, #0
 8000ef6:	625a      	str	r2, [r3, #36]	; 0x24
	enc->vel_Real = ((enc->count_X4-enc->count_Pre)/enc->deltaT)/(enc->count_PerRevol*4)*60;
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	689a      	ldr	r2, [r3, #8]
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	691b      	ldr	r3, [r3, #16]
 8000f00:	1ad3      	subs	r3, r2, r3
 8000f02:	4618      	mov	r0, r3
 8000f04:	f7ff fab6 	bl	8000474 <__aeabi_i2d>
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	e9d3 2310 	ldrd	r2, r3, [r3, #64]	; 0x40
 8000f0e:	f7ff fc45 	bl	800079c <__aeabi_ddiv>
 8000f12:	4602      	mov	r2, r0
 8000f14:	460b      	mov	r3, r1
 8000f16:	4614      	mov	r4, r2
 8000f18:	461d      	mov	r5, r3
 8000f1a:	687b      	ldr	r3, [r7, #4]
 8000f1c:	695b      	ldr	r3, [r3, #20]
 8000f1e:	009b      	lsls	r3, r3, #2
 8000f20:	4618      	mov	r0, r3
 8000f22:	f7ff faa7 	bl	8000474 <__aeabi_i2d>
 8000f26:	4602      	mov	r2, r0
 8000f28:	460b      	mov	r3, r1
 8000f2a:	4620      	mov	r0, r4
 8000f2c:	4629      	mov	r1, r5
 8000f2e:	f7ff fc35 	bl	800079c <__aeabi_ddiv>
 8000f32:	4602      	mov	r2, r0
 8000f34:	460b      	mov	r3, r1
 8000f36:	4610      	mov	r0, r2
 8000f38:	4619      	mov	r1, r3
 8000f3a:	f04f 0200 	mov.w	r2, #0
 8000f3e:	4b28      	ldr	r3, [pc, #160]	; (8000fe0 <SpeedReadNonReset+0x118>)
 8000f40:	f7ff fb02 	bl	8000548 <__aeabi_dmul>
 8000f44:	4602      	mov	r2, r0
 8000f46:	460b      	mov	r3, r1
 8000f48:	6879      	ldr	r1, [r7, #4]
 8000f4a:	e9c1 2308 	strd	r2, r3, [r1, #32]
	enc->vel_Fil = 0.854 * enc->vel_Fil + 0.0728 * enc->vel_Real+ 0.0728 * enc->vel_Pre;
 8000f4e:	687b      	ldr	r3, [r7, #4]
 8000f50:	e9d3 010c 	ldrd	r0, r1, [r3, #48]	; 0x30
 8000f54:	a31e      	add	r3, pc, #120	; (adr r3, 8000fd0 <SpeedReadNonReset+0x108>)
 8000f56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f5a:	f7ff faf5 	bl	8000548 <__aeabi_dmul>
 8000f5e:	4602      	mov	r2, r0
 8000f60:	460b      	mov	r3, r1
 8000f62:	4614      	mov	r4, r2
 8000f64:	461d      	mov	r5, r3
 8000f66:	687b      	ldr	r3, [r7, #4]
 8000f68:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8000f6c:	a31a      	add	r3, pc, #104	; (adr r3, 8000fd8 <SpeedReadNonReset+0x110>)
 8000f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f72:	f7ff fae9 	bl	8000548 <__aeabi_dmul>
 8000f76:	4602      	mov	r2, r0
 8000f78:	460b      	mov	r3, r1
 8000f7a:	4620      	mov	r0, r4
 8000f7c:	4629      	mov	r1, r5
 8000f7e:	f7ff f92d 	bl	80001dc <__adddf3>
 8000f82:	4602      	mov	r2, r0
 8000f84:	460b      	mov	r3, r1
 8000f86:	4614      	mov	r4, r2
 8000f88:	461d      	mov	r5, r3
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 8000f90:	a311      	add	r3, pc, #68	; (adr r3, 8000fd8 <SpeedReadNonReset+0x110>)
 8000f92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f96:	f7ff fad7 	bl	8000548 <__aeabi_dmul>
 8000f9a:	4602      	mov	r2, r0
 8000f9c:	460b      	mov	r3, r1
 8000f9e:	4620      	mov	r0, r4
 8000fa0:	4629      	mov	r1, r5
 8000fa2:	f7ff f91b 	bl	80001dc <__adddf3>
 8000fa6:	4602      	mov	r2, r0
 8000fa8:	460b      	mov	r3, r1
 8000faa:	6879      	ldr	r1, [r7, #4]
 8000fac:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
	enc->vel_Pre = enc->vel_Real;
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8000fb6:	6879      	ldr	r1, [r7, #4]
 8000fb8:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
	enc->count_Pre = enc->count_X4;
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	689a      	ldr	r2, [r3, #8]
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	611a      	str	r2, [r3, #16]
}
 8000fc4:	bf00      	nop
 8000fc6:	3708      	adds	r7, #8
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	bdb0      	pop	{r4, r5, r7, pc}
 8000fcc:	f3af 8000 	nop.w
 8000fd0:	ced91687 	.word	0xced91687
 8000fd4:	3feb53f7 	.word	0x3feb53f7
 8000fd8:	532617c2 	.word	0x532617c2
 8000fdc:	3fb2a305 	.word	0x3fb2a305
 8000fe0:	404e0000 	.word	0x404e0000

08000fe4 <CountRead>:

double CountRead(EncoderRead *enc,uint8_t count_mode){
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	b082      	sub	sp, #8
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	6078      	str	r0, [r7, #4]
 8000fec:	460b      	mov	r3, r1
 8000fee:	70fb      	strb	r3, [r7, #3]
	enc->count_Mode = count_mode;
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	78fa      	ldrb	r2, [r7, #3]
 8000ff4:	761a      	strb	r2, [r3, #24]
	enc->count_Timer = __HAL_TIM_GET_COUNTER(enc->htim);
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ffe:	b21a      	sxth	r2, r3
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	809a      	strh	r2, [r3, #4]
	enc->count_X4 += enc->count_Timer;
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	689b      	ldr	r3, [r3, #8]
 8001008:	687a      	ldr	r2, [r7, #4]
 800100a:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800100e:	441a      	add	r2, r3
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	609a      	str	r2, [r3, #8]
	__HAL_TIM_SET_COUNTER(enc->htim,0);
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	2200      	movs	r2, #0
 800101c:	625a      	str	r2, [r3, #36]	; 0x24

	if (enc->count_Mode == count_ModeX4)
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	7e1b      	ldrb	r3, [r3, #24]
 8001022:	2b01      	cmp	r3, #1
 8001024:	d107      	bne.n	8001036 <CountRead+0x52>
	{
		return enc->count_X4;
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	689b      	ldr	r3, [r3, #8]
 800102a:	4618      	mov	r0, r3
 800102c:	f7ff fa22 	bl	8000474 <__aeabi_i2d>
 8001030:	4602      	mov	r2, r0
 8001032:	460b      	mov	r3, r1
 8001034:	e033      	b.n	800109e <CountRead+0xba>
	}else if (enc->count_Mode == count_ModeX1)
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	7e1b      	ldrb	r3, [r3, #24]
 800103a:	2b00      	cmp	r3, #0
 800103c:	d110      	bne.n	8001060 <CountRead+0x7c>
	{
		enc->count_X1 = enc->count_X4/4;
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	689b      	ldr	r3, [r3, #8]
 8001042:	2b00      	cmp	r3, #0
 8001044:	da00      	bge.n	8001048 <CountRead+0x64>
 8001046:	3303      	adds	r3, #3
 8001048:	109b      	asrs	r3, r3, #2
 800104a:	461a      	mov	r2, r3
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	60da      	str	r2, [r3, #12]
		return enc->count_X1;
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	68db      	ldr	r3, [r3, #12]
 8001054:	4618      	mov	r0, r3
 8001056:	f7ff fa0d 	bl	8000474 <__aeabi_i2d>
 800105a:	4602      	mov	r2, r0
 800105c:	460b      	mov	r3, r1
 800105e:	e01e      	b.n	800109e <CountRead+0xba>
	}else if (enc->count_Mode == count_ModeDegree)
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	7e1b      	ldrb	r3, [r3, #24]
 8001064:	2b02      	cmp	r3, #2
 8001066:	d116      	bne.n	8001096 <CountRead+0xb2>
	{
		enc->Degree = enc->count_X4*360/(enc->count_PerRevol*4);
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	689b      	ldr	r3, [r3, #8]
 800106c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8001070:	fb03 f202 	mul.w	r2, r3, r2
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	695b      	ldr	r3, [r3, #20]
 8001078:	009b      	lsls	r3, r3, #2
 800107a:	fb92 f3f3 	sdiv	r3, r2, r3
 800107e:	4618      	mov	r0, r3
 8001080:	f7ff f9f8 	bl	8000474 <__aeabi_i2d>
 8001084:	4602      	mov	r2, r0
 8001086:	460b      	mov	r3, r1
 8001088:	6879      	ldr	r1, [r7, #4]
 800108a:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
		return enc->Degree;
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8001094:	e003      	b.n	800109e <CountRead+0xba>
	}else {
		return 0;
 8001096:	f04f 0200 	mov.w	r2, #0
 800109a:	f04f 0300 	mov.w	r3, #0
	}
}
 800109e:	ec43 2b17 	vmov	d7, r2, r3
 80010a2:	eeb0 0a47 	vmov.f32	s0, s14
 80010a6:	eef0 0a67 	vmov.f32	s1, s15
 80010aa:	3708      	adds	r7, #8
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bd80      	pop	{r7, pc}

080010b0 <Drive>:
 */

#include "MotorDrive.h"
#include "stdlib.h"

void Drive(MotorDrive *motor,TIM_HandleTypeDef *htim2,int Input,unsigned int Channel1,unsigned int Channel2){
 80010b0:	b480      	push	{r7}
 80010b2:	b085      	sub	sp, #20
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	60f8      	str	r0, [r7, #12]
 80010b8:	60b9      	str	r1, [r7, #8]
 80010ba:	607a      	str	r2, [r7, #4]
 80010bc:	603b      	str	r3, [r7, #0]
	motor->htim2 = htim2;
 80010be:	68fb      	ldr	r3, [r7, #12]
 80010c0:	68ba      	ldr	r2, [r7, #8]
 80010c2:	605a      	str	r2, [r3, #4]
	motor->Pwm = abs(Input);
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	bfb8      	it	lt
 80010ca:	425b      	neglt	r3, r3
 80010cc:	b29a      	uxth	r2, r3
 80010ce:	68fb      	ldr	r3, [r7, #12]
 80010d0:	81da      	strh	r2, [r3, #14]
	motor->Channel1 = Channel1;
 80010d2:	68fb      	ldr	r3, [r7, #12]
 80010d4:	683a      	ldr	r2, [r7, #0]
 80010d6:	611a      	str	r2, [r3, #16]
	motor->Channel2 = Channel2;
 80010d8:	68fb      	ldr	r3, [r7, #12]
 80010da:	69ba      	ldr	r2, [r7, #24]
 80010dc:	615a      	str	r2, [r3, #20]

	if(Input<0){
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	da4d      	bge.n	8001180 <Drive+0xd0>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel1,0);
 80010e4:	68fb      	ldr	r3, [r7, #12]
 80010e6:	691b      	ldr	r3, [r3, #16]
 80010e8:	2b00      	cmp	r3, #0
 80010ea:	d105      	bne.n	80010f8 <Drive+0x48>
 80010ec:	68fb      	ldr	r3, [r7, #12]
 80010ee:	685b      	ldr	r3, [r3, #4]
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	2200      	movs	r2, #0
 80010f4:	635a      	str	r2, [r3, #52]	; 0x34
 80010f6:	e018      	b.n	800112a <Drive+0x7a>
 80010f8:	68fb      	ldr	r3, [r7, #12]
 80010fa:	691b      	ldr	r3, [r3, #16]
 80010fc:	2b04      	cmp	r3, #4
 80010fe:	d105      	bne.n	800110c <Drive+0x5c>
 8001100:	68fb      	ldr	r3, [r7, #12]
 8001102:	685b      	ldr	r3, [r3, #4]
 8001104:	681a      	ldr	r2, [r3, #0]
 8001106:	2300      	movs	r3, #0
 8001108:	6393      	str	r3, [r2, #56]	; 0x38
 800110a:	e00e      	b.n	800112a <Drive+0x7a>
 800110c:	68fb      	ldr	r3, [r7, #12]
 800110e:	691b      	ldr	r3, [r3, #16]
 8001110:	2b08      	cmp	r3, #8
 8001112:	d105      	bne.n	8001120 <Drive+0x70>
 8001114:	68fb      	ldr	r3, [r7, #12]
 8001116:	685b      	ldr	r3, [r3, #4]
 8001118:	681a      	ldr	r2, [r3, #0]
 800111a:	2300      	movs	r3, #0
 800111c:	63d3      	str	r3, [r2, #60]	; 0x3c
 800111e:	e004      	b.n	800112a <Drive+0x7a>
 8001120:	68fb      	ldr	r3, [r7, #12]
 8001122:	685b      	ldr	r3, [r3, #4]
 8001124:	681a      	ldr	r2, [r3, #0]
 8001126:	2300      	movs	r3, #0
 8001128:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,motor->Pwm);
 800112a:	68fb      	ldr	r3, [r7, #12]
 800112c:	695b      	ldr	r3, [r3, #20]
 800112e:	2b00      	cmp	r3, #0
 8001130:	d106      	bne.n	8001140 <Drive+0x90>
 8001132:	68fb      	ldr	r3, [r7, #12]
 8001134:	89da      	ldrh	r2, [r3, #14]
 8001136:	68fb      	ldr	r3, [r7, #12]
 8001138:	685b      	ldr	r3, [r3, #4]
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	635a      	str	r2, [r3, #52]	; 0x34
	else{
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel1,0);
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
	}

}
 800113e:	e0b7      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,motor->Pwm);
 8001140:	68fb      	ldr	r3, [r7, #12]
 8001142:	695b      	ldr	r3, [r3, #20]
 8001144:	2b04      	cmp	r3, #4
 8001146:	d107      	bne.n	8001158 <Drive+0xa8>
 8001148:	68fb      	ldr	r3, [r7, #12]
 800114a:	89d9      	ldrh	r1, [r3, #14]
 800114c:	68fb      	ldr	r3, [r7, #12]
 800114e:	685b      	ldr	r3, [r3, #4]
 8001150:	681a      	ldr	r2, [r3, #0]
 8001152:	460b      	mov	r3, r1
 8001154:	6393      	str	r3, [r2, #56]	; 0x38
 8001156:	e0ab      	b.n	80012b0 <Drive+0x200>
 8001158:	68fb      	ldr	r3, [r7, #12]
 800115a:	695b      	ldr	r3, [r3, #20]
 800115c:	2b08      	cmp	r3, #8
 800115e:	d107      	bne.n	8001170 <Drive+0xc0>
 8001160:	68fb      	ldr	r3, [r7, #12]
 8001162:	89d9      	ldrh	r1, [r3, #14]
 8001164:	68fb      	ldr	r3, [r7, #12]
 8001166:	685b      	ldr	r3, [r3, #4]
 8001168:	681a      	ldr	r2, [r3, #0]
 800116a:	460b      	mov	r3, r1
 800116c:	63d3      	str	r3, [r2, #60]	; 0x3c
 800116e:	e09f      	b.n	80012b0 <Drive+0x200>
 8001170:	68fb      	ldr	r3, [r7, #12]
 8001172:	89d9      	ldrh	r1, [r3, #14]
 8001174:	68fb      	ldr	r3, [r7, #12]
 8001176:	685b      	ldr	r3, [r3, #4]
 8001178:	681a      	ldr	r2, [r3, #0]
 800117a:	460b      	mov	r3, r1
 800117c:	6413      	str	r3, [r2, #64]	; 0x40
}
 800117e:	e097      	b.n	80012b0 <Drive+0x200>
	else if(Input>0){
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	2b00      	cmp	r3, #0
 8001184:	dd4d      	ble.n	8001222 <Drive+0x172>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel1,motor->Pwm);
 8001186:	68fb      	ldr	r3, [r7, #12]
 8001188:	691b      	ldr	r3, [r3, #16]
 800118a:	2b00      	cmp	r3, #0
 800118c:	d106      	bne.n	800119c <Drive+0xec>
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	89da      	ldrh	r2, [r3, #14]
 8001192:	68fb      	ldr	r3, [r7, #12]
 8001194:	685b      	ldr	r3, [r3, #4]
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	635a      	str	r2, [r3, #52]	; 0x34
 800119a:	e01e      	b.n	80011da <Drive+0x12a>
 800119c:	68fb      	ldr	r3, [r7, #12]
 800119e:	691b      	ldr	r3, [r3, #16]
 80011a0:	2b04      	cmp	r3, #4
 80011a2:	d107      	bne.n	80011b4 <Drive+0x104>
 80011a4:	68fb      	ldr	r3, [r7, #12]
 80011a6:	89d9      	ldrh	r1, [r3, #14]
 80011a8:	68fb      	ldr	r3, [r7, #12]
 80011aa:	685b      	ldr	r3, [r3, #4]
 80011ac:	681a      	ldr	r2, [r3, #0]
 80011ae:	460b      	mov	r3, r1
 80011b0:	6393      	str	r3, [r2, #56]	; 0x38
 80011b2:	e012      	b.n	80011da <Drive+0x12a>
 80011b4:	68fb      	ldr	r3, [r7, #12]
 80011b6:	691b      	ldr	r3, [r3, #16]
 80011b8:	2b08      	cmp	r3, #8
 80011ba:	d107      	bne.n	80011cc <Drive+0x11c>
 80011bc:	68fb      	ldr	r3, [r7, #12]
 80011be:	89d9      	ldrh	r1, [r3, #14]
 80011c0:	68fb      	ldr	r3, [r7, #12]
 80011c2:	685b      	ldr	r3, [r3, #4]
 80011c4:	681a      	ldr	r2, [r3, #0]
 80011c6:	460b      	mov	r3, r1
 80011c8:	63d3      	str	r3, [r2, #60]	; 0x3c
 80011ca:	e006      	b.n	80011da <Drive+0x12a>
 80011cc:	68fb      	ldr	r3, [r7, #12]
 80011ce:	89d9      	ldrh	r1, [r3, #14]
 80011d0:	68fb      	ldr	r3, [r7, #12]
 80011d2:	685b      	ldr	r3, [r3, #4]
 80011d4:	681a      	ldr	r2, [r3, #0]
 80011d6:	460b      	mov	r3, r1
 80011d8:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	695b      	ldr	r3, [r3, #20]
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d105      	bne.n	80011ee <Drive+0x13e>
 80011e2:	68fb      	ldr	r3, [r7, #12]
 80011e4:	685b      	ldr	r3, [r3, #4]
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	2200      	movs	r2, #0
 80011ea:	635a      	str	r2, [r3, #52]	; 0x34
}
 80011ec:	e060      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 80011ee:	68fb      	ldr	r3, [r7, #12]
 80011f0:	695b      	ldr	r3, [r3, #20]
 80011f2:	2b04      	cmp	r3, #4
 80011f4:	d105      	bne.n	8001202 <Drive+0x152>
 80011f6:	68fb      	ldr	r3, [r7, #12]
 80011f8:	685b      	ldr	r3, [r3, #4]
 80011fa:	681a      	ldr	r2, [r3, #0]
 80011fc:	2300      	movs	r3, #0
 80011fe:	6393      	str	r3, [r2, #56]	; 0x38
 8001200:	e056      	b.n	80012b0 <Drive+0x200>
 8001202:	68fb      	ldr	r3, [r7, #12]
 8001204:	695b      	ldr	r3, [r3, #20]
 8001206:	2b08      	cmp	r3, #8
 8001208:	d105      	bne.n	8001216 <Drive+0x166>
 800120a:	68fb      	ldr	r3, [r7, #12]
 800120c:	685b      	ldr	r3, [r3, #4]
 800120e:	681a      	ldr	r2, [r3, #0]
 8001210:	2300      	movs	r3, #0
 8001212:	63d3      	str	r3, [r2, #60]	; 0x3c
 8001214:	e04c      	b.n	80012b0 <Drive+0x200>
 8001216:	68fb      	ldr	r3, [r7, #12]
 8001218:	685b      	ldr	r3, [r3, #4]
 800121a:	681a      	ldr	r2, [r3, #0]
 800121c:	2300      	movs	r3, #0
 800121e:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001220:	e046      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel1,0);
 8001222:	68fb      	ldr	r3, [r7, #12]
 8001224:	691b      	ldr	r3, [r3, #16]
 8001226:	2b00      	cmp	r3, #0
 8001228:	d105      	bne.n	8001236 <Drive+0x186>
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	685b      	ldr	r3, [r3, #4]
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	2200      	movs	r2, #0
 8001232:	635a      	str	r2, [r3, #52]	; 0x34
 8001234:	e018      	b.n	8001268 <Drive+0x1b8>
 8001236:	68fb      	ldr	r3, [r7, #12]
 8001238:	691b      	ldr	r3, [r3, #16]
 800123a:	2b04      	cmp	r3, #4
 800123c:	d105      	bne.n	800124a <Drive+0x19a>
 800123e:	68fb      	ldr	r3, [r7, #12]
 8001240:	685b      	ldr	r3, [r3, #4]
 8001242:	681a      	ldr	r2, [r3, #0]
 8001244:	2300      	movs	r3, #0
 8001246:	6393      	str	r3, [r2, #56]	; 0x38
 8001248:	e00e      	b.n	8001268 <Drive+0x1b8>
 800124a:	68fb      	ldr	r3, [r7, #12]
 800124c:	691b      	ldr	r3, [r3, #16]
 800124e:	2b08      	cmp	r3, #8
 8001250:	d105      	bne.n	800125e <Drive+0x1ae>
 8001252:	68fb      	ldr	r3, [r7, #12]
 8001254:	685b      	ldr	r3, [r3, #4]
 8001256:	681a      	ldr	r2, [r3, #0]
 8001258:	2300      	movs	r3, #0
 800125a:	63d3      	str	r3, [r2, #60]	; 0x3c
 800125c:	e004      	b.n	8001268 <Drive+0x1b8>
 800125e:	68fb      	ldr	r3, [r7, #12]
 8001260:	685b      	ldr	r3, [r3, #4]
 8001262:	681a      	ldr	r2, [r3, #0]
 8001264:	2300      	movs	r3, #0
 8001266:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 8001268:	68fb      	ldr	r3, [r7, #12]
 800126a:	695b      	ldr	r3, [r3, #20]
 800126c:	2b00      	cmp	r3, #0
 800126e:	d105      	bne.n	800127c <Drive+0x1cc>
 8001270:	68fb      	ldr	r3, [r7, #12]
 8001272:	685b      	ldr	r3, [r3, #4]
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	2200      	movs	r2, #0
 8001278:	635a      	str	r2, [r3, #52]	; 0x34
}
 800127a:	e019      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	695b      	ldr	r3, [r3, #20]
 8001280:	2b04      	cmp	r3, #4
 8001282:	d105      	bne.n	8001290 <Drive+0x1e0>
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	685b      	ldr	r3, [r3, #4]
 8001288:	681a      	ldr	r2, [r3, #0]
 800128a:	2300      	movs	r3, #0
 800128c:	6393      	str	r3, [r2, #56]	; 0x38
}
 800128e:	e00f      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 8001290:	68fb      	ldr	r3, [r7, #12]
 8001292:	695b      	ldr	r3, [r3, #20]
 8001294:	2b08      	cmp	r3, #8
 8001296:	d105      	bne.n	80012a4 <Drive+0x1f4>
 8001298:	68fb      	ldr	r3, [r7, #12]
 800129a:	685b      	ldr	r3, [r3, #4]
 800129c:	681a      	ldr	r2, [r3, #0]
 800129e:	2300      	movs	r3, #0
 80012a0:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 80012a2:	e005      	b.n	80012b0 <Drive+0x200>
		__HAL_TIM_SET_COMPARE(motor->htim2,motor->Channel2,0);
 80012a4:	68fb      	ldr	r3, [r7, #12]
 80012a6:	685b      	ldr	r3, [r3, #4]
 80012a8:	681a      	ldr	r2, [r3, #0]
 80012aa:	2300      	movs	r3, #0
 80012ac:	6413      	str	r3, [r2, #64]	; 0x40
}
 80012ae:	e7ff      	b.n	80012b0 <Drive+0x200>
 80012b0:	bf00      	nop
 80012b2:	3714      	adds	r7, #20
 80012b4:	46bd      	mov	sp, r7
 80012b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ba:	4770      	bx	lr

080012bc <vApplicationGetIdleTaskMemory>:
/* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
static StaticTask_t xIdleTaskTCBBuffer;
static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];

void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )
{
 80012bc:	b480      	push	{r7}
 80012be:	b085      	sub	sp, #20
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	60f8      	str	r0, [r7, #12]
 80012c4:	60b9      	str	r1, [r7, #8]
 80012c6:	607a      	str	r2, [r7, #4]
  *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 80012c8:	68fb      	ldr	r3, [r7, #12]
 80012ca:	4a07      	ldr	r2, [pc, #28]	; (80012e8 <vApplicationGetIdleTaskMemory+0x2c>)
 80012cc:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &xIdleStack[0];
 80012ce:	68bb      	ldr	r3, [r7, #8]
 80012d0:	4a06      	ldr	r2, [pc, #24]	; (80012ec <vApplicationGetIdleTaskMemory+0x30>)
 80012d2:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	2280      	movs	r2, #128	; 0x80
 80012d8:	601a      	str	r2, [r3, #0]
  /* place for user code */
}
 80012da:	bf00      	nop
 80012dc:	3714      	adds	r7, #20
 80012de:	46bd      	mov	sp, r7
 80012e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012e4:	4770      	bx	lr
 80012e6:	bf00      	nop
 80012e8:	2000011c 	.word	0x2000011c
 80012ec:	20000170 	.word	0x20000170

080012f0 <Kalman_getAngle>:
    .Q_angle = 0.001f,
    .Q_bias = 0.003f,
    .R_measure = 0.03f,
};
int Kalman_getAngle(Kalman_t *Kalman, double newAngle, double newRate, double dt)
{
 80012f0:	b5b0      	push	{r4, r5, r7, lr}
 80012f2:	b096      	sub	sp, #88	; 0x58
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	61f8      	str	r0, [r7, #28]
 80012f8:	ed87 0b04 	vstr	d0, [r7, #16]
 80012fc:	ed87 1b02 	vstr	d1, [r7, #8]
 8001300:	ed87 2b00 	vstr	d2, [r7]
    double rate = newRate - Kalman->bias;
 8001304:	69fb      	ldr	r3, [r7, #28]
 8001306:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800130a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800130e:	f7fe ff63 	bl	80001d8 <__aeabi_dsub>
 8001312:	4602      	mov	r2, r0
 8001314:	460b      	mov	r3, r1
 8001316:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
    Kalman->angle += dt * rate;
 800131a:	69fb      	ldr	r3, [r7, #28]
 800131c:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 8001320:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8001324:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001328:	f7ff f90e 	bl	8000548 <__aeabi_dmul>
 800132c:	4602      	mov	r2, r0
 800132e:	460b      	mov	r3, r1
 8001330:	4620      	mov	r0, r4
 8001332:	4629      	mov	r1, r5
 8001334:	f7fe ff52 	bl	80001dc <__adddf3>
 8001338:	4602      	mov	r2, r0
 800133a:	460b      	mov	r3, r1
 800133c:	69f9      	ldr	r1, [r7, #28]
 800133e:	e9c1 2306 	strd	r2, r3, [r1, #24]

    Kalman->P[0][0] += dt * (dt * Kalman->P[1][1] - Kalman->P[0][1] - Kalman->P[1][0] + Kalman->Q_angle);
 8001342:	69fb      	ldr	r3, [r7, #28]
 8001344:	e9d3 450a 	ldrd	r4, r5, [r3, #40]	; 0x28
 8001348:	69fb      	ldr	r3, [r7, #28]
 800134a:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 800134e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001352:	f7ff f8f9 	bl	8000548 <__aeabi_dmul>
 8001356:	4602      	mov	r2, r0
 8001358:	460b      	mov	r3, r1
 800135a:	4610      	mov	r0, r2
 800135c:	4619      	mov	r1, r3
 800135e:	69fb      	ldr	r3, [r7, #28]
 8001360:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 8001364:	f7fe ff38 	bl	80001d8 <__aeabi_dsub>
 8001368:	4602      	mov	r2, r0
 800136a:	460b      	mov	r3, r1
 800136c:	4610      	mov	r0, r2
 800136e:	4619      	mov	r1, r3
 8001370:	69fb      	ldr	r3, [r7, #28]
 8001372:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	; 0x38
 8001376:	f7fe ff2f 	bl	80001d8 <__aeabi_dsub>
 800137a:	4602      	mov	r2, r0
 800137c:	460b      	mov	r3, r1
 800137e:	4610      	mov	r0, r2
 8001380:	4619      	mov	r1, r3
 8001382:	69fb      	ldr	r3, [r7, #28]
 8001384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001388:	f7fe ff28 	bl	80001dc <__adddf3>
 800138c:	4602      	mov	r2, r0
 800138e:	460b      	mov	r3, r1
 8001390:	4610      	mov	r0, r2
 8001392:	4619      	mov	r1, r3
 8001394:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001398:	f7ff f8d6 	bl	8000548 <__aeabi_dmul>
 800139c:	4602      	mov	r2, r0
 800139e:	460b      	mov	r3, r1
 80013a0:	4620      	mov	r0, r4
 80013a2:	4629      	mov	r1, r5
 80013a4:	f7fe ff1a 	bl	80001dc <__adddf3>
 80013a8:	4602      	mov	r2, r0
 80013aa:	460b      	mov	r3, r1
 80013ac:	69f9      	ldr	r1, [r7, #28]
 80013ae:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    Kalman->P[0][1] -= dt * Kalman->P[1][1];
 80013b2:	69fb      	ldr	r3, [r7, #28]
 80013b4:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	; 0x30
 80013b8:	69fb      	ldr	r3, [r7, #28]
 80013ba:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 80013be:	e9d7 2300 	ldrd	r2, r3, [r7]
 80013c2:	f7ff f8c1 	bl	8000548 <__aeabi_dmul>
 80013c6:	4602      	mov	r2, r0
 80013c8:	460b      	mov	r3, r1
 80013ca:	4620      	mov	r0, r4
 80013cc:	4629      	mov	r1, r5
 80013ce:	f7fe ff03 	bl	80001d8 <__aeabi_dsub>
 80013d2:	4602      	mov	r2, r0
 80013d4:	460b      	mov	r3, r1
 80013d6:	69f9      	ldr	r1, [r7, #28]
 80013d8:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    Kalman->P[1][0] -= dt * Kalman->P[1][1];
 80013dc:	69fb      	ldr	r3, [r7, #28]
 80013de:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 80013e2:	69fb      	ldr	r3, [r7, #28]
 80013e4:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 80013e8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80013ec:	f7ff f8ac 	bl	8000548 <__aeabi_dmul>
 80013f0:	4602      	mov	r2, r0
 80013f2:	460b      	mov	r3, r1
 80013f4:	4620      	mov	r0, r4
 80013f6:	4629      	mov	r1, r5
 80013f8:	f7fe feee 	bl	80001d8 <__aeabi_dsub>
 80013fc:	4602      	mov	r2, r0
 80013fe:	460b      	mov	r3, r1
 8001400:	69f9      	ldr	r1, [r7, #28]
 8001402:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
    Kalman->P[1][1] += Kalman->Q_bias * dt;
 8001406:	69fb      	ldr	r3, [r7, #28]
 8001408:	e9d3 4510 	ldrd	r4, r5, [r3, #64]	; 0x40
 800140c:	69fb      	ldr	r3, [r7, #28]
 800140e:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8001412:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001416:	f7ff f897 	bl	8000548 <__aeabi_dmul>
 800141a:	4602      	mov	r2, r0
 800141c:	460b      	mov	r3, r1
 800141e:	4620      	mov	r0, r4
 8001420:	4629      	mov	r1, r5
 8001422:	f7fe fedb 	bl	80001dc <__adddf3>
 8001426:	4602      	mov	r2, r0
 8001428:	460b      	mov	r3, r1
 800142a:	69f9      	ldr	r1, [r7, #28]
 800142c:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40

    double S = Kalman->P[0][0] + Kalman->R_measure;
 8001430:	69fb      	ldr	r3, [r7, #28]
 8001432:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 8001436:	69fb      	ldr	r3, [r7, #28]
 8001438:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 800143c:	f7fe fece 	bl	80001dc <__adddf3>
 8001440:	4602      	mov	r2, r0
 8001442:	460b      	mov	r3, r1
 8001444:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48
    double K[2];
    K[0] = Kalman->P[0][0] / S;
 8001448:	69fb      	ldr	r3, [r7, #28]
 800144a:	e9d3 010a 	ldrd	r0, r1, [r3, #40]	; 0x28
 800144e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8001452:	f7ff f9a3 	bl	800079c <__aeabi_ddiv>
 8001456:	4602      	mov	r2, r0
 8001458:	460b      	mov	r3, r1
 800145a:	e9c7 2308 	strd	r2, r3, [r7, #32]
    K[1] = Kalman->P[1][0] / S;
 800145e:	69fb      	ldr	r3, [r7, #28]
 8001460:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	; 0x38
 8001464:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8001468:	f7ff f998 	bl	800079c <__aeabi_ddiv>
 800146c:	4602      	mov	r2, r0
 800146e:	460b      	mov	r3, r1
 8001470:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28

    double y = newAngle - Kalman->angle;
 8001474:	69fb      	ldr	r3, [r7, #28]
 8001476:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 800147a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800147e:	f7fe feab 	bl	80001d8 <__aeabi_dsub>
 8001482:	4602      	mov	r2, r0
 8001484:	460b      	mov	r3, r1
 8001486:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
    Kalman->angle += K[0] * y;
 800148a:	69fb      	ldr	r3, [r7, #28]
 800148c:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 8001490:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001494:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8001498:	f7ff f856 	bl	8000548 <__aeabi_dmul>
 800149c:	4602      	mov	r2, r0
 800149e:	460b      	mov	r3, r1
 80014a0:	4620      	mov	r0, r4
 80014a2:	4629      	mov	r1, r5
 80014a4:	f7fe fe9a 	bl	80001dc <__adddf3>
 80014a8:	4602      	mov	r2, r0
 80014aa:	460b      	mov	r3, r1
 80014ac:	69f9      	ldr	r1, [r7, #28]
 80014ae:	e9c1 2306 	strd	r2, r3, [r1, #24]
    Kalman->bias += K[1] * y;
 80014b2:	69fb      	ldr	r3, [r7, #28]
 80014b4:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 80014b8:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 80014bc:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80014c0:	f7ff f842 	bl	8000548 <__aeabi_dmul>
 80014c4:	4602      	mov	r2, r0
 80014c6:	460b      	mov	r3, r1
 80014c8:	4620      	mov	r0, r4
 80014ca:	4629      	mov	r1, r5
 80014cc:	f7fe fe86 	bl	80001dc <__adddf3>
 80014d0:	4602      	mov	r2, r0
 80014d2:	460b      	mov	r3, r1
 80014d4:	69f9      	ldr	r1, [r7, #28]
 80014d6:	e9c1 2308 	strd	r2, r3, [r1, #32]

    double P00_temp = Kalman->P[0][0];
 80014da:	69fb      	ldr	r3, [r7, #28]
 80014dc:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 80014e0:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    double P01_temp = Kalman->P[0][1];
 80014e4:	69fb      	ldr	r3, [r7, #28]
 80014e6:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	; 0x30
 80014ea:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30

    Kalman->P[0][0] -= K[0] * P00_temp;
 80014ee:	69fb      	ldr	r3, [r7, #28]
 80014f0:	e9d3 450a 	ldrd	r4, r5, [r3, #40]	; 0x28
 80014f4:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80014f8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80014fc:	f7ff f824 	bl	8000548 <__aeabi_dmul>
 8001500:	4602      	mov	r2, r0
 8001502:	460b      	mov	r3, r1
 8001504:	4620      	mov	r0, r4
 8001506:	4629      	mov	r1, r5
 8001508:	f7fe fe66 	bl	80001d8 <__aeabi_dsub>
 800150c:	4602      	mov	r2, r0
 800150e:	460b      	mov	r3, r1
 8001510:	69f9      	ldr	r1, [r7, #28]
 8001512:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    Kalman->P[0][1] -= K[0] * P01_temp;
 8001516:	69fb      	ldr	r3, [r7, #28]
 8001518:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	; 0x30
 800151c:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001520:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8001524:	f7ff f810 	bl	8000548 <__aeabi_dmul>
 8001528:	4602      	mov	r2, r0
 800152a:	460b      	mov	r3, r1
 800152c:	4620      	mov	r0, r4
 800152e:	4629      	mov	r1, r5
 8001530:	f7fe fe52 	bl	80001d8 <__aeabi_dsub>
 8001534:	4602      	mov	r2, r0
 8001536:	460b      	mov	r3, r1
 8001538:	69f9      	ldr	r1, [r7, #28]
 800153a:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    Kalman->P[1][0] -= K[1] * P00_temp;
 800153e:	69fb      	ldr	r3, [r7, #28]
 8001540:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	; 0x38
 8001544:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8001548:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800154c:	f7fe fffc 	bl	8000548 <__aeabi_dmul>
 8001550:	4602      	mov	r2, r0
 8001552:	460b      	mov	r3, r1
 8001554:	4620      	mov	r0, r4
 8001556:	4629      	mov	r1, r5
 8001558:	f7fe fe3e 	bl	80001d8 <__aeabi_dsub>
 800155c:	4602      	mov	r2, r0
 800155e:	460b      	mov	r3, r1
 8001560:	69f9      	ldr	r1, [r7, #28]
 8001562:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
    Kalman->P[1][1] -= K[1] * P01_temp;
 8001566:	69fb      	ldr	r3, [r7, #28]
 8001568:	e9d3 4510 	ldrd	r4, r5, [r3, #64]	; 0x40
 800156c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8001570:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8001574:	f7fe ffe8 	bl	8000548 <__aeabi_dmul>
 8001578:	4602      	mov	r2, r0
 800157a:	460b      	mov	r3, r1
 800157c:	4620      	mov	r0, r4
 800157e:	4629      	mov	r1, r5
 8001580:	f7fe fe2a 	bl	80001d8 <__aeabi_dsub>
 8001584:	4602      	mov	r2, r0
 8001586:	460b      	mov	r3, r1
 8001588:	69f9      	ldr	r1, [r7, #28]
 800158a:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40

    return Kalman->angle;
 800158e:	69fb      	ldr	r3, [r7, #28]
 8001590:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8001594:	4610      	mov	r0, r2
 8001596:	4619      	mov	r1, r3
 8001598:	f7ff fa86 	bl	8000aa8 <__aeabi_d2iz>
 800159c:	4603      	mov	r3, r0
};
 800159e:	4618      	mov	r0, r3
 80015a0:	3758      	adds	r7, #88	; 0x58
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bdb0      	pop	{r4, r5, r7, pc}
	...

080015a8 <MPU6050_Init>:

uint8_t MPU6050_Init()
{
 80015a8:	b580      	push	{r7, lr}
 80015aa:	b086      	sub	sp, #24
 80015ac:	af04      	add	r7, sp, #16
    uint8_t check;
    uint8_t Data;

    // check device ID WHO_AM_I

    HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, i2c_timeout);
 80015ae:	2364      	movs	r3, #100	; 0x64
 80015b0:	9302      	str	r3, [sp, #8]
 80015b2:	2301      	movs	r3, #1
 80015b4:	9301      	str	r3, [sp, #4]
 80015b6:	1dfb      	adds	r3, r7, #7
 80015b8:	9300      	str	r3, [sp, #0]
 80015ba:	2301      	movs	r3, #1
 80015bc:	2275      	movs	r2, #117	; 0x75
 80015be:	21d0      	movs	r1, #208	; 0xd0
 80015c0:	4822      	ldr	r0, [pc, #136]	; (800164c <MPU6050_Init+0xa4>)
 80015c2:	f002 f809 	bl	80035d8 <HAL_I2C_Mem_Read>

    if (check == 104) // 0x68 will be returned by the sensor if everything goes well
 80015c6:	79fb      	ldrb	r3, [r7, #7]
 80015c8:	2b68      	cmp	r3, #104	; 0x68
 80015ca:	d139      	bne.n	8001640 <MPU6050_Init+0x98>
    {
        // power management register 0X6B we should write all 0's to wake the sensor up
        Data = 0;
 80015cc:	2300      	movs	r3, #0
 80015ce:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, PWR_MGMT_1_REG, 1, &Data, 1, i2c_timeout);
 80015d0:	2364      	movs	r3, #100	; 0x64
 80015d2:	9302      	str	r3, [sp, #8]
 80015d4:	2301      	movs	r3, #1
 80015d6:	9301      	str	r3, [sp, #4]
 80015d8:	1dbb      	adds	r3, r7, #6
 80015da:	9300      	str	r3, [sp, #0]
 80015dc:	2301      	movs	r3, #1
 80015de:	226b      	movs	r2, #107	; 0x6b
 80015e0:	21d0      	movs	r1, #208	; 0xd0
 80015e2:	481a      	ldr	r0, [pc, #104]	; (800164c <MPU6050_Init+0xa4>)
 80015e4:	f001 fefe 	bl	80033e4 <HAL_I2C_Mem_Write>

        // Set DATA RATE of 1KHz by writing SMPLRT_DIV register
        Data = 0x07;
 80015e8:	2307      	movs	r3, #7
 80015ea:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, SMPLRT_DIV_REG, 1, &Data, 1, i2c_timeout);
 80015ec:	2364      	movs	r3, #100	; 0x64
 80015ee:	9302      	str	r3, [sp, #8]
 80015f0:	2301      	movs	r3, #1
 80015f2:	9301      	str	r3, [sp, #4]
 80015f4:	1dbb      	adds	r3, r7, #6
 80015f6:	9300      	str	r3, [sp, #0]
 80015f8:	2301      	movs	r3, #1
 80015fa:	2219      	movs	r2, #25
 80015fc:	21d0      	movs	r1, #208	; 0xd0
 80015fe:	4813      	ldr	r0, [pc, #76]	; (800164c <MPU6050_Init+0xa4>)
 8001600:	f001 fef0 	bl	80033e4 <HAL_I2C_Mem_Write>

        // Set accelerometer configuration in ACCEL_CONFIG Register
        // XA_ST=0,YA_ST=0,ZA_ST=0, FS_SEL=0 -> � 2g
        Data = 0x00;
 8001604:	2300      	movs	r3, #0
 8001606:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, ACCEL_CONFIG_REG, 1, &Data, 1, i2c_timeout);
 8001608:	2364      	movs	r3, #100	; 0x64
 800160a:	9302      	str	r3, [sp, #8]
 800160c:	2301      	movs	r3, #1
 800160e:	9301      	str	r3, [sp, #4]
 8001610:	1dbb      	adds	r3, r7, #6
 8001612:	9300      	str	r3, [sp, #0]
 8001614:	2301      	movs	r3, #1
 8001616:	221c      	movs	r2, #28
 8001618:	21d0      	movs	r1, #208	; 0xd0
 800161a:	480c      	ldr	r0, [pc, #48]	; (800164c <MPU6050_Init+0xa4>)
 800161c:	f001 fee2 	bl	80033e4 <HAL_I2C_Mem_Write>

        // Set Gyroscopic configuration in GYRO_CONFIG Register
        // XG_ST=0,YG_ST=0,ZG_ST=0, FS_SEL=0 -> � 250 �/s
        Data = 0x00;
 8001620:	2300      	movs	r3, #0
 8001622:	71bb      	strb	r3, [r7, #6]
        HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, GYRO_CONFIG_REG, 1, &Data, 1, i2c_timeout);
 8001624:	2364      	movs	r3, #100	; 0x64
 8001626:	9302      	str	r3, [sp, #8]
 8001628:	2301      	movs	r3, #1
 800162a:	9301      	str	r3, [sp, #4]
 800162c:	1dbb      	adds	r3, r7, #6
 800162e:	9300      	str	r3, [sp, #0]
 8001630:	2301      	movs	r3, #1
 8001632:	221b      	movs	r2, #27
 8001634:	21d0      	movs	r1, #208	; 0xd0
 8001636:	4805      	ldr	r0, [pc, #20]	; (800164c <MPU6050_Init+0xa4>)
 8001638:	f001 fed4 	bl	80033e4 <HAL_I2C_Mem_Write>
        return 0;
 800163c:	2300      	movs	r3, #0
 800163e:	e000      	b.n	8001642 <MPU6050_Init+0x9a>
    }
    return 1;
 8001640:	2301      	movs	r3, #1
}
 8001642:	4618      	mov	r0, r3
 8001644:	3708      	adds	r7, #8
 8001646:	46bd      	mov	sp, r7
 8001648:	bd80      	pop	{r7, pc}
 800164a:	bf00      	nop
 800164c:	20000370 	.word	0x20000370

08001650 <MPU6050_Read_All>:
void MPU6050_Read_All(MPU6050_t *DataStruct)
{
 8001650:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001654:	b094      	sub	sp, #80	; 0x50
 8001656:	af04      	add	r7, sp, #16
 8001658:	6078      	str	r0, [r7, #4]
    uint8_t Rec_Data[14];
    int16_t temp;

    // Read 14 BYTES of data starting from ACCEL_XOUT_H register

    HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, ACCEL_XOUT_H_REG, 1, Rec_Data, 14, i2c_timeout);
 800165a:	2364      	movs	r3, #100	; 0x64
 800165c:	9302      	str	r3, [sp, #8]
 800165e:	230e      	movs	r3, #14
 8001660:	9301      	str	r3, [sp, #4]
 8001662:	f107 0308 	add.w	r3, r7, #8
 8001666:	9300      	str	r3, [sp, #0]
 8001668:	2301      	movs	r3, #1
 800166a:	223b      	movs	r2, #59	; 0x3b
 800166c:	21d0      	movs	r1, #208	; 0xd0
 800166e:	488e      	ldr	r0, [pc, #568]	; (80018a8 <MPU6050_Read_All+0x258>)
 8001670:	f001 ffb2 	bl	80035d8 <HAL_I2C_Mem_Read>

    DataStruct->Accel_X_RAW = (int16_t)(Rec_Data[0] << 8 | Rec_Data[1]);
 8001674:	7a3b      	ldrb	r3, [r7, #8]
 8001676:	021b      	lsls	r3, r3, #8
 8001678:	b21a      	sxth	r2, r3
 800167a:	7a7b      	ldrb	r3, [r7, #9]
 800167c:	b21b      	sxth	r3, r3
 800167e:	4313      	orrs	r3, r2
 8001680:	b21a      	sxth	r2, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	801a      	strh	r2, [r3, #0]
    DataStruct->Accel_Y_RAW = (int16_t)(Rec_Data[2] << 8 | Rec_Data[3]);
 8001686:	7abb      	ldrb	r3, [r7, #10]
 8001688:	021b      	lsls	r3, r3, #8
 800168a:	b21a      	sxth	r2, r3
 800168c:	7afb      	ldrb	r3, [r7, #11]
 800168e:	b21b      	sxth	r3, r3
 8001690:	4313      	orrs	r3, r2
 8001692:	b21a      	sxth	r2, r3
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	805a      	strh	r2, [r3, #2]
    DataStruct->Accel_Z_RAW = (int16_t)(Rec_Data[4] << 8 | Rec_Data[5]);
 8001698:	7b3b      	ldrb	r3, [r7, #12]
 800169a:	021b      	lsls	r3, r3, #8
 800169c:	b21a      	sxth	r2, r3
 800169e:	7b7b      	ldrb	r3, [r7, #13]
 80016a0:	b21b      	sxth	r3, r3
 80016a2:	4313      	orrs	r3, r2
 80016a4:	b21a      	sxth	r2, r3
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	809a      	strh	r2, [r3, #4]
    temp = (int16_t)(Rec_Data[6] << 8 | Rec_Data[7]);
 80016aa:	7bbb      	ldrb	r3, [r7, #14]
 80016ac:	021b      	lsls	r3, r3, #8
 80016ae:	b21a      	sxth	r2, r3
 80016b0:	7bfb      	ldrb	r3, [r7, #15]
 80016b2:	b21b      	sxth	r3, r3
 80016b4:	4313      	orrs	r3, r2
 80016b6:	86fb      	strh	r3, [r7, #54]	; 0x36
    DataStruct->Gyro_X_RAW = (int16_t)(Rec_Data[8] << 8 | Rec_Data[9]);
 80016b8:	7c3b      	ldrb	r3, [r7, #16]
 80016ba:	021b      	lsls	r3, r3, #8
 80016bc:	b21a      	sxth	r2, r3
 80016be:	7c7b      	ldrb	r3, [r7, #17]
 80016c0:	b21b      	sxth	r3, r3
 80016c2:	4313      	orrs	r3, r2
 80016c4:	b21a      	sxth	r2, r3
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	841a      	strh	r2, [r3, #32]
    DataStruct->Gyro_Y_RAW = (int16_t)(Rec_Data[10] << 8 | Rec_Data[11]);
 80016ca:	7cbb      	ldrb	r3, [r7, #18]
 80016cc:	021b      	lsls	r3, r3, #8
 80016ce:	b21a      	sxth	r2, r3
 80016d0:	7cfb      	ldrb	r3, [r7, #19]
 80016d2:	b21b      	sxth	r3, r3
 80016d4:	4313      	orrs	r3, r2
 80016d6:	b21a      	sxth	r2, r3
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	845a      	strh	r2, [r3, #34]	; 0x22
    DataStruct->Gyro_Z_RAW = (int16_t)(Rec_Data[12] << 8 | Rec_Data[13]);
 80016dc:	7d3b      	ldrb	r3, [r7, #20]
 80016de:	021b      	lsls	r3, r3, #8
 80016e0:	b21a      	sxth	r2, r3
 80016e2:	7d7b      	ldrb	r3, [r7, #21]
 80016e4:	b21b      	sxth	r3, r3
 80016e6:	4313      	orrs	r3, r2
 80016e8:	b21a      	sxth	r2, r3
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	849a      	strh	r2, [r3, #36]	; 0x24

    DataStruct->Ax = DataStruct->Accel_X_RAW / 16384.0;
 80016ee:	687b      	ldr	r3, [r7, #4]
 80016f0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80016f4:	4618      	mov	r0, r3
 80016f6:	f7fe febd 	bl	8000474 <__aeabi_i2d>
 80016fa:	f04f 0200 	mov.w	r2, #0
 80016fe:	4b6b      	ldr	r3, [pc, #428]	; (80018ac <MPU6050_Read_All+0x25c>)
 8001700:	f7ff f84c 	bl	800079c <__aeabi_ddiv>
 8001704:	4602      	mov	r2, r0
 8001706:	460b      	mov	r3, r1
 8001708:	6879      	ldr	r1, [r7, #4]
 800170a:	e9c1 2302 	strd	r2, r3, [r1, #8]
    DataStruct->Ay = DataStruct->Accel_Y_RAW / 16384.0;
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001714:	4618      	mov	r0, r3
 8001716:	f7fe fead 	bl	8000474 <__aeabi_i2d>
 800171a:	f04f 0200 	mov.w	r2, #0
 800171e:	4b63      	ldr	r3, [pc, #396]	; (80018ac <MPU6050_Read_All+0x25c>)
 8001720:	f7ff f83c 	bl	800079c <__aeabi_ddiv>
 8001724:	4602      	mov	r2, r0
 8001726:	460b      	mov	r3, r1
 8001728:	6879      	ldr	r1, [r7, #4]
 800172a:	e9c1 2304 	strd	r2, r3, [r1, #16]
    DataStruct->Az = DataStruct->Accel_Z_RAW / Accel_Z_corrector;
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001734:	4618      	mov	r0, r3
 8001736:	f7fe fe9d 	bl	8000474 <__aeabi_i2d>
 800173a:	a355      	add	r3, pc, #340	; (adr r3, 8001890 <MPU6050_Read_All+0x240>)
 800173c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001740:	f7ff f82c 	bl	800079c <__aeabi_ddiv>
 8001744:	4602      	mov	r2, r0
 8001746:	460b      	mov	r3, r1
 8001748:	6879      	ldr	r1, [r7, #4]
 800174a:	e9c1 2306 	strd	r2, r3, [r1, #24]
    DataStruct->Temperature = (float)((int16_t)temp / (float)340.0 + (float)36.53);
 800174e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	; 0x36
 8001752:	ee07 3a90 	vmov	s15, r3
 8001756:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800175a:	eddf 6a55 	vldr	s13, [pc, #340]	; 80018b0 <MPU6050_Read_All+0x260>
 800175e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001762:	ed9f 7a54 	vldr	s14, [pc, #336]	; 80018b4 <MPU6050_Read_All+0x264>
 8001766:	ee77 7a87 	vadd.f32	s15, s15, s14
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40
    DataStruct->Gx = DataStruct->Gyro_X_RAW / 131.0;
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8001776:	4618      	mov	r0, r3
 8001778:	f7fe fe7c 	bl	8000474 <__aeabi_i2d>
 800177c:	a346      	add	r3, pc, #280	; (adr r3, 8001898 <MPU6050_Read_All+0x248>)
 800177e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001782:	f7ff f80b 	bl	800079c <__aeabi_ddiv>
 8001786:	4602      	mov	r2, r0
 8001788:	460b      	mov	r3, r1
 800178a:	6879      	ldr	r1, [r7, #4]
 800178c:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
    DataStruct->Gy = DataStruct->Gyro_Y_RAW / 131.0;
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8001796:	4618      	mov	r0, r3
 8001798:	f7fe fe6c 	bl	8000474 <__aeabi_i2d>
 800179c:	a33e      	add	r3, pc, #248	; (adr r3, 8001898 <MPU6050_Read_All+0x248>)
 800179e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017a2:	f7fe fffb 	bl	800079c <__aeabi_ddiv>
 80017a6:	4602      	mov	r2, r0
 80017a8:	460b      	mov	r3, r1
 80017aa:	6879      	ldr	r1, [r7, #4]
 80017ac:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
    DataStruct->Gz = DataStruct->Gyro_Z_RAW / 131.0;
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80017b6:	4618      	mov	r0, r3
 80017b8:	f7fe fe5c 	bl	8000474 <__aeabi_i2d>
 80017bc:	a336      	add	r3, pc, #216	; (adr r3, 8001898 <MPU6050_Read_All+0x248>)
 80017be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017c2:	f7fe ffeb 	bl	800079c <__aeabi_ddiv>
 80017c6:	4602      	mov	r2, r0
 80017c8:	460b      	mov	r3, r1
 80017ca:	6879      	ldr	r1, [r7, #4]
 80017cc:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38

    // Kalman angle solve
    double dt = (double)(HAL_GetTick() - timer) / 1000;
 80017d0:	f001 fa3a 	bl	8002c48 <HAL_GetTick>
 80017d4:	4602      	mov	r2, r0
 80017d6:	4b38      	ldr	r3, [pc, #224]	; (80018b8 <MPU6050_Read_All+0x268>)
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	1ad3      	subs	r3, r2, r3
 80017dc:	4618      	mov	r0, r3
 80017de:	f7fe fe39 	bl	8000454 <__aeabi_ui2d>
 80017e2:	f04f 0200 	mov.w	r2, #0
 80017e6:	4b35      	ldr	r3, [pc, #212]	; (80018bc <MPU6050_Read_All+0x26c>)
 80017e8:	f7fe ffd8 	bl	800079c <__aeabi_ddiv>
 80017ec:	4602      	mov	r2, r0
 80017ee:	460b      	mov	r3, r1
 80017f0:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    timer = HAL_GetTick();
 80017f4:	f001 fa28 	bl	8002c48 <HAL_GetTick>
 80017f8:	4603      	mov	r3, r0
 80017fa:	4a2f      	ldr	r2, [pc, #188]	; (80018b8 <MPU6050_Read_All+0x268>)
 80017fc:	6013      	str	r3, [r2, #0]
    double roll;
    double roll_sqrt = sqrt(
        DataStruct->Accel_X_RAW * DataStruct->Accel_X_RAW + DataStruct->Accel_Z_RAW * DataStruct->Accel_Z_RAW);
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001804:	461a      	mov	r2, r3
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	f9b3 3000 	ldrsh.w	r3, [r3]
 800180c:	fb03 f202 	mul.w	r2, r3, r2
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001816:	4619      	mov	r1, r3
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800181e:	fb01 f303 	mul.w	r3, r1, r3
 8001822:	4413      	add	r3, r2
    double roll_sqrt = sqrt(
 8001824:	4618      	mov	r0, r3
 8001826:	f7fe fe25 	bl	8000474 <__aeabi_i2d>
 800182a:	4602      	mov	r2, r0
 800182c:	460b      	mov	r3, r1
 800182e:	ec43 2b10 	vmov	d0, r2, r3
 8001832:	f005 fbef 	bl	8007014 <sqrt>
 8001836:	ed87 0b08 	vstr	d0, [r7, #32]
    if (roll_sqrt != 0.0)
 800183a:	f04f 0200 	mov.w	r2, #0
 800183e:	f04f 0300 	mov.w	r3, #0
 8001842:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001846:	f7ff f8e7 	bl	8000a18 <__aeabi_dcmpeq>
 800184a:	4603      	mov	r3, r0
 800184c:	2b00      	cmp	r3, #0
 800184e:	d137      	bne.n	80018c0 <MPU6050_Read_All+0x270>
    {
        roll = atan(DataStruct->Accel_Y_RAW / roll_sqrt) * RAD_TO_DEG;
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001856:	4618      	mov	r0, r3
 8001858:	f7fe fe0c 	bl	8000474 <__aeabi_i2d>
 800185c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8001860:	f7fe ff9c 	bl	800079c <__aeabi_ddiv>
 8001864:	4602      	mov	r2, r0
 8001866:	460b      	mov	r3, r1
 8001868:	ec43 2b17 	vmov	d7, r2, r3
 800186c:	eeb0 0a47 	vmov.f32	s0, s14
 8001870:	eef0 0a67 	vmov.f32	s1, s15
 8001874:	f005 fbfc 	bl	8007070 <atan>
 8001878:	ec51 0b10 	vmov	r0, r1, d0
 800187c:	a308      	add	r3, pc, #32	; (adr r3, 80018a0 <MPU6050_Read_All+0x250>)
 800187e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001882:	f7fe fe61 	bl	8000548 <__aeabi_dmul>
 8001886:	4602      	mov	r2, r0
 8001888:	460b      	mov	r3, r1
 800188a:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 800188e:	e01d      	b.n	80018cc <MPU6050_Read_All+0x27c>
 8001890:	00000000 	.word	0x00000000
 8001894:	40cc2900 	.word	0x40cc2900
 8001898:	00000000 	.word	0x00000000
 800189c:	40606000 	.word	0x40606000
 80018a0:	1a63c1f8 	.word	0x1a63c1f8
 80018a4:	404ca5dc 	.word	0x404ca5dc
 80018a8:	20000370 	.word	0x20000370
 80018ac:	40d00000 	.word	0x40d00000
 80018b0:	43aa0000 	.word	0x43aa0000
 80018b4:	42121eb8 	.word	0x42121eb8
 80018b8:	200004a4 	.word	0x200004a4
 80018bc:	408f4000 	.word	0x408f4000
    }
    else
    {
        roll = 0.0;
 80018c0:	f04f 0200 	mov.w	r2, #0
 80018c4:	f04f 0300 	mov.w	r3, #0
 80018c8:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
    }
    double pitch = atan2(-DataStruct->Accel_X_RAW, DataStruct->Accel_Z_RAW) * RAD_TO_DEG;
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80018d2:	425b      	negs	r3, r3
 80018d4:	4618      	mov	r0, r3
 80018d6:	f7fe fdcd 	bl	8000474 <__aeabi_i2d>
 80018da:	4682      	mov	sl, r0
 80018dc:	468b      	mov	fp, r1
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80018e4:	4618      	mov	r0, r3
 80018e6:	f7fe fdc5 	bl	8000474 <__aeabi_i2d>
 80018ea:	4602      	mov	r2, r0
 80018ec:	460b      	mov	r3, r1
 80018ee:	ec43 2b11 	vmov	d1, r2, r3
 80018f2:	ec4b ab10 	vmov	d0, sl, fp
 80018f6:	f005 fb8b 	bl	8007010 <atan2>
 80018fa:	ec51 0b10 	vmov	r0, r1, d0
 80018fe:	a34a      	add	r3, pc, #296	; (adr r3, 8001a28 <MPU6050_Read_All+0x3d8>)
 8001900:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001904:	f7fe fe20 	bl	8000548 <__aeabi_dmul>
 8001908:	4602      	mov	r2, r0
 800190a:	460b      	mov	r3, r1
 800190c:	e9c7 2306 	strd	r2, r3, [r7, #24]
    if ((pitch < -90 && DataStruct->KalmanAngleY > 90) || (pitch > 90 && DataStruct->KalmanAngleY < -90))
 8001910:	f04f 0200 	mov.w	r2, #0
 8001914:	4b40      	ldr	r3, [pc, #256]	; (8001a18 <MPU6050_Read_All+0x3c8>)
 8001916:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800191a:	f7ff f887 	bl	8000a2c <__aeabi_dcmplt>
 800191e:	4603      	mov	r3, r0
 8001920:	2b00      	cmp	r3, #0
 8001922:	d00a      	beq.n	800193a <MPU6050_Read_All+0x2ea>
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 800192a:	f04f 0200 	mov.w	r2, #0
 800192e:	4b3b      	ldr	r3, [pc, #236]	; (8001a1c <MPU6050_Read_All+0x3cc>)
 8001930:	f7ff f89a 	bl	8000a68 <__aeabi_dcmpgt>
 8001934:	4603      	mov	r3, r0
 8001936:	2b00      	cmp	r3, #0
 8001938:	d114      	bne.n	8001964 <MPU6050_Read_All+0x314>
 800193a:	f04f 0200 	mov.w	r2, #0
 800193e:	4b37      	ldr	r3, [pc, #220]	; (8001a1c <MPU6050_Read_All+0x3cc>)
 8001940:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001944:	f7ff f890 	bl	8000a68 <__aeabi_dcmpgt>
 8001948:	4603      	mov	r3, r0
 800194a:	2b00      	cmp	r3, #0
 800194c:	d015      	beq.n	800197a <MPU6050_Read_All+0x32a>
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8001954:	f04f 0200 	mov.w	r2, #0
 8001958:	4b2f      	ldr	r3, [pc, #188]	; (8001a18 <MPU6050_Read_All+0x3c8>)
 800195a:	f7ff f867 	bl	8000a2c <__aeabi_dcmplt>
 800195e:	4603      	mov	r3, r0
 8001960:	2b00      	cmp	r3, #0
 8001962:	d00a      	beq.n	800197a <MPU6050_Read_All+0x32a>
    {
        KalmanY.angle = pitch;
 8001964:	492e      	ldr	r1, [pc, #184]	; (8001a20 <MPU6050_Read_All+0x3d0>)
 8001966:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800196a:	e9c1 2306 	strd	r2, r3, [r1, #24]
        DataStruct->KalmanAngleY = pitch;
 800196e:	6879      	ldr	r1, [r7, #4]
 8001970:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001974:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
 8001978:	e016      	b.n	80019a8 <MPU6050_Read_All+0x358>
    }
    else
    {
        DataStruct->KalmanAngleY = Kalman_getAngle(&KalmanY, pitch, DataStruct->Gy, dt);
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8001980:	ed97 2b0a 	vldr	d2, [r7, #40]	; 0x28
 8001984:	eeb0 1a47 	vmov.f32	s2, s14
 8001988:	eef0 1a67 	vmov.f32	s3, s15
 800198c:	ed97 0b06 	vldr	d0, [r7, #24]
 8001990:	4823      	ldr	r0, [pc, #140]	; (8001a20 <MPU6050_Read_All+0x3d0>)
 8001992:	f7ff fcad 	bl	80012f0 <Kalman_getAngle>
 8001996:	4603      	mov	r3, r0
 8001998:	4618      	mov	r0, r3
 800199a:	f7fe fd6b 	bl	8000474 <__aeabi_i2d>
 800199e:	4602      	mov	r2, r0
 80019a0:	460b      	mov	r3, r1
 80019a2:	6879      	ldr	r1, [r7, #4]
 80019a4:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
    }
    if (fabs(DataStruct->KalmanAngleY) > 90)
 80019a8:	687b      	ldr	r3, [r7, #4]
 80019aa:	e9d3 2314 	ldrd	r2, r3, [r3, #80]	; 0x50
 80019ae:	4690      	mov	r8, r2
 80019b0:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
 80019b4:	f04f 0200 	mov.w	r2, #0
 80019b8:	4b18      	ldr	r3, [pc, #96]	; (8001a1c <MPU6050_Read_All+0x3cc>)
 80019ba:	4640      	mov	r0, r8
 80019bc:	4649      	mov	r1, r9
 80019be:	f7ff f853 	bl	8000a68 <__aeabi_dcmpgt>
 80019c2:	4603      	mov	r3, r0
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d008      	beq.n	80019da <MPU6050_Read_All+0x38a>
        DataStruct->Gx = -DataStruct->Gx;
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	; 0x28
 80019ce:	4614      	mov	r4, r2
 80019d0:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	e9c3 450a 	strd	r4, r5, [r3, #40]	; 0x28
    DataStruct->KalmanAngleX = Kalman_getAngle(&KalmanX, roll, DataStruct->Gx, dt);
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 80019e0:	ed97 2b0a 	vldr	d2, [r7, #40]	; 0x28
 80019e4:	eeb0 1a47 	vmov.f32	s2, s14
 80019e8:	eef0 1a67 	vmov.f32	s3, s15
 80019ec:	ed97 0b0e 	vldr	d0, [r7, #56]	; 0x38
 80019f0:	480c      	ldr	r0, [pc, #48]	; (8001a24 <MPU6050_Read_All+0x3d4>)
 80019f2:	f7ff fc7d 	bl	80012f0 <Kalman_getAngle>
 80019f6:	4603      	mov	r3, r0
 80019f8:	4618      	mov	r0, r3
 80019fa:	f7fe fd3b 	bl	8000474 <__aeabi_i2d>
 80019fe:	4602      	mov	r2, r0
 8001a00:	460b      	mov	r3, r1
 8001a02:	6879      	ldr	r1, [r7, #4]
 8001a04:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
}
 8001a08:	bf00      	nop
 8001a0a:	3740      	adds	r7, #64	; 0x40
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001a12:	bf00      	nop
 8001a14:	f3af 8000 	nop.w
 8001a18:	c0568000 	.word	0xc0568000
 8001a1c:	40568000 	.word	0x40568000
 8001a20:	20000048 	.word	0x20000048
 8001a24:	20000000 	.word	0x20000000
 8001a28:	1a63c1f8 	.word	0x1a63c1f8
 8001a2c:	404ca5dc 	.word	0x404ca5dc

08001a30 <gettheta>:

float leftvolt, rightvolt;

float PWM_L,PWM_R;

float gettheta(int enc_l, int enc_r){
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b084      	sub	sp, #16
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	6078      	str	r0, [r7, #4]
 8001a38:	6039      	str	r1, [r7, #0]
	float angle =(0.5*360/370)*(enc_l+ enc_r);
 8001a3a:	687a      	ldr	r2, [r7, #4]
 8001a3c:	683b      	ldr	r3, [r7, #0]
 8001a3e:	4413      	add	r3, r2
 8001a40:	4618      	mov	r0, r3
 8001a42:	f7fe fd17 	bl	8000474 <__aeabi_i2d>
 8001a46:	a30a      	add	r3, pc, #40	; (adr r3, 8001a70 <gettheta+0x40>)
 8001a48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a4c:	f7fe fd7c 	bl	8000548 <__aeabi_dmul>
 8001a50:	4602      	mov	r2, r0
 8001a52:	460b      	mov	r3, r1
 8001a54:	4610      	mov	r0, r2
 8001a56:	4619      	mov	r1, r3
 8001a58:	f7ff f84e 	bl	8000af8 <__aeabi_d2f>
 8001a5c:	4603      	mov	r3, r0
 8001a5e:	60fb      	str	r3, [r7, #12]
	return angle;
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	ee07 3a90 	vmov	s15, r3
}
 8001a66:	eeb0 0a67 	vmov.f32	s0, s15
 8001a6a:	3710      	adds	r7, #16
 8001a6c:	46bd      	mov	sp, r7
 8001a6e:	bd80      	pop	{r7, pc}
 8001a70:	3759f22a 	.word	0x3759f22a
 8001a74:	3fdf2298 	.word	0x3fdf2298

08001a78 <getphi>:

float getphi(int enc_l, int enc_r){
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b084      	sub	sp, #16
 8001a7c:	af00      	add	r7, sp, #0
 8001a7e:	6078      	str	r0, [r7, #4]
 8001a80:	6039      	str	r1, [r7, #0]
	float angle = (3.2/22.5)*(enc_l + enc_r);
 8001a82:	687a      	ldr	r2, [r7, #4]
 8001a84:	683b      	ldr	r3, [r7, #0]
 8001a86:	4413      	add	r3, r2
 8001a88:	4618      	mov	r0, r3
 8001a8a:	f7fe fcf3 	bl	8000474 <__aeabi_i2d>
 8001a8e:	a30a      	add	r3, pc, #40	; (adr r3, 8001ab8 <getphi+0x40>)
 8001a90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a94:	f7fe fd58 	bl	8000548 <__aeabi_dmul>
 8001a98:	4602      	mov	r2, r0
 8001a9a:	460b      	mov	r3, r1
 8001a9c:	4610      	mov	r0, r2
 8001a9e:	4619      	mov	r1, r3
 8001aa0:	f7ff f82a 	bl	8000af8 <__aeabi_d2f>
 8001aa4:	4603      	mov	r3, r0
 8001aa6:	60fb      	str	r3, [r7, #12]
	return angle;
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	ee07 3a90 	vmov	s15, r3
}
 8001aae:	eeb0 0a67 	vmov.f32	s0, s15
 8001ab2:	3710      	adds	r7, #16
 8001ab4:	46bd      	mov	sp, r7
 8001ab6:	bd80      	pop	{r7, pc}
 8001ab8:	789abcdf 	.word	0x789abcdf
 8001abc:	3fc23456 	.word	0x3fc23456

08001ac0 <map>:
float map(float x, float in_max, float in_min, float out_max, float out_min){
 8001ac0:	b480      	push	{r7}
 8001ac2:	b087      	sub	sp, #28
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	ed87 0a05 	vstr	s0, [r7, #20]
 8001aca:	edc7 0a04 	vstr	s1, [r7, #16]
 8001ace:	ed87 1a03 	vstr	s2, [r7, #12]
 8001ad2:	edc7 1a02 	vstr	s3, [r7, #8]
 8001ad6:	ed87 2a01 	vstr	s4, [r7, #4]
	return (x-in_min)*(out_max-out_min)/(in_max-in_min) + out_min;
 8001ada:	ed97 7a05 	vldr	s14, [r7, #20]
 8001ade:	edd7 7a03 	vldr	s15, [r7, #12]
 8001ae2:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001ae6:	edd7 6a02 	vldr	s13, [r7, #8]
 8001aea:	edd7 7a01 	vldr	s15, [r7, #4]
 8001aee:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8001af2:	ee67 6a27 	vmul.f32	s13, s14, s15
 8001af6:	ed97 7a04 	vldr	s14, [r7, #16]
 8001afa:	edd7 7a03 	vldr	s15, [r7, #12]
 8001afe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001b06:	edd7 7a01 	vldr	s15, [r7, #4]
 8001b0a:	ee77 7a27 	vadd.f32	s15, s14, s15
}
 8001b0e:	eeb0 0a67 	vmov.f32	s0, s15
 8001b12:	371c      	adds	r7, #28
 8001b14:	46bd      	mov	sp, r7
 8001b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b1a:	4770      	bx	lr

08001b1c <constrain>:
float constrain(float x, float a, float b){
 8001b1c:	b480      	push	{r7}
 8001b1e:	b085      	sub	sp, #20
 8001b20:	af00      	add	r7, sp, #0
 8001b22:	ed87 0a03 	vstr	s0, [r7, #12]
 8001b26:	edc7 0a02 	vstr	s1, [r7, #8]
 8001b2a:	ed87 1a01 	vstr	s2, [r7, #4]
	if(x<a) 			return a;
 8001b2e:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b32:	edd7 7a02 	vldr	s15, [r7, #8]
 8001b36:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b3e:	d501      	bpl.n	8001b44 <constrain+0x28>
 8001b40:	68bb      	ldr	r3, [r7, #8]
 8001b42:	e00b      	b.n	8001b5c <constrain+0x40>

	else if(x>b) 		return b;
 8001b44:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b48:	edd7 7a01 	vldr	s15, [r7, #4]
 8001b4c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b54:	dd01      	ble.n	8001b5a <constrain+0x3e>
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	e000      	b.n	8001b5c <constrain+0x40>

	else 			 	return x;
 8001b5a:	68fb      	ldr	r3, [r7, #12]
}
 8001b5c:	ee07 3a90 	vmov	s15, r3
 8001b60:	eeb0 0a67 	vmov.f32	s0, s15
 8001b64:	3714      	adds	r7, #20
 8001b66:	46bd      	mov	sp, r7
 8001b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b6c:	4770      	bx	lr
	...

08001b70 <StopandReset>:

//LQR function
void StopandReset(MPU6050_t *DataStruct){
 8001b70:	b580      	push	{r7, lr}
 8001b72:	b084      	sub	sp, #16
 8001b74:	af02      	add	r7, sp, #8
 8001b76:	6078      	str	r0, [r7, #4]
	Drive(&Motor_R, &htim3, 0, TIM_CHANNEL_1, TIM_CHANNEL_2);
 8001b78:	2304      	movs	r3, #4
 8001b7a:	9300      	str	r3, [sp, #0]
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	2200      	movs	r2, #0
 8001b80:	490e      	ldr	r1, [pc, #56]	; (8001bbc <StopandReset+0x4c>)
 8001b82:	480f      	ldr	r0, [pc, #60]	; (8001bc0 <StopandReset+0x50>)
 8001b84:	f7ff fa94 	bl	80010b0 <Drive>
	Drive(&Motor_L, &htim3, 0, TIM_CHANNEL_3, TIM_CHANNEL_4);
 8001b88:	230c      	movs	r3, #12
 8001b8a:	9300      	str	r3, [sp, #0]
 8001b8c:	2308      	movs	r3, #8
 8001b8e:	2200      	movs	r2, #0
 8001b90:	490a      	ldr	r1, [pc, #40]	; (8001bbc <StopandReset+0x4c>)
 8001b92:	480c      	ldr	r0, [pc, #48]	; (8001bc4 <StopandReset+0x54>)
 8001b94:	f7ff fa8c 	bl	80010b0 <Drive>
	enc_l    = 0;
 8001b98:	4b0b      	ldr	r3, [pc, #44]	; (8001bc8 <StopandReset+0x58>)
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	601a      	str	r2, [r3, #0]
	enc_r	 = 0;
 8001b9e:	4b0b      	ldr	r3, [pc, #44]	; (8001bcc <StopandReset+0x5c>)
 8001ba0:	2200      	movs	r2, #0
 8001ba2:	601a      	str	r2, [r3, #0]
	DataStruct->KalmanAngleY=0;
 8001ba4:	6879      	ldr	r1, [r7, #4]
 8001ba6:	f04f 0200 	mov.w	r2, #0
 8001baa:	f04f 0300 	mov.w	r3, #0
 8001bae:	e9c1 2314 	strd	r2, r3, [r1, #80]	; 0x50
}
 8001bb2:	bf00      	nop
 8001bb4:	3708      	adds	r7, #8
 8001bb6:	46bd      	mov	sp, r7
 8001bb8:	bd80      	pop	{r7, pc}
 8001bba:	bf00      	nop
 8001bbc:	2000040c 	.word	0x2000040c
 8001bc0:	200005b0 	.word	0x200005b0
 8001bc4:	20000598 	.word	0x20000598
 8001bc8:	200005c8 	.word	0x200005c8
 8001bcc:	200005cc 	.word	0x200005cc

08001bd0 <LQR_init>:
void LQR_init(){
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	af00      	add	r7, sp, #0

	 k1 =	-50;					// k1*theta
 8001bd4:	4b0c      	ldr	r3, [pc, #48]	; (8001c08 <LQR_init+0x38>)
 8001bd6:	4a0d      	ldr	r2, [pc, #52]	; (8001c0c <LQR_init+0x3c>)
 8001bd8:	601a      	str	r2, [r3, #0]
	 k2 =	-1000;					// k2*thetadot
 8001bda:	4b0d      	ldr	r3, [pc, #52]	; (8001c10 <LQR_init+0x40>)
 8001bdc:	4a0d      	ldr	r2, [pc, #52]	; (8001c14 <LQR_init+0x44>)
 8001bde:	601a      	str	r2, [r3, #0]
	 k3 =	-15000;					// k3*psi
 8001be0:	4b0d      	ldr	r3, [pc, #52]	; (8001c18 <LQR_init+0x48>)
 8001be2:	4a0e      	ldr	r2, [pc, #56]	; (8001c1c <LQR_init+0x4c>)
 8001be4:	601a      	str	r2, [r3, #0]
	 k4 =	-150;					// k4*psidot
 8001be6:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <LQR_init+0x50>)
 8001be8:	4a0e      	ldr	r2, [pc, #56]	; (8001c24 <LQR_init+0x54>)
 8001bea:	601a      	str	r2, [r3, #0]
	 k5 =	-0.5;					// k5*phi
 8001bec:	4b0e      	ldr	r3, [pc, #56]	; (8001c28 <LQR_init+0x58>)
 8001bee:	f04f 423f 	mov.w	r2, #3204448256	; 0xbf000000
 8001bf2:	601a      	str	r2, [r3, #0]
	 k6 =	-0.5;					// k6*phidot
 8001bf4:	4b0d      	ldr	r3, [pc, #52]	; (8001c2c <LQR_init+0x5c>)
 8001bf6:	f04f 423f 	mov.w	r2, #3204448256	; 0xbf000000
 8001bfa:	601a      	str	r2, [r3, #0]
	 StopandReset(&MPU6050);
 8001bfc:	480c      	ldr	r0, [pc, #48]	; (8001c30 <LQR_init+0x60>)
 8001bfe:	f7ff ffb7 	bl	8001b70 <StopandReset>
}
 8001c02:	bf00      	nop
 8001c04:	bd80      	pop	{r7, pc}
 8001c06:	bf00      	nop
 8001c08:	200005f4 	.word	0x200005f4
 8001c0c:	c2480000 	.word	0xc2480000
 8001c10:	200005f8 	.word	0x200005f8
 8001c14:	c47a0000 	.word	0xc47a0000
 8001c18:	200005fc 	.word	0x200005fc
 8001c1c:	c66a6000 	.word	0xc66a6000
 8001c20:	20000600 	.word	0x20000600
 8001c24:	c3160000 	.word	0xc3160000
 8001c28:	20000604 	.word	0x20000604
 8001c2c:	20000608 	.word	0x20000608
 8001c30:	200004b0 	.word	0x200004b0
 8001c34:	00000000 	.word	0x00000000

08001c38 <getLQR>:
void getLQR(float theta_,float thetadot_,float psi_,float psidot_,float phi_,float phidot_){
 8001c38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c3c:	ed2d 8b02 	vpush	{d8}
 8001c40:	b087      	sub	sp, #28
 8001c42:	af00      	add	r7, sp, #0
 8001c44:	ed87 0a05 	vstr	s0, [r7, #20]
 8001c48:	edc7 0a04 	vstr	s1, [r7, #16]
 8001c4c:	ed87 1a03 	vstr	s2, [r7, #12]
 8001c50:	edc7 1a02 	vstr	s3, [r7, #8]
 8001c54:	ed87 2a01 	vstr	s4, [r7, #4]
 8001c58:	edc7 2a00 	vstr	s5, [r7]
	leftvolt = k1*theta_ + k2*thetadot_ + k3*psi_ + k4*psidot_ - k5*phi_ - k6*phidot_;
 8001c5c:	4b88      	ldr	r3, [pc, #544]	; (8001e80 <getLQR+0x248>)
 8001c5e:	ed93 7a00 	vldr	s14, [r3]
 8001c62:	edd7 7a05 	vldr	s15, [r7, #20]
 8001c66:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001c6a:	4b86      	ldr	r3, [pc, #536]	; (8001e84 <getLQR+0x24c>)
 8001c6c:	edd3 6a00 	vldr	s13, [r3]
 8001c70:	edd7 7a04 	vldr	s15, [r7, #16]
 8001c74:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c78:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001c7c:	4b82      	ldr	r3, [pc, #520]	; (8001e88 <getLQR+0x250>)
 8001c7e:	edd3 6a00 	vldr	s13, [r3]
 8001c82:	edd7 7a03 	vldr	s15, [r7, #12]
 8001c86:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c8a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001c8e:	4b7f      	ldr	r3, [pc, #508]	; (8001e8c <getLQR+0x254>)
 8001c90:	edd3 6a00 	vldr	s13, [r3]
 8001c94:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c98:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001ca0:	4b7b      	ldr	r3, [pc, #492]	; (8001e90 <getLQR+0x258>)
 8001ca2:	edd3 6a00 	vldr	s13, [r3]
 8001ca6:	edd7 7a01 	vldr	s15, [r7, #4]
 8001caa:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001cae:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001cb2:	4b78      	ldr	r3, [pc, #480]	; (8001e94 <getLQR+0x25c>)
 8001cb4:	edd3 6a00 	vldr	s13, [r3]
 8001cb8:	edd7 7a00 	vldr	s15, [r7]
 8001cbc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001cc0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001cc4:	4b74      	ldr	r3, [pc, #464]	; (8001e98 <getLQR+0x260>)
 8001cc6:	edc3 7a00 	vstr	s15, [r3]
	rightvolt = k1*theta_ + k2*thetadot_ + k3*psi_ + k4*psidot_ + k5*phi_ + k6*phidot_;
 8001cca:	4b6d      	ldr	r3, [pc, #436]	; (8001e80 <getLQR+0x248>)
 8001ccc:	ed93 7a00 	vldr	s14, [r3]
 8001cd0:	edd7 7a05 	vldr	s15, [r7, #20]
 8001cd4:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001cd8:	4b6a      	ldr	r3, [pc, #424]	; (8001e84 <getLQR+0x24c>)
 8001cda:	edd3 6a00 	vldr	s13, [r3]
 8001cde:	edd7 7a04 	vldr	s15, [r7, #16]
 8001ce2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001ce6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001cea:	4b67      	ldr	r3, [pc, #412]	; (8001e88 <getLQR+0x250>)
 8001cec:	edd3 6a00 	vldr	s13, [r3]
 8001cf0:	edd7 7a03 	vldr	s15, [r7, #12]
 8001cf4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001cf8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001cfc:	4b63      	ldr	r3, [pc, #396]	; (8001e8c <getLQR+0x254>)
 8001cfe:	edd3 6a00 	vldr	s13, [r3]
 8001d02:	edd7 7a02 	vldr	s15, [r7, #8]
 8001d06:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001d0a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001d0e:	4b60      	ldr	r3, [pc, #384]	; (8001e90 <getLQR+0x258>)
 8001d10:	edd3 6a00 	vldr	s13, [r3]
 8001d14:	edd7 7a01 	vldr	s15, [r7, #4]
 8001d18:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001d1c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001d20:	4b5c      	ldr	r3, [pc, #368]	; (8001e94 <getLQR+0x25c>)
 8001d22:	edd3 6a00 	vldr	s13, [r3]
 8001d26:	edd7 7a00 	vldr	s15, [r7]
 8001d2a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001d2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d32:	4b5a      	ldr	r3, [pc, #360]	; (8001e9c <getLQR+0x264>)
 8001d34:	edc3 7a00 	vstr	s15, [r3]
	PWM_L = map(leftvolt, -(k3*M_PI)/15, (k3*M_PI)/15, -1000, 1000);//Limit 15 deg.
 8001d38:	4b57      	ldr	r3, [pc, #348]	; (8001e98 <getLQR+0x260>)
 8001d3a:	ed93 8a00 	vldr	s16, [r3]
 8001d3e:	4b52      	ldr	r3, [pc, #328]	; (8001e88 <getLQR+0x250>)
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	4618      	mov	r0, r3
 8001d44:	f7fe fba8 	bl	8000498 <__aeabi_f2d>
 8001d48:	a34b      	add	r3, pc, #300	; (adr r3, 8001e78 <getLQR+0x240>)
 8001d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d4e:	f7fe fbfb 	bl	8000548 <__aeabi_dmul>
 8001d52:	4602      	mov	r2, r0
 8001d54:	460b      	mov	r3, r1
 8001d56:	4690      	mov	r8, r2
 8001d58:	f083 4900 	eor.w	r9, r3, #2147483648	; 0x80000000
 8001d5c:	f04f 0200 	mov.w	r2, #0
 8001d60:	4b4f      	ldr	r3, [pc, #316]	; (8001ea0 <getLQR+0x268>)
 8001d62:	4640      	mov	r0, r8
 8001d64:	4649      	mov	r1, r9
 8001d66:	f7fe fd19 	bl	800079c <__aeabi_ddiv>
 8001d6a:	4602      	mov	r2, r0
 8001d6c:	460b      	mov	r3, r1
 8001d6e:	4610      	mov	r0, r2
 8001d70:	4619      	mov	r1, r3
 8001d72:	f7fe fec1 	bl	8000af8 <__aeabi_d2f>
 8001d76:	4606      	mov	r6, r0
 8001d78:	4b43      	ldr	r3, [pc, #268]	; (8001e88 <getLQR+0x250>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	4618      	mov	r0, r3
 8001d7e:	f7fe fb8b 	bl	8000498 <__aeabi_f2d>
 8001d82:	a33d      	add	r3, pc, #244	; (adr r3, 8001e78 <getLQR+0x240>)
 8001d84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d88:	f7fe fbde 	bl	8000548 <__aeabi_dmul>
 8001d8c:	4602      	mov	r2, r0
 8001d8e:	460b      	mov	r3, r1
 8001d90:	4610      	mov	r0, r2
 8001d92:	4619      	mov	r1, r3
 8001d94:	f04f 0200 	mov.w	r2, #0
 8001d98:	4b41      	ldr	r3, [pc, #260]	; (8001ea0 <getLQR+0x268>)
 8001d9a:	f7fe fcff 	bl	800079c <__aeabi_ddiv>
 8001d9e:	4602      	mov	r2, r0
 8001da0:	460b      	mov	r3, r1
 8001da2:	4610      	mov	r0, r2
 8001da4:	4619      	mov	r1, r3
 8001da6:	f7fe fea7 	bl	8000af8 <__aeabi_d2f>
 8001daa:	4603      	mov	r3, r0
 8001dac:	ed9f 2a3d 	vldr	s4, [pc, #244]	; 8001ea4 <getLQR+0x26c>
 8001db0:	eddf 1a3d 	vldr	s3, [pc, #244]	; 8001ea8 <getLQR+0x270>
 8001db4:	ee01 3a10 	vmov	s2, r3
 8001db8:	ee00 6a90 	vmov	s1, r6
 8001dbc:	eeb0 0a48 	vmov.f32	s0, s16
 8001dc0:	f7ff fe7e 	bl	8001ac0 <map>
 8001dc4:	eef0 7a40 	vmov.f32	s15, s0
 8001dc8:	4b38      	ldr	r3, [pc, #224]	; (8001eac <getLQR+0x274>)
 8001dca:	edc3 7a00 	vstr	s15, [r3]
	PWM_R = map(rightvolt, -(k3*M_PI)/15, (k3*M_PI)/15, -1000, 1000);
 8001dce:	4b33      	ldr	r3, [pc, #204]	; (8001e9c <getLQR+0x264>)
 8001dd0:	ed93 8a00 	vldr	s16, [r3]
 8001dd4:	4b2c      	ldr	r3, [pc, #176]	; (8001e88 <getLQR+0x250>)
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	4618      	mov	r0, r3
 8001dda:	f7fe fb5d 	bl	8000498 <__aeabi_f2d>
 8001dde:	a326      	add	r3, pc, #152	; (adr r3, 8001e78 <getLQR+0x240>)
 8001de0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001de4:	f7fe fbb0 	bl	8000548 <__aeabi_dmul>
 8001de8:	4602      	mov	r2, r0
 8001dea:	460b      	mov	r3, r1
 8001dec:	4614      	mov	r4, r2
 8001dee:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 8001df2:	f04f 0200 	mov.w	r2, #0
 8001df6:	4b2a      	ldr	r3, [pc, #168]	; (8001ea0 <getLQR+0x268>)
 8001df8:	4620      	mov	r0, r4
 8001dfa:	4629      	mov	r1, r5
 8001dfc:	f7fe fcce 	bl	800079c <__aeabi_ddiv>
 8001e00:	4602      	mov	r2, r0
 8001e02:	460b      	mov	r3, r1
 8001e04:	4610      	mov	r0, r2
 8001e06:	4619      	mov	r1, r3
 8001e08:	f7fe fe76 	bl	8000af8 <__aeabi_d2f>
 8001e0c:	4604      	mov	r4, r0
 8001e0e:	4b1e      	ldr	r3, [pc, #120]	; (8001e88 <getLQR+0x250>)
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	4618      	mov	r0, r3
 8001e14:	f7fe fb40 	bl	8000498 <__aeabi_f2d>
 8001e18:	a317      	add	r3, pc, #92	; (adr r3, 8001e78 <getLQR+0x240>)
 8001e1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e1e:	f7fe fb93 	bl	8000548 <__aeabi_dmul>
 8001e22:	4602      	mov	r2, r0
 8001e24:	460b      	mov	r3, r1
 8001e26:	4610      	mov	r0, r2
 8001e28:	4619      	mov	r1, r3
 8001e2a:	f04f 0200 	mov.w	r2, #0
 8001e2e:	4b1c      	ldr	r3, [pc, #112]	; (8001ea0 <getLQR+0x268>)
 8001e30:	f7fe fcb4 	bl	800079c <__aeabi_ddiv>
 8001e34:	4602      	mov	r2, r0
 8001e36:	460b      	mov	r3, r1
 8001e38:	4610      	mov	r0, r2
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	f7fe fe5c 	bl	8000af8 <__aeabi_d2f>
 8001e40:	4603      	mov	r3, r0
 8001e42:	ed9f 2a18 	vldr	s4, [pc, #96]	; 8001ea4 <getLQR+0x26c>
 8001e46:	eddf 1a18 	vldr	s3, [pc, #96]	; 8001ea8 <getLQR+0x270>
 8001e4a:	ee01 3a10 	vmov	s2, r3
 8001e4e:	ee00 4a90 	vmov	s1, r4
 8001e52:	eeb0 0a48 	vmov.f32	s0, s16
 8001e56:	f7ff fe33 	bl	8001ac0 <map>
 8001e5a:	eef0 7a40 	vmov.f32	s15, s0
 8001e5e:	4b14      	ldr	r3, [pc, #80]	; (8001eb0 <getLQR+0x278>)
 8001e60:	edc3 7a00 	vstr	s15, [r3]

//	PWM_L = constrain(PWM_L, -300, 300);
//	PWM_R = constrain(PWM_R, -300, 300);
}
 8001e64:	bf00      	nop
 8001e66:	371c      	adds	r7, #28
 8001e68:	46bd      	mov	sp, r7
 8001e6a:	ecbd 8b02 	vpop	{d8}
 8001e6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e72:	bf00      	nop
 8001e74:	f3af 8000 	nop.w
 8001e78:	54442d18 	.word	0x54442d18
 8001e7c:	400921fb 	.word	0x400921fb
 8001e80:	200005f4 	.word	0x200005f4
 8001e84:	200005f8 	.word	0x200005f8
 8001e88:	200005fc 	.word	0x200005fc
 8001e8c:	20000600 	.word	0x20000600
 8001e90:	20000604 	.word	0x20000604
 8001e94:	20000608 	.word	0x20000608
 8001e98:	2000060c 	.word	0x2000060c
 8001e9c:	20000610 	.word	0x20000610
 8001ea0:	402e0000 	.word	0x402e0000
 8001ea4:	447a0000 	.word	0x447a0000
 8001ea8:	c47a0000 	.word	0xc47a0000
 8001eac:	20000614 	.word	0x20000614
 8001eb0:	20000618 	.word	0x20000618
 8001eb4:	00000000 	.word	0x00000000

08001eb8 <getfunctionLQR>:
void getfunctionLQR(MPU6050_t *DataStruct){
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b086      	sub	sp, #24
 8001ebc:	af02      	add	r7, sp, #8
 8001ebe:	6078      	str	r0, [r7, #4]
	if((HAL_GetTick() - timerloop) > 6) {//Set time loop update and control motor
 8001ec0:	f000 fec2 	bl	8002c48 <HAL_GetTick>
 8001ec4:	4602      	mov	r2, r0
 8001ec6:	4b9e      	ldr	r3, [pc, #632]	; (8002140 <getfunctionLQR+0x288>)
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	1ad3      	subs	r3, r2, r3
 8001ecc:	2b06      	cmp	r3, #6
 8001ece:	f240 812c 	bls.w	800212a <getfunctionLQR+0x272>
	    theta = gettheta(enc_l, enc_r)*DEG_TO_RAD; 				//Read theta value and convert to Rad
 8001ed2:	4b9c      	ldr	r3, [pc, #624]	; (8002144 <getfunctionLQR+0x28c>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	4a9c      	ldr	r2, [pc, #624]	; (8002148 <getfunctionLQR+0x290>)
 8001ed8:	6812      	ldr	r2, [r2, #0]
 8001eda:	4611      	mov	r1, r2
 8001edc:	4618      	mov	r0, r3
 8001ede:	f7ff fda7 	bl	8001a30 <gettheta>
 8001ee2:	ee10 3a10 	vmov	r3, s0
 8001ee6:	4618      	mov	r0, r3
 8001ee8:	f7fe fad6 	bl	8000498 <__aeabi_f2d>
 8001eec:	a392      	add	r3, pc, #584	; (adr r3, 8002138 <getfunctionLQR+0x280>)
 8001eee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ef2:	f7fe fb29 	bl	8000548 <__aeabi_dmul>
 8001ef6:	4602      	mov	r2, r0
 8001ef8:	460b      	mov	r3, r1
 8001efa:	4610      	mov	r0, r2
 8001efc:	4619      	mov	r1, r3
 8001efe:	f7fe fdfb 	bl	8000af8 <__aeabi_d2f>
 8001f02:	4603      	mov	r3, r0
 8001f04:	4a91      	ldr	r2, [pc, #580]	; (800214c <getfunctionLQR+0x294>)
 8001f06:	6013      	str	r3, [r2, #0]
	    psi = (DataStruct->KalmanAngleY + 2.25)*DEG_TO_RAD;     //Read psi value and convert to Rad
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8001f0e:	f04f 0200 	mov.w	r2, #0
 8001f12:	4b8f      	ldr	r3, [pc, #572]	; (8002150 <getfunctionLQR+0x298>)
 8001f14:	f7fe f962 	bl	80001dc <__adddf3>
 8001f18:	4602      	mov	r2, r0
 8001f1a:	460b      	mov	r3, r1
 8001f1c:	4610      	mov	r0, r2
 8001f1e:	4619      	mov	r1, r3
 8001f20:	a385      	add	r3, pc, #532	; (adr r3, 8002138 <getfunctionLQR+0x280>)
 8001f22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f26:	f7fe fb0f 	bl	8000548 <__aeabi_dmul>
 8001f2a:	4602      	mov	r2, r0
 8001f2c:	460b      	mov	r3, r1
 8001f2e:	4610      	mov	r0, r2
 8001f30:	4619      	mov	r1, r3
 8001f32:	f7fe fde1 	bl	8000af8 <__aeabi_d2f>
 8001f36:	4603      	mov	r3, r0
 8001f38:	4a86      	ldr	r2, [pc, #536]	; (8002154 <getfunctionLQR+0x29c>)
 8001f3a:	6013      	str	r3, [r2, #0]
	    phi =  getphi(enc_l, enc_r)*DEG_TO_RAD;    				//Read phi value and convert to Rad
 8001f3c:	4b81      	ldr	r3, [pc, #516]	; (8002144 <getfunctionLQR+0x28c>)
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	4a81      	ldr	r2, [pc, #516]	; (8002148 <getfunctionLQR+0x290>)
 8001f42:	6812      	ldr	r2, [r2, #0]
 8001f44:	4611      	mov	r1, r2
 8001f46:	4618      	mov	r0, r3
 8001f48:	f7ff fd96 	bl	8001a78 <getphi>
 8001f4c:	ee10 3a10 	vmov	r3, s0
 8001f50:	4618      	mov	r0, r3
 8001f52:	f7fe faa1 	bl	8000498 <__aeabi_f2d>
 8001f56:	a378      	add	r3, pc, #480	; (adr r3, 8002138 <getfunctionLQR+0x280>)
 8001f58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f5c:	f7fe faf4 	bl	8000548 <__aeabi_dmul>
 8001f60:	4602      	mov	r2, r0
 8001f62:	460b      	mov	r3, r1
 8001f64:	4610      	mov	r0, r2
 8001f66:	4619      	mov	r1, r3
 8001f68:	f7fe fdc6 	bl	8000af8 <__aeabi_d2f>
 8001f6c:	4603      	mov	r3, r0
 8001f6e:	4a7a      	ldr	r2, [pc, #488]	; (8002158 <getfunctionLQR+0x2a0>)
 8001f70:	6013      	str	r3, [r2, #0]

	    //Update time compare with timeloop
	    float dt = (float)(HAL_GetTick() - timer) / 100;
 8001f72:	f000 fe69 	bl	8002c48 <HAL_GetTick>
 8001f76:	4602      	mov	r2, r0
 8001f78:	4b78      	ldr	r3, [pc, #480]	; (800215c <getfunctionLQR+0x2a4>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	1ad3      	subs	r3, r2, r3
 8001f7e:	ee07 3a90 	vmov	s15, r3
 8001f82:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001f86:	eddf 6a76 	vldr	s13, [pc, #472]	; 8002160 <getfunctionLQR+0x2a8>
 8001f8a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001f8e:	edc7 7a03 	vstr	s15, [r7, #12]
	    timerloop = HAL_GetTick();
 8001f92:	f000 fe59 	bl	8002c48 <HAL_GetTick>
 8001f96:	4603      	mov	r3, r0
 8001f98:	4a69      	ldr	r2, [pc, #420]	; (8002140 <getfunctionLQR+0x288>)
 8001f9a:	6013      	str	r3, [r2, #0]
	    //Update input angle value
	    thetadot = (theta - theta_old)/dt;
 8001f9c:	4b6b      	ldr	r3, [pc, #428]	; (800214c <getfunctionLQR+0x294>)
 8001f9e:	ed93 7a00 	vldr	s14, [r3]
 8001fa2:	4b70      	ldr	r3, [pc, #448]	; (8002164 <getfunctionLQR+0x2ac>)
 8001fa4:	edd3 7a00 	vldr	s15, [r3]
 8001fa8:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001fac:	ed97 7a03 	vldr	s14, [r7, #12]
 8001fb0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001fb4:	4b6c      	ldr	r3, [pc, #432]	; (8002168 <getfunctionLQR+0x2b0>)
 8001fb6:	edc3 7a00 	vstr	s15, [r3]
	    psidot = (psi)/dt;
 8001fba:	4b66      	ldr	r3, [pc, #408]	; (8002154 <getfunctionLQR+0x29c>)
 8001fbc:	edd3 6a00 	vldr	s13, [r3]
 8001fc0:	ed97 7a03 	vldr	s14, [r7, #12]
 8001fc4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001fc8:	4b68      	ldr	r3, [pc, #416]	; (800216c <getfunctionLQR+0x2b4>)
 8001fca:	edc3 7a00 	vstr	s15, [r3]
//	    psidot = (psi - psi_old)/dt;
	    phidot = (phi - phi_old)/dt;
 8001fce:	4b62      	ldr	r3, [pc, #392]	; (8002158 <getfunctionLQR+0x2a0>)
 8001fd0:	ed93 7a00 	vldr	s14, [r3]
 8001fd4:	4b66      	ldr	r3, [pc, #408]	; (8002170 <getfunctionLQR+0x2b8>)
 8001fd6:	edd3 7a00 	vldr	s15, [r3]
 8001fda:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001fde:	ed97 7a03 	vldr	s14, [r7, #12]
 8001fe2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001fe6:	4b63      	ldr	r3, [pc, #396]	; (8002174 <getfunctionLQR+0x2bc>)
 8001fe8:	edc3 7a00 	vstr	s15, [r3]
	    //Update old angle value
	    theta_old = theta;
 8001fec:	4b57      	ldr	r3, [pc, #348]	; (800214c <getfunctionLQR+0x294>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	4a5c      	ldr	r2, [pc, #368]	; (8002164 <getfunctionLQR+0x2ac>)
 8001ff2:	6013      	str	r3, [r2, #0]
	    psi_old = psi;
 8001ff4:	4b57      	ldr	r3, [pc, #348]	; (8002154 <getfunctionLQR+0x29c>)
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	4a5f      	ldr	r2, [pc, #380]	; (8002178 <getfunctionLQR+0x2c0>)
 8001ffa:	6013      	str	r3, [r2, #0]
	    phi_old = phi;
 8001ffc:	4b56      	ldr	r3, [pc, #344]	; (8002158 <getfunctionLQR+0x2a0>)
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4a5b      	ldr	r2, [pc, #364]	; (8002170 <getfunctionLQR+0x2b8>)
 8002002:	6013      	str	r3, [r2, #0]

	    getLQR(theta, thetadot, psi, psidot, phi, phidot);
 8002004:	4b51      	ldr	r3, [pc, #324]	; (800214c <getfunctionLQR+0x294>)
 8002006:	edd3 7a00 	vldr	s15, [r3]
 800200a:	4b57      	ldr	r3, [pc, #348]	; (8002168 <getfunctionLQR+0x2b0>)
 800200c:	ed93 7a00 	vldr	s14, [r3]
 8002010:	4b50      	ldr	r3, [pc, #320]	; (8002154 <getfunctionLQR+0x29c>)
 8002012:	edd3 6a00 	vldr	s13, [r3]
 8002016:	4b55      	ldr	r3, [pc, #340]	; (800216c <getfunctionLQR+0x2b4>)
 8002018:	ed93 6a00 	vldr	s12, [r3]
 800201c:	4b4e      	ldr	r3, [pc, #312]	; (8002158 <getfunctionLQR+0x2a0>)
 800201e:	edd3 5a00 	vldr	s11, [r3]
 8002022:	4b54      	ldr	r3, [pc, #336]	; (8002174 <getfunctionLQR+0x2bc>)
 8002024:	ed93 5a00 	vldr	s10, [r3]
 8002028:	eef0 2a45 	vmov.f32	s5, s10
 800202c:	eeb0 2a65 	vmov.f32	s4, s11
 8002030:	eef0 1a46 	vmov.f32	s3, s12
 8002034:	eeb0 1a66 	vmov.f32	s2, s13
 8002038:	eef0 0a47 	vmov.f32	s1, s14
 800203c:	eeb0 0a67 	vmov.f32	s0, s15
 8002040:	f7ff fdfa 	bl	8001c38 <getLQR>
	    if(DataStruct->KalmanAngleY > 15 || DataStruct->KalmanAngleY < -15)
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 800204a:	f04f 0200 	mov.w	r2, #0
 800204e:	4b4b      	ldr	r3, [pc, #300]	; (800217c <getfunctionLQR+0x2c4>)
 8002050:	f7fe fd0a 	bl	8000a68 <__aeabi_dcmpgt>
 8002054:	4603      	mov	r3, r0
 8002056:	2b00      	cmp	r3, #0
 8002058:	d10a      	bne.n	8002070 <getfunctionLQR+0x1b8>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8002060:	f04f 0200 	mov.w	r2, #0
 8002064:	4b46      	ldr	r3, [pc, #280]	; (8002180 <getfunctionLQR+0x2c8>)
 8002066:	f7fe fce1 	bl	8000a2c <__aeabi_dcmplt>
 800206a:	4603      	mov	r3, r0
 800206c:	2b00      	cmp	r3, #0
 800206e:	d020      	beq.n	80020b2 <getfunctionLQR+0x1fa>
	    {
	    	PWM_L = constrain(PWM_L, -500, 500);
 8002070:	4b44      	ldr	r3, [pc, #272]	; (8002184 <getfunctionLQR+0x2cc>)
 8002072:	edd3 7a00 	vldr	s15, [r3]
 8002076:	ed9f 1a44 	vldr	s2, [pc, #272]	; 8002188 <getfunctionLQR+0x2d0>
 800207a:	eddf 0a44 	vldr	s1, [pc, #272]	; 800218c <getfunctionLQR+0x2d4>
 800207e:	eeb0 0a67 	vmov.f32	s0, s15
 8002082:	f7ff fd4b 	bl	8001b1c <constrain>
 8002086:	eef0 7a40 	vmov.f32	s15, s0
 800208a:	4b3e      	ldr	r3, [pc, #248]	; (8002184 <getfunctionLQR+0x2cc>)
 800208c:	edc3 7a00 	vstr	s15, [r3]
	    	PWM_R = constrain(PWM_R, -500, 500);
 8002090:	4b3f      	ldr	r3, [pc, #252]	; (8002190 <getfunctionLQR+0x2d8>)
 8002092:	edd3 7a00 	vldr	s15, [r3]
 8002096:	ed9f 1a3c 	vldr	s2, [pc, #240]	; 8002188 <getfunctionLQR+0x2d0>
 800209a:	eddf 0a3c 	vldr	s1, [pc, #240]	; 800218c <getfunctionLQR+0x2d4>
 800209e:	eeb0 0a67 	vmov.f32	s0, s15
 80020a2:	f7ff fd3b 	bl	8001b1c <constrain>
 80020a6:	eef0 7a40 	vmov.f32	s15, s0
 80020aa:	4b39      	ldr	r3, [pc, #228]	; (8002190 <getfunctionLQR+0x2d8>)
 80020ac:	edc3 7a00 	vstr	s15, [r3]
 80020b0:	e01f      	b.n	80020f2 <getfunctionLQR+0x23a>
	    }
	    else{
	    	PWM_L = constrain(PWM_L, -300, 300);
 80020b2:	4b34      	ldr	r3, [pc, #208]	; (8002184 <getfunctionLQR+0x2cc>)
 80020b4:	edd3 7a00 	vldr	s15, [r3]
 80020b8:	ed9f 1a36 	vldr	s2, [pc, #216]	; 8002194 <getfunctionLQR+0x2dc>
 80020bc:	eddf 0a36 	vldr	s1, [pc, #216]	; 8002198 <getfunctionLQR+0x2e0>
 80020c0:	eeb0 0a67 	vmov.f32	s0, s15
 80020c4:	f7ff fd2a 	bl	8001b1c <constrain>
 80020c8:	eef0 7a40 	vmov.f32	s15, s0
 80020cc:	4b2d      	ldr	r3, [pc, #180]	; (8002184 <getfunctionLQR+0x2cc>)
 80020ce:	edc3 7a00 	vstr	s15, [r3]
	    	PWM_R = constrain(PWM_R, -300, 300);
 80020d2:	4b2f      	ldr	r3, [pc, #188]	; (8002190 <getfunctionLQR+0x2d8>)
 80020d4:	edd3 7a00 	vldr	s15, [r3]
 80020d8:	ed9f 1a2e 	vldr	s2, [pc, #184]	; 8002194 <getfunctionLQR+0x2dc>
 80020dc:	eddf 0a2e 	vldr	s1, [pc, #184]	; 8002198 <getfunctionLQR+0x2e0>
 80020e0:	eeb0 0a67 	vmov.f32	s0, s15
 80020e4:	f7ff fd1a 	bl	8001b1c <constrain>
 80020e8:	eef0 7a40 	vmov.f32	s15, s0
 80020ec:	4b28      	ldr	r3, [pc, #160]	; (8002190 <getfunctionLQR+0x2d8>)
 80020ee:	edc3 7a00 	vstr	s15, [r3]
	    }
		Drive(&Motor_R, &htim3, PWM_L, TIM_CHANNEL_1, TIM_CHANNEL_2);
 80020f2:	4b24      	ldr	r3, [pc, #144]	; (8002184 <getfunctionLQR+0x2cc>)
 80020f4:	edd3 7a00 	vldr	s15, [r3]
 80020f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80020fc:	2304      	movs	r3, #4
 80020fe:	9300      	str	r3, [sp, #0]
 8002100:	2300      	movs	r3, #0
 8002102:	ee17 2a90 	vmov	r2, s15
 8002106:	4925      	ldr	r1, [pc, #148]	; (800219c <getfunctionLQR+0x2e4>)
 8002108:	4825      	ldr	r0, [pc, #148]	; (80021a0 <getfunctionLQR+0x2e8>)
 800210a:	f7fe ffd1 	bl	80010b0 <Drive>
		Drive(&Motor_L, &htim3, PWM_R, TIM_CHANNEL_3, TIM_CHANNEL_4);
 800210e:	4b20      	ldr	r3, [pc, #128]	; (8002190 <getfunctionLQR+0x2d8>)
 8002110:	edd3 7a00 	vldr	s15, [r3]
 8002114:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002118:	230c      	movs	r3, #12
 800211a:	9300      	str	r3, [sp, #0]
 800211c:	2308      	movs	r3, #8
 800211e:	ee17 2a90 	vmov	r2, s15
 8002122:	491e      	ldr	r1, [pc, #120]	; (800219c <getfunctionLQR+0x2e4>)
 8002124:	481f      	ldr	r0, [pc, #124]	; (80021a4 <getfunctionLQR+0x2ec>)
 8002126:	f7fe ffc3 	bl	80010b0 <Drive>
	}
}
 800212a:	bf00      	nop
 800212c:	3710      	adds	r7, #16
 800212e:	46bd      	mov	sp, r7
 8002130:	bd80      	pop	{r7, pc}
 8002132:	bf00      	nop
 8002134:	f3af 8000 	nop.w
 8002138:	a2529d39 	.word	0xa2529d39
 800213c:	3f91df46 	.word	0x3f91df46
 8002140:	200004a8 	.word	0x200004a8
 8002144:	200005c8 	.word	0x200005c8
 8002148:	200005cc 	.word	0x200005cc
 800214c:	200005d0 	.word	0x200005d0
 8002150:	40020000 	.word	0x40020000
 8002154:	200005d4 	.word	0x200005d4
 8002158:	200005d8 	.word	0x200005d8
 800215c:	200004a4 	.word	0x200004a4
 8002160:	42c80000 	.word	0x42c80000
 8002164:	200005e8 	.word	0x200005e8
 8002168:	200005dc 	.word	0x200005dc
 800216c:	200005e0 	.word	0x200005e0
 8002170:	200005f0 	.word	0x200005f0
 8002174:	200005e4 	.word	0x200005e4
 8002178:	200005ec 	.word	0x200005ec
 800217c:	402e0000 	.word	0x402e0000
 8002180:	c02e0000 	.word	0xc02e0000
 8002184:	20000614 	.word	0x20000614
 8002188:	43fa0000 	.word	0x43fa0000
 800218c:	c3fa0000 	.word	0xc3fa0000
 8002190:	20000618 	.word	0x20000618
 8002194:	43960000 	.word	0x43960000
 8002198:	c3960000 	.word	0xc3960000
 800219c:	2000040c 	.word	0x2000040c
 80021a0:	200005b0 	.word	0x200005b0
 80021a4:	20000598 	.word	0x20000598

080021a8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80021a8:	b5b0      	push	{r4, r5, r7, lr}
 80021aa:	b08e      	sub	sp, #56	; 0x38
 80021ac:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80021ae:	f000 fd15 	bl	8002bdc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80021b2:	f000 f877 	bl	80022a4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80021b6:	f000 fa2d 	bl	8002614 <MX_GPIO_Init>
  MX_I2C1_Init();
 80021ba:	f000 f8db 	bl	8002374 <MX_I2C1_Init>
  MX_TIM2_Init();
 80021be:	f000 f907 	bl	80023d0 <MX_TIM2_Init>
  MX_TIM3_Init();
 80021c2:	f000 f959 	bl	8002478 <MX_TIM3_Init>
  MX_TIM4_Init();
 80021c6:	f000 f9d1 	bl	800256c <MX_TIM4_Init>
  /* USER CODE BEGIN 2 */
  while(MPU6050_Init()==1);
 80021ca:	bf00      	nop
 80021cc:	f7ff f9ec 	bl	80015a8 <MPU6050_Init>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b01      	cmp	r3, #1
 80021d4:	d0fa      	beq.n	80021cc <main+0x24>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 80021d6:	2100      	movs	r1, #0
 80021d8:	4829      	ldr	r0, [pc, #164]	; (8002280 <main+0xd8>)
 80021da:	f002 fdb3 	bl	8004d44 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 80021de:	2104      	movs	r1, #4
 80021e0:	4827      	ldr	r0, [pc, #156]	; (8002280 <main+0xd8>)
 80021e2:	f002 fdaf 	bl	8004d44 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 80021e6:	2108      	movs	r1, #8
 80021e8:	4825      	ldr	r0, [pc, #148]	; (8002280 <main+0xd8>)
 80021ea:	f002 fdab 	bl	8004d44 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 80021ee:	210c      	movs	r1, #12
 80021f0:	4823      	ldr	r0, [pc, #140]	; (8002280 <main+0xd8>)
 80021f2:	f002 fda7 	bl	8004d44 <HAL_TIM_PWM_Start>
  HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 80021f6:	213c      	movs	r1, #60	; 0x3c
 80021f8:	4822      	ldr	r0, [pc, #136]	; (8002284 <main+0xdc>)
 80021fa:	f002 ff11 	bl	8005020 <HAL_TIM_Encoder_Start>
  HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 80021fe:	213c      	movs	r1, #60	; 0x3c
 8002200:	4821      	ldr	r0, [pc, #132]	; (8002288 <main+0xe0>)
 8002202:	f002 ff0d 	bl	8005020 <HAL_TIM_Encoder_Start>

  EncoderSetting(&ENC_L, &htim2, 370, 0.01);
 8002206:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8002278 <main+0xd0>
 800220a:	f44f 72b9 	mov.w	r2, #370	; 0x172
 800220e:	491d      	ldr	r1, [pc, #116]	; (8002284 <main+0xdc>)
 8002210:	481e      	ldr	r0, [pc, #120]	; (800228c <main+0xe4>)
 8002212:	f7fe fe3f 	bl	8000e94 <EncoderSetting>
  EncoderSetting(&ENC_R, &htim4, 370, 0.01);
 8002216:	ed9f 0b18 	vldr	d0, [pc, #96]	; 8002278 <main+0xd0>
 800221a:	f44f 72b9 	mov.w	r2, #370	; 0x172
 800221e:	491a      	ldr	r1, [pc, #104]	; (8002288 <main+0xe0>)
 8002220:	481b      	ldr	r0, [pc, #108]	; (8002290 <main+0xe8>)
 8002222:	f7fe fe37 	bl	8000e94 <EncoderSetting>

  LQR_init();
 8002226:	f7ff fcd3 	bl	8001bd0 <LQR_init>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of MPU6050Task */
  osThreadDef(MPU6050Task, StartMPU6050ask, osPriorityBelowNormal, 0, 128);
 800222a:	4b1a      	ldr	r3, [pc, #104]	; (8002294 <main+0xec>)
 800222c:	f107 041c 	add.w	r4, r7, #28
 8002230:	461d      	mov	r5, r3
 8002232:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002234:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002236:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800223a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  MPU6050TaskHandle = osThreadCreate(osThread(MPU6050Task), NULL);
 800223e:	f107 031c 	add.w	r3, r7, #28
 8002242:	2100      	movs	r1, #0
 8002244:	4618      	mov	r0, r3
 8002246:	f003 fc84 	bl	8005b52 <osThreadCreate>
 800224a:	4603      	mov	r3, r0
 800224c:	4a12      	ldr	r2, [pc, #72]	; (8002298 <main+0xf0>)
 800224e:	6013      	str	r3, [r2, #0]

  /* definition and creation of FunctionTask */
  osThreadDef(FunctionTask, StartTaskFunction, osPriorityNormal, 0, 128);
 8002250:	4b12      	ldr	r3, [pc, #72]	; (800229c <main+0xf4>)
 8002252:	463c      	mov	r4, r7
 8002254:	461d      	mov	r5, r3
 8002256:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002258:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800225a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800225e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  FunctionTaskHandle = osThreadCreate(osThread(FunctionTask), NULL);
 8002262:	463b      	mov	r3, r7
 8002264:	2100      	movs	r1, #0
 8002266:	4618      	mov	r0, r3
 8002268:	f003 fc73 	bl	8005b52 <osThreadCreate>
 800226c:	4603      	mov	r3, r0
 800226e:	4a0c      	ldr	r2, [pc, #48]	; (80022a0 <main+0xf8>)
 8002270:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8002272:	f003 fc67 	bl	8005b44 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002276:	e7fe      	b.n	8002276 <main+0xce>
 8002278:	47ae147b 	.word	0x47ae147b
 800227c:	3f847ae1 	.word	0x3f847ae1
 8002280:	2000040c 	.word	0x2000040c
 8002284:	200003c4 	.word	0x200003c4
 8002288:	20000454 	.word	0x20000454
 800228c:	20000508 	.word	0x20000508
 8002290:	20000550 	.word	0x20000550
 8002294:	0800772c 	.word	0x0800772c
 8002298:	2000049c 	.word	0x2000049c
 800229c:	08007758 	.word	0x08007758
 80022a0:	200004a0 	.word	0x200004a0

080022a4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b094      	sub	sp, #80	; 0x50
 80022a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80022aa:	f107 0320 	add.w	r3, r7, #32
 80022ae:	2230      	movs	r2, #48	; 0x30
 80022b0:	2100      	movs	r1, #0
 80022b2:	4618      	mov	r0, r3
 80022b4:	f004 fe7a 	bl	8006fac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80022b8:	f107 030c 	add.w	r3, r7, #12
 80022bc:	2200      	movs	r2, #0
 80022be:	601a      	str	r2, [r3, #0]
 80022c0:	605a      	str	r2, [r3, #4]
 80022c2:	609a      	str	r2, [r3, #8]
 80022c4:	60da      	str	r2, [r3, #12]
 80022c6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80022c8:	2300      	movs	r3, #0
 80022ca:	60bb      	str	r3, [r7, #8]
 80022cc:	4b27      	ldr	r3, [pc, #156]	; (800236c <SystemClock_Config+0xc8>)
 80022ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022d0:	4a26      	ldr	r2, [pc, #152]	; (800236c <SystemClock_Config+0xc8>)
 80022d2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80022d6:	6413      	str	r3, [r2, #64]	; 0x40
 80022d8:	4b24      	ldr	r3, [pc, #144]	; (800236c <SystemClock_Config+0xc8>)
 80022da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022dc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80022e0:	60bb      	str	r3, [r7, #8]
 80022e2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80022e4:	2300      	movs	r3, #0
 80022e6:	607b      	str	r3, [r7, #4]
 80022e8:	4b21      	ldr	r3, [pc, #132]	; (8002370 <SystemClock_Config+0xcc>)
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	4a20      	ldr	r2, [pc, #128]	; (8002370 <SystemClock_Config+0xcc>)
 80022ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80022f2:	6013      	str	r3, [r2, #0]
 80022f4:	4b1e      	ldr	r3, [pc, #120]	; (8002370 <SystemClock_Config+0xcc>)
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80022fc:	607b      	str	r3, [r7, #4]
 80022fe:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002300:	2301      	movs	r3, #1
 8002302:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002304:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002308:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800230a:	2302      	movs	r3, #2
 800230c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800230e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002312:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8002314:	2304      	movs	r3, #4
 8002316:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 8002318:	2348      	movs	r3, #72	; 0x48
 800231a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800231c:	2302      	movs	r3, #2
 800231e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002320:	2304      	movs	r3, #4
 8002322:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002324:	f107 0320 	add.w	r3, r7, #32
 8002328:	4618      	mov	r0, r3
 800232a:	f001 ff3b 	bl	80041a4 <HAL_RCC_OscConfig>
 800232e:	4603      	mov	r3, r0
 8002330:	2b00      	cmp	r3, #0
 8002332:	d001      	beq.n	8002338 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8002334:	f000 fa08 	bl	8002748 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002338:	230f      	movs	r3, #15
 800233a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800233c:	2302      	movs	r3, #2
 800233e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002340:	2300      	movs	r3, #0
 8002342:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002344:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002348:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800234a:	2300      	movs	r3, #0
 800234c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800234e:	f107 030c 	add.w	r3, r7, #12
 8002352:	2102      	movs	r1, #2
 8002354:	4618      	mov	r0, r3
 8002356:	f002 f99d 	bl	8004694 <HAL_RCC_ClockConfig>
 800235a:	4603      	mov	r3, r0
 800235c:	2b00      	cmp	r3, #0
 800235e:	d001      	beq.n	8002364 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8002360:	f000 f9f2 	bl	8002748 <Error_Handler>
  }
}
 8002364:	bf00      	nop
 8002366:	3750      	adds	r7, #80	; 0x50
 8002368:	46bd      	mov	sp, r7
 800236a:	bd80      	pop	{r7, pc}
 800236c:	40023800 	.word	0x40023800
 8002370:	40007000 	.word	0x40007000

08002374 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002374:	b580      	push	{r7, lr}
 8002376:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002378:	4b12      	ldr	r3, [pc, #72]	; (80023c4 <MX_I2C1_Init+0x50>)
 800237a:	4a13      	ldr	r2, [pc, #76]	; (80023c8 <MX_I2C1_Init+0x54>)
 800237c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800237e:	4b11      	ldr	r3, [pc, #68]	; (80023c4 <MX_I2C1_Init+0x50>)
 8002380:	4a12      	ldr	r2, [pc, #72]	; (80023cc <MX_I2C1_Init+0x58>)
 8002382:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002384:	4b0f      	ldr	r3, [pc, #60]	; (80023c4 <MX_I2C1_Init+0x50>)
 8002386:	2200      	movs	r2, #0
 8002388:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800238a:	4b0e      	ldr	r3, [pc, #56]	; (80023c4 <MX_I2C1_Init+0x50>)
 800238c:	2200      	movs	r2, #0
 800238e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002390:	4b0c      	ldr	r3, [pc, #48]	; (80023c4 <MX_I2C1_Init+0x50>)
 8002392:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002396:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002398:	4b0a      	ldr	r3, [pc, #40]	; (80023c4 <MX_I2C1_Init+0x50>)
 800239a:	2200      	movs	r2, #0
 800239c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800239e:	4b09      	ldr	r3, [pc, #36]	; (80023c4 <MX_I2C1_Init+0x50>)
 80023a0:	2200      	movs	r2, #0
 80023a2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80023a4:	4b07      	ldr	r3, [pc, #28]	; (80023c4 <MX_I2C1_Init+0x50>)
 80023a6:	2200      	movs	r2, #0
 80023a8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80023aa:	4b06      	ldr	r3, [pc, #24]	; (80023c4 <MX_I2C1_Init+0x50>)
 80023ac:	2200      	movs	r2, #0
 80023ae:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80023b0:	4804      	ldr	r0, [pc, #16]	; (80023c4 <MX_I2C1_Init+0x50>)
 80023b2:	f000 fed3 	bl	800315c <HAL_I2C_Init>
 80023b6:	4603      	mov	r3, r0
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	d001      	beq.n	80023c0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80023bc:	f000 f9c4 	bl	8002748 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80023c0:	bf00      	nop
 80023c2:	bd80      	pop	{r7, pc}
 80023c4:	20000370 	.word	0x20000370
 80023c8:	40005400 	.word	0x40005400
 80023cc:	000186a0 	.word	0x000186a0

080023d0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b08c      	sub	sp, #48	; 0x30
 80023d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80023d6:	f107 030c 	add.w	r3, r7, #12
 80023da:	2224      	movs	r2, #36	; 0x24
 80023dc:	2100      	movs	r1, #0
 80023de:	4618      	mov	r0, r3
 80023e0:	f004 fde4 	bl	8006fac <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80023e4:	1d3b      	adds	r3, r7, #4
 80023e6:	2200      	movs	r2, #0
 80023e8:	601a      	str	r2, [r3, #0]
 80023ea:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80023ec:	4b21      	ldr	r3, [pc, #132]	; (8002474 <MX_TIM2_Init+0xa4>)
 80023ee:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80023f2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80023f4:	4b1f      	ldr	r3, [pc, #124]	; (8002474 <MX_TIM2_Init+0xa4>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023fa:	4b1e      	ldr	r3, [pc, #120]	; (8002474 <MX_TIM2_Init+0xa4>)
 80023fc:	2200      	movs	r2, #0
 80023fe:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8002400:	4b1c      	ldr	r3, [pc, #112]	; (8002474 <MX_TIM2_Init+0xa4>)
 8002402:	f04f 32ff 	mov.w	r2, #4294967295
 8002406:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002408:	4b1a      	ldr	r3, [pc, #104]	; (8002474 <MX_TIM2_Init+0xa4>)
 800240a:	2200      	movs	r2, #0
 800240c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800240e:	4b19      	ldr	r3, [pc, #100]	; (8002474 <MX_TIM2_Init+0xa4>)
 8002410:	2200      	movs	r2, #0
 8002412:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002414:	2303      	movs	r3, #3
 8002416:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002418:	2300      	movs	r3, #0
 800241a:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800241c:	2301      	movs	r3, #1
 800241e:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002420:	2300      	movs	r3, #0
 8002422:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8002424:	2300      	movs	r3, #0
 8002426:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002428:	2300      	movs	r3, #0
 800242a:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800242c:	2301      	movs	r3, #1
 800242e:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002430:	2300      	movs	r3, #0
 8002432:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8002434:	2300      	movs	r3, #0
 8002436:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 8002438:	f107 030c 	add.w	r3, r7, #12
 800243c:	4619      	mov	r1, r3
 800243e:	480d      	ldr	r0, [pc, #52]	; (8002474 <MX_TIM2_Init+0xa4>)
 8002440:	f002 fd48 	bl	8004ed4 <HAL_TIM_Encoder_Init>
 8002444:	4603      	mov	r3, r0
 8002446:	2b00      	cmp	r3, #0
 8002448:	d001      	beq.n	800244e <MX_TIM2_Init+0x7e>
  {
    Error_Handler();
 800244a:	f000 f97d 	bl	8002748 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800244e:	2300      	movs	r3, #0
 8002450:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002452:	2300      	movs	r3, #0
 8002454:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002456:	1d3b      	adds	r3, r7, #4
 8002458:	4619      	mov	r1, r3
 800245a:	4806      	ldr	r0, [pc, #24]	; (8002474 <MX_TIM2_Init+0xa4>)
 800245c:	f003 faca 	bl	80059f4 <HAL_TIMEx_MasterConfigSynchronization>
 8002460:	4603      	mov	r3, r0
 8002462:	2b00      	cmp	r3, #0
 8002464:	d001      	beq.n	800246a <MX_TIM2_Init+0x9a>
  {
    Error_Handler();
 8002466:	f000 f96f 	bl	8002748 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800246a:	bf00      	nop
 800246c:	3730      	adds	r7, #48	; 0x30
 800246e:	46bd      	mov	sp, r7
 8002470:	bd80      	pop	{r7, pc}
 8002472:	bf00      	nop
 8002474:	200003c4 	.word	0x200003c4

08002478 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002478:	b580      	push	{r7, lr}
 800247a:	b08a      	sub	sp, #40	; 0x28
 800247c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800247e:	f107 0320 	add.w	r3, r7, #32
 8002482:	2200      	movs	r2, #0
 8002484:	601a      	str	r2, [r3, #0]
 8002486:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002488:	1d3b      	adds	r3, r7, #4
 800248a:	2200      	movs	r2, #0
 800248c:	601a      	str	r2, [r3, #0]
 800248e:	605a      	str	r2, [r3, #4]
 8002490:	609a      	str	r2, [r3, #8]
 8002492:	60da      	str	r2, [r3, #12]
 8002494:	611a      	str	r2, [r3, #16]
 8002496:	615a      	str	r2, [r3, #20]
 8002498:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800249a:	4b32      	ldr	r3, [pc, #200]	; (8002564 <MX_TIM3_Init+0xec>)
 800249c:	4a32      	ldr	r2, [pc, #200]	; (8002568 <MX_TIM3_Init+0xf0>)
 800249e:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 6;
 80024a0:	4b30      	ldr	r3, [pc, #192]	; (8002564 <MX_TIM3_Init+0xec>)
 80024a2:	2206      	movs	r2, #6
 80024a4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80024a6:	4b2f      	ldr	r3, [pc, #188]	; (8002564 <MX_TIM3_Init+0xec>)
 80024a8:	2200      	movs	r2, #0
 80024aa:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80024ac:	4b2d      	ldr	r3, [pc, #180]	; (8002564 <MX_TIM3_Init+0xec>)
 80024ae:	f240 32e7 	movw	r2, #999	; 0x3e7
 80024b2:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80024b4:	4b2b      	ldr	r3, [pc, #172]	; (8002564 <MX_TIM3_Init+0xec>)
 80024b6:	2200      	movs	r2, #0
 80024b8:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80024ba:	4b2a      	ldr	r3, [pc, #168]	; (8002564 <MX_TIM3_Init+0xec>)
 80024bc:	2200      	movs	r2, #0
 80024be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80024c0:	4828      	ldr	r0, [pc, #160]	; (8002564 <MX_TIM3_Init+0xec>)
 80024c2:	f002 fbef 	bl	8004ca4 <HAL_TIM_PWM_Init>
 80024c6:	4603      	mov	r3, r0
 80024c8:	2b00      	cmp	r3, #0
 80024ca:	d001      	beq.n	80024d0 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 80024cc:	f000 f93c 	bl	8002748 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80024d0:	2300      	movs	r3, #0
 80024d2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80024d4:	2300      	movs	r3, #0
 80024d6:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80024d8:	f107 0320 	add.w	r3, r7, #32
 80024dc:	4619      	mov	r1, r3
 80024de:	4821      	ldr	r0, [pc, #132]	; (8002564 <MX_TIM3_Init+0xec>)
 80024e0:	f003 fa88 	bl	80059f4 <HAL_TIMEx_MasterConfigSynchronization>
 80024e4:	4603      	mov	r3, r0
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d001      	beq.n	80024ee <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80024ea:	f000 f92d 	bl	8002748 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80024ee:	2360      	movs	r3, #96	; 0x60
 80024f0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80024f2:	2300      	movs	r3, #0
 80024f4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80024f6:	2300      	movs	r3, #0
 80024f8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80024fa:	2300      	movs	r3, #0
 80024fc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80024fe:	1d3b      	adds	r3, r7, #4
 8002500:	2200      	movs	r2, #0
 8002502:	4619      	mov	r1, r3
 8002504:	4817      	ldr	r0, [pc, #92]	; (8002564 <MX_TIM3_Init+0xec>)
 8002506:	f002 ff09 	bl	800531c <HAL_TIM_PWM_ConfigChannel>
 800250a:	4603      	mov	r3, r0
 800250c:	2b00      	cmp	r3, #0
 800250e:	d001      	beq.n	8002514 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8002510:	f000 f91a 	bl	8002748 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8002514:	1d3b      	adds	r3, r7, #4
 8002516:	2204      	movs	r2, #4
 8002518:	4619      	mov	r1, r3
 800251a:	4812      	ldr	r0, [pc, #72]	; (8002564 <MX_TIM3_Init+0xec>)
 800251c:	f002 fefe 	bl	800531c <HAL_TIM_PWM_ConfigChannel>
 8002520:	4603      	mov	r3, r0
 8002522:	2b00      	cmp	r3, #0
 8002524:	d001      	beq.n	800252a <MX_TIM3_Init+0xb2>
  {
    Error_Handler();
 8002526:	f000 f90f 	bl	8002748 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 800252a:	1d3b      	adds	r3, r7, #4
 800252c:	2208      	movs	r2, #8
 800252e:	4619      	mov	r1, r3
 8002530:	480c      	ldr	r0, [pc, #48]	; (8002564 <MX_TIM3_Init+0xec>)
 8002532:	f002 fef3 	bl	800531c <HAL_TIM_PWM_ConfigChannel>
 8002536:	4603      	mov	r3, r0
 8002538:	2b00      	cmp	r3, #0
 800253a:	d001      	beq.n	8002540 <MX_TIM3_Init+0xc8>
  {
    Error_Handler();
 800253c:	f000 f904 	bl	8002748 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8002540:	1d3b      	adds	r3, r7, #4
 8002542:	220c      	movs	r2, #12
 8002544:	4619      	mov	r1, r3
 8002546:	4807      	ldr	r0, [pc, #28]	; (8002564 <MX_TIM3_Init+0xec>)
 8002548:	f002 fee8 	bl	800531c <HAL_TIM_PWM_ConfigChannel>
 800254c:	4603      	mov	r3, r0
 800254e:	2b00      	cmp	r3, #0
 8002550:	d001      	beq.n	8002556 <MX_TIM3_Init+0xde>
  {
    Error_Handler();
 8002552:	f000 f8f9 	bl	8002748 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8002556:	4803      	ldr	r0, [pc, #12]	; (8002564 <MX_TIM3_Init+0xec>)
 8002558:	f000 fa0e 	bl	8002978 <HAL_TIM_MspPostInit>

}
 800255c:	bf00      	nop
 800255e:	3728      	adds	r7, #40	; 0x28
 8002560:	46bd      	mov	sp, r7
 8002562:	bd80      	pop	{r7, pc}
 8002564:	2000040c 	.word	0x2000040c
 8002568:	40000400 	.word	0x40000400

0800256c <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 800256c:	b580      	push	{r7, lr}
 800256e:	b08c      	sub	sp, #48	; 0x30
 8002570:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8002572:	f107 030c 	add.w	r3, r7, #12
 8002576:	2224      	movs	r2, #36	; 0x24
 8002578:	2100      	movs	r1, #0
 800257a:	4618      	mov	r0, r3
 800257c:	f004 fd16 	bl	8006fac <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002580:	1d3b      	adds	r3, r7, #4
 8002582:	2200      	movs	r2, #0
 8002584:	601a      	str	r2, [r3, #0]
 8002586:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8002588:	4b20      	ldr	r3, [pc, #128]	; (800260c <MX_TIM4_Init+0xa0>)
 800258a:	4a21      	ldr	r2, [pc, #132]	; (8002610 <MX_TIM4_Init+0xa4>)
 800258c:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 800258e:	4b1f      	ldr	r3, [pc, #124]	; (800260c <MX_TIM4_Init+0xa0>)
 8002590:	2200      	movs	r2, #0
 8002592:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002594:	4b1d      	ldr	r3, [pc, #116]	; (800260c <MX_TIM4_Init+0xa0>)
 8002596:	2200      	movs	r2, #0
 8002598:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800259a:	4b1c      	ldr	r3, [pc, #112]	; (800260c <MX_TIM4_Init+0xa0>)
 800259c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80025a0:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80025a2:	4b1a      	ldr	r3, [pc, #104]	; (800260c <MX_TIM4_Init+0xa0>)
 80025a4:	2200      	movs	r2, #0
 80025a6:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025a8:	4b18      	ldr	r3, [pc, #96]	; (800260c <MX_TIM4_Init+0xa0>)
 80025aa:	2200      	movs	r2, #0
 80025ac:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80025ae:	2303      	movs	r3, #3
 80025b0:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80025b2:	2300      	movs	r3, #0
 80025b4:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80025b6:	2301      	movs	r3, #1
 80025b8:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80025ba:	2300      	movs	r3, #0
 80025bc:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80025be:	2300      	movs	r3, #0
 80025c0:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80025c2:	2300      	movs	r3, #0
 80025c4:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80025c6:	2301      	movs	r3, #1
 80025c8:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80025ca:	2300      	movs	r3, #0
 80025cc:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 80025ce:	2300      	movs	r3, #0
 80025d0:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 80025d2:	f107 030c 	add.w	r3, r7, #12
 80025d6:	4619      	mov	r1, r3
 80025d8:	480c      	ldr	r0, [pc, #48]	; (800260c <MX_TIM4_Init+0xa0>)
 80025da:	f002 fc7b 	bl	8004ed4 <HAL_TIM_Encoder_Init>
 80025de:	4603      	mov	r3, r0
 80025e0:	2b00      	cmp	r3, #0
 80025e2:	d001      	beq.n	80025e8 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 80025e4:	f000 f8b0 	bl	8002748 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80025e8:	2300      	movs	r3, #0
 80025ea:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80025ec:	2300      	movs	r3, #0
 80025ee:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80025f0:	1d3b      	adds	r3, r7, #4
 80025f2:	4619      	mov	r1, r3
 80025f4:	4805      	ldr	r0, [pc, #20]	; (800260c <MX_TIM4_Init+0xa0>)
 80025f6:	f003 f9fd 	bl	80059f4 <HAL_TIMEx_MasterConfigSynchronization>
 80025fa:	4603      	mov	r3, r0
 80025fc:	2b00      	cmp	r3, #0
 80025fe:	d001      	beq.n	8002604 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 8002600:	f000 f8a2 	bl	8002748 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8002604:	bf00      	nop
 8002606:	3730      	adds	r7, #48	; 0x30
 8002608:	46bd      	mov	sp, r7
 800260a:	bd80      	pop	{r7, pc}
 800260c:	20000454 	.word	0x20000454
 8002610:	40000800 	.word	0x40000800

08002614 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002614:	b480      	push	{r7}
 8002616:	b085      	sub	sp, #20
 8002618:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800261a:	2300      	movs	r3, #0
 800261c:	60fb      	str	r3, [r7, #12]
 800261e:	4b1e      	ldr	r3, [pc, #120]	; (8002698 <MX_GPIO_Init+0x84>)
 8002620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002622:	4a1d      	ldr	r2, [pc, #116]	; (8002698 <MX_GPIO_Init+0x84>)
 8002624:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002628:	6313      	str	r3, [r2, #48]	; 0x30
 800262a:	4b1b      	ldr	r3, [pc, #108]	; (8002698 <MX_GPIO_Init+0x84>)
 800262c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800262e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002632:	60fb      	str	r3, [r7, #12]
 8002634:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002636:	2300      	movs	r3, #0
 8002638:	60bb      	str	r3, [r7, #8]
 800263a:	4b17      	ldr	r3, [pc, #92]	; (8002698 <MX_GPIO_Init+0x84>)
 800263c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800263e:	4a16      	ldr	r2, [pc, #88]	; (8002698 <MX_GPIO_Init+0x84>)
 8002640:	f043 0301 	orr.w	r3, r3, #1
 8002644:	6313      	str	r3, [r2, #48]	; 0x30
 8002646:	4b14      	ldr	r3, [pc, #80]	; (8002698 <MX_GPIO_Init+0x84>)
 8002648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264a:	f003 0301 	and.w	r3, r3, #1
 800264e:	60bb      	str	r3, [r7, #8]
 8002650:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002652:	2300      	movs	r3, #0
 8002654:	607b      	str	r3, [r7, #4]
 8002656:	4b10      	ldr	r3, [pc, #64]	; (8002698 <MX_GPIO_Init+0x84>)
 8002658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800265a:	4a0f      	ldr	r2, [pc, #60]	; (8002698 <MX_GPIO_Init+0x84>)
 800265c:	f043 0302 	orr.w	r3, r3, #2
 8002660:	6313      	str	r3, [r2, #48]	; 0x30
 8002662:	4b0d      	ldr	r3, [pc, #52]	; (8002698 <MX_GPIO_Init+0x84>)
 8002664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002666:	f003 0302 	and.w	r3, r3, #2
 800266a:	607b      	str	r3, [r7, #4]
 800266c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800266e:	2300      	movs	r3, #0
 8002670:	603b      	str	r3, [r7, #0]
 8002672:	4b09      	ldr	r3, [pc, #36]	; (8002698 <MX_GPIO_Init+0x84>)
 8002674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002676:	4a08      	ldr	r2, [pc, #32]	; (8002698 <MX_GPIO_Init+0x84>)
 8002678:	f043 0308 	orr.w	r3, r3, #8
 800267c:	6313      	str	r3, [r2, #48]	; 0x30
 800267e:	4b06      	ldr	r3, [pc, #24]	; (8002698 <MX_GPIO_Init+0x84>)
 8002680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002682:	f003 0308 	and.w	r3, r3, #8
 8002686:	603b      	str	r3, [r7, #0]
 8002688:	683b      	ldr	r3, [r7, #0]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800268a:	bf00      	nop
 800268c:	3714      	adds	r7, #20
 800268e:	46bd      	mov	sp, r7
 8002690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002694:	4770      	bx	lr
 8002696:	bf00      	nop
 8002698:	40023800 	.word	0x40023800

0800269c <StartMPU6050ask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartMPU6050ask */
void StartMPU6050ask(void const * argument)
{
 800269c:	b580      	push	{r7, lr}
 800269e:	b082      	sub	sp, #8
 80026a0:	af00      	add	r7, sp, #0
 80026a2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	MPU6050_Read_All(&MPU6050);
 80026a4:	4813      	ldr	r0, [pc, #76]	; (80026f4 <StartMPU6050ask+0x58>)
 80026a6:	f7fe ffd3 	bl	8001650 <MPU6050_Read_All>
	enc_l=CountRead(&ENC_L, count_ModeX1);
 80026aa:	2100      	movs	r1, #0
 80026ac:	4812      	ldr	r0, [pc, #72]	; (80026f8 <StartMPU6050ask+0x5c>)
 80026ae:	f7fe fc99 	bl	8000fe4 <CountRead>
 80026b2:	ec53 2b10 	vmov	r2, r3, d0
 80026b6:	4610      	mov	r0, r2
 80026b8:	4619      	mov	r1, r3
 80026ba:	f7fe f9f5 	bl	8000aa8 <__aeabi_d2iz>
 80026be:	4603      	mov	r3, r0
 80026c0:	4a0e      	ldr	r2, [pc, #56]	; (80026fc <StartMPU6050ask+0x60>)
 80026c2:	6013      	str	r3, [r2, #0]
	enc_r=CountRead(&ENC_R, count_ModeX1);
 80026c4:	2100      	movs	r1, #0
 80026c6:	480e      	ldr	r0, [pc, #56]	; (8002700 <StartMPU6050ask+0x64>)
 80026c8:	f7fe fc8c 	bl	8000fe4 <CountRead>
 80026cc:	ec53 2b10 	vmov	r2, r3, d0
 80026d0:	4610      	mov	r0, r2
 80026d2:	4619      	mov	r1, r3
 80026d4:	f7fe f9e8 	bl	8000aa8 <__aeabi_d2iz>
 80026d8:	4603      	mov	r3, r0
 80026da:	4a0a      	ldr	r2, [pc, #40]	; (8002704 <StartMPU6050ask+0x68>)
 80026dc:	6013      	str	r3, [r2, #0]
	SpeedReadNonReset(&ENC_L);
 80026de:	4806      	ldr	r0, [pc, #24]	; (80026f8 <StartMPU6050ask+0x5c>)
 80026e0:	f7fe fbf2 	bl	8000ec8 <SpeedReadNonReset>
	SpeedReadNonReset(&ENC_R);
 80026e4:	4806      	ldr	r0, [pc, #24]	; (8002700 <StartMPU6050ask+0x64>)
 80026e6:	f7fe fbef 	bl	8000ec8 <SpeedReadNonReset>
    osDelay(10);
 80026ea:	200a      	movs	r0, #10
 80026ec:	f003 fa7d 	bl	8005bea <osDelay>
	MPU6050_Read_All(&MPU6050);
 80026f0:	e7d8      	b.n	80026a4 <StartMPU6050ask+0x8>
 80026f2:	bf00      	nop
 80026f4:	200004b0 	.word	0x200004b0
 80026f8:	20000508 	.word	0x20000508
 80026fc:	200005c8 	.word	0x200005c8
 8002700:	20000550 	.word	0x20000550
 8002704:	200005cc 	.word	0x200005cc

08002708 <StartTaskFunction>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTaskFunction */
void StartTaskFunction(void const * argument)
{
 8002708:	b580      	push	{r7, lr}
 800270a:	b082      	sub	sp, #8
 800270c:	af00      	add	r7, sp, #0
 800270e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTaskFunction */
  /* Infinite loop */
  for(;;)
  {
	getfunctionLQR(&MPU6050);
 8002710:	4803      	ldr	r0, [pc, #12]	; (8002720 <StartTaskFunction+0x18>)
 8002712:	f7ff fbd1 	bl	8001eb8 <getfunctionLQR>
    osDelay(10);
 8002716:	200a      	movs	r0, #10
 8002718:	f003 fa67 	bl	8005bea <osDelay>
	getfunctionLQR(&MPU6050);
 800271c:	e7f8      	b.n	8002710 <StartTaskFunction+0x8>
 800271e:	bf00      	nop
 8002720:	200004b0 	.word	0x200004b0

08002724 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002724:	b580      	push	{r7, lr}
 8002726:	b082      	sub	sp, #8
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM14) {
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	4a04      	ldr	r2, [pc, #16]	; (8002744 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8002732:	4293      	cmp	r3, r2
 8002734:	d101      	bne.n	800273a <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8002736:	f000 fa73 	bl	8002c20 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800273a:	bf00      	nop
 800273c:	3708      	adds	r7, #8
 800273e:	46bd      	mov	sp, r7
 8002740:	bd80      	pop	{r7, pc}
 8002742:	bf00      	nop
 8002744:	40002000 	.word	0x40002000

08002748 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800274c:	b672      	cpsid	i
}
 800274e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002750:	e7fe      	b.n	8002750 <Error_Handler+0x8>
	...

08002754 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800275a:	2300      	movs	r3, #0
 800275c:	607b      	str	r3, [r7, #4]
 800275e:	4b12      	ldr	r3, [pc, #72]	; (80027a8 <HAL_MspInit+0x54>)
 8002760:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002762:	4a11      	ldr	r2, [pc, #68]	; (80027a8 <HAL_MspInit+0x54>)
 8002764:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002768:	6453      	str	r3, [r2, #68]	; 0x44
 800276a:	4b0f      	ldr	r3, [pc, #60]	; (80027a8 <HAL_MspInit+0x54>)
 800276c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800276e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002772:	607b      	str	r3, [r7, #4]
 8002774:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002776:	2300      	movs	r3, #0
 8002778:	603b      	str	r3, [r7, #0]
 800277a:	4b0b      	ldr	r3, [pc, #44]	; (80027a8 <HAL_MspInit+0x54>)
 800277c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800277e:	4a0a      	ldr	r2, [pc, #40]	; (80027a8 <HAL_MspInit+0x54>)
 8002780:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002784:	6413      	str	r3, [r2, #64]	; 0x40
 8002786:	4b08      	ldr	r3, [pc, #32]	; (80027a8 <HAL_MspInit+0x54>)
 8002788:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800278a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800278e:	603b      	str	r3, [r7, #0]
 8002790:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002792:	2200      	movs	r2, #0
 8002794:	210f      	movs	r1, #15
 8002796:	f06f 0001 	mvn.w	r0, #1
 800279a:	f000 fb19 	bl	8002dd0 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800279e:	bf00      	nop
 80027a0:	3708      	adds	r7, #8
 80027a2:	46bd      	mov	sp, r7
 80027a4:	bd80      	pop	{r7, pc}
 80027a6:	bf00      	nop
 80027a8:	40023800 	.word	0x40023800

080027ac <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	b08a      	sub	sp, #40	; 0x28
 80027b0:	af00      	add	r7, sp, #0
 80027b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027b4:	f107 0314 	add.w	r3, r7, #20
 80027b8:	2200      	movs	r2, #0
 80027ba:	601a      	str	r2, [r3, #0]
 80027bc:	605a      	str	r2, [r3, #4]
 80027be:	609a      	str	r2, [r3, #8]
 80027c0:	60da      	str	r2, [r3, #12]
 80027c2:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	4a19      	ldr	r2, [pc, #100]	; (8002830 <HAL_I2C_MspInit+0x84>)
 80027ca:	4293      	cmp	r3, r2
 80027cc:	d12b      	bne.n	8002826 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80027ce:	2300      	movs	r3, #0
 80027d0:	613b      	str	r3, [r7, #16]
 80027d2:	4b18      	ldr	r3, [pc, #96]	; (8002834 <HAL_I2C_MspInit+0x88>)
 80027d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027d6:	4a17      	ldr	r2, [pc, #92]	; (8002834 <HAL_I2C_MspInit+0x88>)
 80027d8:	f043 0302 	orr.w	r3, r3, #2
 80027dc:	6313      	str	r3, [r2, #48]	; 0x30
 80027de:	4b15      	ldr	r3, [pc, #84]	; (8002834 <HAL_I2C_MspInit+0x88>)
 80027e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027e2:	f003 0302 	and.w	r3, r3, #2
 80027e6:	613b      	str	r3, [r7, #16]
 80027e8:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80027ea:	23c0      	movs	r3, #192	; 0xc0
 80027ec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80027ee:	2312      	movs	r3, #18
 80027f0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80027f2:	2300      	movs	r3, #0
 80027f4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027f6:	2303      	movs	r3, #3
 80027f8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80027fa:	2304      	movs	r3, #4
 80027fc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80027fe:	f107 0314 	add.w	r3, r7, #20
 8002802:	4619      	mov	r1, r3
 8002804:	480c      	ldr	r0, [pc, #48]	; (8002838 <HAL_I2C_MspInit+0x8c>)
 8002806:	f000 fb0d 	bl	8002e24 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800280a:	2300      	movs	r3, #0
 800280c:	60fb      	str	r3, [r7, #12]
 800280e:	4b09      	ldr	r3, [pc, #36]	; (8002834 <HAL_I2C_MspInit+0x88>)
 8002810:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002812:	4a08      	ldr	r2, [pc, #32]	; (8002834 <HAL_I2C_MspInit+0x88>)
 8002814:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002818:	6413      	str	r3, [r2, #64]	; 0x40
 800281a:	4b06      	ldr	r3, [pc, #24]	; (8002834 <HAL_I2C_MspInit+0x88>)
 800281c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800281e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002822:	60fb      	str	r3, [r7, #12]
 8002824:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002826:	bf00      	nop
 8002828:	3728      	adds	r7, #40	; 0x28
 800282a:	46bd      	mov	sp, r7
 800282c:	bd80      	pop	{r7, pc}
 800282e:	bf00      	nop
 8002830:	40005400 	.word	0x40005400
 8002834:	40023800 	.word	0x40023800
 8002838:	40020400 	.word	0x40020400

0800283c <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 800283c:	b580      	push	{r7, lr}
 800283e:	b08c      	sub	sp, #48	; 0x30
 8002840:	af00      	add	r7, sp, #0
 8002842:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002844:	f107 031c 	add.w	r3, r7, #28
 8002848:	2200      	movs	r2, #0
 800284a:	601a      	str	r2, [r3, #0]
 800284c:	605a      	str	r2, [r3, #4]
 800284e:	609a      	str	r2, [r3, #8]
 8002850:	60da      	str	r2, [r3, #12]
 8002852:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800285c:	d12c      	bne.n	80028b8 <HAL_TIM_Encoder_MspInit+0x7c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800285e:	2300      	movs	r3, #0
 8002860:	61bb      	str	r3, [r7, #24]
 8002862:	4b30      	ldr	r3, [pc, #192]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002864:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002866:	4a2f      	ldr	r2, [pc, #188]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002868:	f043 0301 	orr.w	r3, r3, #1
 800286c:	6413      	str	r3, [r2, #64]	; 0x40
 800286e:	4b2d      	ldr	r3, [pc, #180]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002870:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002872:	f003 0301 	and.w	r3, r3, #1
 8002876:	61bb      	str	r3, [r7, #24]
 8002878:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800287a:	2300      	movs	r3, #0
 800287c:	617b      	str	r3, [r7, #20]
 800287e:	4b29      	ldr	r3, [pc, #164]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002880:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002882:	4a28      	ldr	r2, [pc, #160]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 8002884:	f043 0301 	orr.w	r3, r3, #1
 8002888:	6313      	str	r3, [r2, #48]	; 0x30
 800288a:	4b26      	ldr	r3, [pc, #152]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 800288c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800288e:	f003 0301 	and.w	r3, r3, #1
 8002892:	617b      	str	r3, [r7, #20]
 8002894:	697b      	ldr	r3, [r7, #20]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    PA1     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002896:	2303      	movs	r3, #3
 8002898:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800289a:	2302      	movs	r3, #2
 800289c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800289e:	2300      	movs	r3, #0
 80028a0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80028a2:	2300      	movs	r3, #0
 80028a4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80028a6:	2301      	movs	r3, #1
 80028a8:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028aa:	f107 031c 	add.w	r3, r7, #28
 80028ae:	4619      	mov	r1, r3
 80028b0:	481d      	ldr	r0, [pc, #116]	; (8002928 <HAL_TIM_Encoder_MspInit+0xec>)
 80028b2:	f000 fab7 	bl	8002e24 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 80028b6:	e031      	b.n	800291c <HAL_TIM_Encoder_MspInit+0xe0>
  else if(htim_encoder->Instance==TIM4)
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	4a1b      	ldr	r2, [pc, #108]	; (800292c <HAL_TIM_Encoder_MspInit+0xf0>)
 80028be:	4293      	cmp	r3, r2
 80028c0:	d12c      	bne.n	800291c <HAL_TIM_Encoder_MspInit+0xe0>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80028c2:	2300      	movs	r3, #0
 80028c4:	613b      	str	r3, [r7, #16]
 80028c6:	4b17      	ldr	r3, [pc, #92]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028ca:	4a16      	ldr	r2, [pc, #88]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028cc:	f043 0304 	orr.w	r3, r3, #4
 80028d0:	6413      	str	r3, [r2, #64]	; 0x40
 80028d2:	4b14      	ldr	r3, [pc, #80]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028d6:	f003 0304 	and.w	r3, r3, #4
 80028da:	613b      	str	r3, [r7, #16]
 80028dc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80028de:	2300      	movs	r3, #0
 80028e0:	60fb      	str	r3, [r7, #12]
 80028e2:	4b10      	ldr	r3, [pc, #64]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028e6:	4a0f      	ldr	r2, [pc, #60]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028e8:	f043 0308 	orr.w	r3, r3, #8
 80028ec:	6313      	str	r3, [r2, #48]	; 0x30
 80028ee:	4b0d      	ldr	r3, [pc, #52]	; (8002924 <HAL_TIM_Encoder_MspInit+0xe8>)
 80028f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028f2:	f003 0308 	and.w	r3, r3, #8
 80028f6:	60fb      	str	r3, [r7, #12]
 80028f8:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80028fa:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80028fe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002900:	2302      	movs	r3, #2
 8002902:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002904:	2300      	movs	r3, #0
 8002906:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002908:	2300      	movs	r3, #0
 800290a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800290c:	2302      	movs	r3, #2
 800290e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002910:	f107 031c 	add.w	r3, r7, #28
 8002914:	4619      	mov	r1, r3
 8002916:	4806      	ldr	r0, [pc, #24]	; (8002930 <HAL_TIM_Encoder_MspInit+0xf4>)
 8002918:	f000 fa84 	bl	8002e24 <HAL_GPIO_Init>
}
 800291c:	bf00      	nop
 800291e:	3730      	adds	r7, #48	; 0x30
 8002920:	46bd      	mov	sp, r7
 8002922:	bd80      	pop	{r7, pc}
 8002924:	40023800 	.word	0x40023800
 8002928:	40020000 	.word	0x40020000
 800292c:	40000800 	.word	0x40000800
 8002930:	40020c00 	.word	0x40020c00

08002934 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8002934:	b480      	push	{r7}
 8002936:	b085      	sub	sp, #20
 8002938:	af00      	add	r7, sp, #0
 800293a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM3)
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	681b      	ldr	r3, [r3, #0]
 8002940:	4a0b      	ldr	r2, [pc, #44]	; (8002970 <HAL_TIM_PWM_MspInit+0x3c>)
 8002942:	4293      	cmp	r3, r2
 8002944:	d10d      	bne.n	8002962 <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002946:	2300      	movs	r3, #0
 8002948:	60fb      	str	r3, [r7, #12]
 800294a:	4b0a      	ldr	r3, [pc, #40]	; (8002974 <HAL_TIM_PWM_MspInit+0x40>)
 800294c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800294e:	4a09      	ldr	r2, [pc, #36]	; (8002974 <HAL_TIM_PWM_MspInit+0x40>)
 8002950:	f043 0302 	orr.w	r3, r3, #2
 8002954:	6413      	str	r3, [r2, #64]	; 0x40
 8002956:	4b07      	ldr	r3, [pc, #28]	; (8002974 <HAL_TIM_PWM_MspInit+0x40>)
 8002958:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800295a:	f003 0302 	and.w	r3, r3, #2
 800295e:	60fb      	str	r3, [r7, #12]
 8002960:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002962:	bf00      	nop
 8002964:	3714      	adds	r7, #20
 8002966:	46bd      	mov	sp, r7
 8002968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296c:	4770      	bx	lr
 800296e:	bf00      	nop
 8002970:	40000400 	.word	0x40000400
 8002974:	40023800 	.word	0x40023800

08002978 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002978:	b580      	push	{r7, lr}
 800297a:	b08a      	sub	sp, #40	; 0x28
 800297c:	af00      	add	r7, sp, #0
 800297e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002980:	f107 0314 	add.w	r3, r7, #20
 8002984:	2200      	movs	r2, #0
 8002986:	601a      	str	r2, [r3, #0]
 8002988:	605a      	str	r2, [r3, #4]
 800298a:	609a      	str	r2, [r3, #8]
 800298c:	60da      	str	r2, [r3, #12]
 800298e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	4a21      	ldr	r2, [pc, #132]	; (8002a1c <HAL_TIM_MspPostInit+0xa4>)
 8002996:	4293      	cmp	r3, r2
 8002998:	d13b      	bne.n	8002a12 <HAL_TIM_MspPostInit+0x9a>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800299a:	2300      	movs	r3, #0
 800299c:	613b      	str	r3, [r7, #16]
 800299e:	4b20      	ldr	r3, [pc, #128]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a2:	4a1f      	ldr	r2, [pc, #124]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029a4:	f043 0301 	orr.w	r3, r3, #1
 80029a8:	6313      	str	r3, [r2, #48]	; 0x30
 80029aa:	4b1d      	ldr	r3, [pc, #116]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ae:	f003 0301 	and.w	r3, r3, #1
 80029b2:	613b      	str	r3, [r7, #16]
 80029b4:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80029b6:	2300      	movs	r3, #0
 80029b8:	60fb      	str	r3, [r7, #12]
 80029ba:	4b19      	ldr	r3, [pc, #100]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029be:	4a18      	ldr	r2, [pc, #96]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029c0:	f043 0302 	orr.w	r3, r3, #2
 80029c4:	6313      	str	r3, [r2, #48]	; 0x30
 80029c6:	4b16      	ldr	r3, [pc, #88]	; (8002a20 <HAL_TIM_MspPostInit+0xa8>)
 80029c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ca:	f003 0302 	and.w	r3, r3, #2
 80029ce:	60fb      	str	r3, [r7, #12]
 80029d0:	68fb      	ldr	r3, [r7, #12]
    PA6     ------> TIM3_CH1
    PA7     ------> TIM3_CH2
    PB0     ------> TIM3_CH3
    PB1     ------> TIM3_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80029d2:	23c0      	movs	r3, #192	; 0xc0
 80029d4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029d6:	2302      	movs	r3, #2
 80029d8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029da:	2300      	movs	r3, #0
 80029dc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80029de:	2300      	movs	r3, #0
 80029e0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80029e2:	2302      	movs	r3, #2
 80029e4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029e6:	f107 0314 	add.w	r3, r7, #20
 80029ea:	4619      	mov	r1, r3
 80029ec:	480d      	ldr	r0, [pc, #52]	; (8002a24 <HAL_TIM_MspPostInit+0xac>)
 80029ee:	f000 fa19 	bl	8002e24 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80029f2:	2303      	movs	r3, #3
 80029f4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029f6:	2302      	movs	r3, #2
 80029f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029fa:	2300      	movs	r3, #0
 80029fc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80029fe:	2300      	movs	r3, #0
 8002a00:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002a02:	2302      	movs	r3, #2
 8002a04:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a06:	f107 0314 	add.w	r3, r7, #20
 8002a0a:	4619      	mov	r1, r3
 8002a0c:	4806      	ldr	r0, [pc, #24]	; (8002a28 <HAL_TIM_MspPostInit+0xb0>)
 8002a0e:	f000 fa09 	bl	8002e24 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8002a12:	bf00      	nop
 8002a14:	3728      	adds	r7, #40	; 0x28
 8002a16:	46bd      	mov	sp, r7
 8002a18:	bd80      	pop	{r7, pc}
 8002a1a:	bf00      	nop
 8002a1c:	40000400 	.word	0x40000400
 8002a20:	40023800 	.word	0x40023800
 8002a24:	40020000 	.word	0x40020000
 8002a28:	40020400 	.word	0x40020400

08002a2c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002a2c:	b580      	push	{r7, lr}
 8002a2e:	b08e      	sub	sp, #56	; 0x38
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 8002a34:	2300      	movs	r3, #0
 8002a36:	62fb      	str	r3, [r7, #44]	; 0x2c

  uint32_t              uwPrescalerValue = 0U;
 8002a38:	2300      	movs	r3, #0
 8002a3a:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM14 clock */
  __HAL_RCC_TIM14_CLK_ENABLE();
 8002a3c:	2300      	movs	r3, #0
 8002a3e:	60fb      	str	r3, [r7, #12]
 8002a40:	4b33      	ldr	r3, [pc, #204]	; (8002b10 <HAL_InitTick+0xe4>)
 8002a42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a44:	4a32      	ldr	r2, [pc, #200]	; (8002b10 <HAL_InitTick+0xe4>)
 8002a46:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002a4a:	6413      	str	r3, [r2, #64]	; 0x40
 8002a4c:	4b30      	ldr	r3, [pc, #192]	; (8002b10 <HAL_InitTick+0xe4>)
 8002a4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a54:	60fb      	str	r3, [r7, #12]
 8002a56:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002a58:	f107 0210 	add.w	r2, r7, #16
 8002a5c:	f107 0314 	add.w	r3, r7, #20
 8002a60:	4611      	mov	r1, r2
 8002a62:	4618      	mov	r0, r3
 8002a64:	f002 f822 	bl	8004aac <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8002a68:	6a3b      	ldr	r3, [r7, #32]
 8002a6a:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute TIM14 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002a6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d103      	bne.n	8002a7a <HAL_InitTick+0x4e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002a72:	f002 f807 	bl	8004a84 <HAL_RCC_GetPCLK1Freq>
 8002a76:	6378      	str	r0, [r7, #52]	; 0x34
 8002a78:	e004      	b.n	8002a84 <HAL_InitTick+0x58>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002a7a:	f002 f803 	bl	8004a84 <HAL_RCC_GetPCLK1Freq>
 8002a7e:	4603      	mov	r3, r0
 8002a80:	005b      	lsls	r3, r3, #1
 8002a82:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Compute the prescaler value to have TIM14 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002a84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a86:	4a23      	ldr	r2, [pc, #140]	; (8002b14 <HAL_InitTick+0xe8>)
 8002a88:	fba2 2303 	umull	r2, r3, r2, r3
 8002a8c:	0c9b      	lsrs	r3, r3, #18
 8002a8e:	3b01      	subs	r3, #1
 8002a90:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM14 */
  htim14.Instance = TIM14;
 8002a92:	4b21      	ldr	r3, [pc, #132]	; (8002b18 <HAL_InitTick+0xec>)
 8002a94:	4a21      	ldr	r2, [pc, #132]	; (8002b1c <HAL_InitTick+0xf0>)
 8002a96:	601a      	str	r2, [r3, #0]
  + Period = [(TIM14CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim14.Init.Period = (1000000U / 1000U) - 1U;
 8002a98:	4b1f      	ldr	r3, [pc, #124]	; (8002b18 <HAL_InitTick+0xec>)
 8002a9a:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002a9e:	60da      	str	r2, [r3, #12]
  htim14.Init.Prescaler = uwPrescalerValue;
 8002aa0:	4a1d      	ldr	r2, [pc, #116]	; (8002b18 <HAL_InitTick+0xec>)
 8002aa2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002aa4:	6053      	str	r3, [r2, #4]
  htim14.Init.ClockDivision = 0;
 8002aa6:	4b1c      	ldr	r3, [pc, #112]	; (8002b18 <HAL_InitTick+0xec>)
 8002aa8:	2200      	movs	r2, #0
 8002aaa:	611a      	str	r2, [r3, #16]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002aac:	4b1a      	ldr	r3, [pc, #104]	; (8002b18 <HAL_InitTick+0xec>)
 8002aae:	2200      	movs	r2, #0
 8002ab0:	609a      	str	r2, [r3, #8]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ab2:	4b19      	ldr	r3, [pc, #100]	; (8002b18 <HAL_InitTick+0xec>)
 8002ab4:	2200      	movs	r2, #0
 8002ab6:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim14);
 8002ab8:	4817      	ldr	r0, [pc, #92]	; (8002b18 <HAL_InitTick+0xec>)
 8002aba:	f002 f829 	bl	8004b10 <HAL_TIM_Base_Init>
 8002abe:	4603      	mov	r3, r0
 8002ac0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  if (status == HAL_OK)
 8002ac4:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d11b      	bne.n	8002b04 <HAL_InitTick+0xd8>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim14);
 8002acc:	4812      	ldr	r0, [pc, #72]	; (8002b18 <HAL_InitTick+0xec>)
 8002ace:	f002 f879 	bl	8004bc4 <HAL_TIM_Base_Start_IT>
 8002ad2:	4603      	mov	r3, r0
 8002ad4:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    if (status == HAL_OK)
 8002ad8:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	d111      	bne.n	8002b04 <HAL_InitTick+0xd8>
    {
    /* Enable the TIM14 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
 8002ae0:	202d      	movs	r0, #45	; 0x2d
 8002ae2:	f000 f991 	bl	8002e08 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	2b0f      	cmp	r3, #15
 8002aea:	d808      	bhi.n	8002afe <HAL_InitTick+0xd2>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM8_TRG_COM_TIM14_IRQn, TickPriority, 0U);
 8002aec:	2200      	movs	r2, #0
 8002aee:	6879      	ldr	r1, [r7, #4]
 8002af0:	202d      	movs	r0, #45	; 0x2d
 8002af2:	f000 f96d 	bl	8002dd0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002af6:	4a0a      	ldr	r2, [pc, #40]	; (8002b20 <HAL_InitTick+0xf4>)
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	6013      	str	r3, [r2, #0]
 8002afc:	e002      	b.n	8002b04 <HAL_InitTick+0xd8>
      }
      else
      {
        status = HAL_ERROR;
 8002afe:	2301      	movs	r3, #1
 8002b00:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      }
    }
  }

 /* Return function status */
  return status;
 8002b04:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
 8002b08:	4618      	mov	r0, r3
 8002b0a:	3738      	adds	r7, #56	; 0x38
 8002b0c:	46bd      	mov	sp, r7
 8002b0e:	bd80      	pop	{r7, pc}
 8002b10:	40023800 	.word	0x40023800
 8002b14:	431bde83 	.word	0x431bde83
 8002b18:	2000061c 	.word	0x2000061c
 8002b1c:	40002000 	.word	0x40002000
 8002b20:	20000094 	.word	0x20000094

08002b24 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002b24:	b480      	push	{r7}
 8002b26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002b28:	e7fe      	b.n	8002b28 <NMI_Handler+0x4>

08002b2a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002b2a:	b480      	push	{r7}
 8002b2c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002b2e:	e7fe      	b.n	8002b2e <HardFault_Handler+0x4>

08002b30 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002b30:	b480      	push	{r7}
 8002b32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002b34:	e7fe      	b.n	8002b34 <MemManage_Handler+0x4>

08002b36 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002b36:	b480      	push	{r7}
 8002b38:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002b3a:	e7fe      	b.n	8002b3a <BusFault_Handler+0x4>

08002b3c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002b3c:	b480      	push	{r7}
 8002b3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002b40:	e7fe      	b.n	8002b40 <UsageFault_Handler+0x4>

08002b42 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002b42:	b480      	push	{r7}
 8002b44:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002b46:	bf00      	nop
 8002b48:	46bd      	mov	sp, r7
 8002b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b4e:	4770      	bx	lr

08002b50 <TIM8_TRG_COM_TIM14_IRQHandler>:

/**
  * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt.
  */
void TIM8_TRG_COM_TIM14_IRQHandler(void)
{
 8002b50:	b580      	push	{r7, lr}
 8002b52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 8002b54:	4802      	ldr	r0, [pc, #8]	; (8002b60 <TIM8_TRG_COM_TIM14_IRQHandler+0x10>)
 8002b56:	f002 faf1 	bl	800513c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */

  /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
}
 8002b5a:	bf00      	nop
 8002b5c:	bd80      	pop	{r7, pc}
 8002b5e:	bf00      	nop
 8002b60:	2000061c 	.word	0x2000061c

08002b64 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002b64:	b480      	push	{r7}
 8002b66:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002b68:	4b06      	ldr	r3, [pc, #24]	; (8002b84 <SystemInit+0x20>)
 8002b6a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b6e:	4a05      	ldr	r2, [pc, #20]	; (8002b84 <SystemInit+0x20>)
 8002b70:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002b74:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002b78:	bf00      	nop
 8002b7a:	46bd      	mov	sp, r7
 8002b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b80:	4770      	bx	lr
 8002b82:	bf00      	nop
 8002b84:	e000ed00 	.word	0xe000ed00

08002b88 <Reset_Handler>:
 8002b88:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002bc0 <LoopFillZerobss+0xe>
 8002b8c:	f7ff ffea 	bl	8002b64 <SystemInit>
 8002b90:	480c      	ldr	r0, [pc, #48]	; (8002bc4 <LoopFillZerobss+0x12>)
 8002b92:	490d      	ldr	r1, [pc, #52]	; (8002bc8 <LoopFillZerobss+0x16>)
 8002b94:	4a0d      	ldr	r2, [pc, #52]	; (8002bcc <LoopFillZerobss+0x1a>)
 8002b96:	2300      	movs	r3, #0
 8002b98:	e002      	b.n	8002ba0 <LoopCopyDataInit>

08002b9a <CopyDataInit>:
 8002b9a:	58d4      	ldr	r4, [r2, r3]
 8002b9c:	50c4      	str	r4, [r0, r3]
 8002b9e:	3304      	adds	r3, #4

08002ba0 <LoopCopyDataInit>:
 8002ba0:	18c4      	adds	r4, r0, r3
 8002ba2:	428c      	cmp	r4, r1
 8002ba4:	d3f9      	bcc.n	8002b9a <CopyDataInit>
 8002ba6:	4a0a      	ldr	r2, [pc, #40]	; (8002bd0 <LoopFillZerobss+0x1e>)
 8002ba8:	4c0a      	ldr	r4, [pc, #40]	; (8002bd4 <LoopFillZerobss+0x22>)
 8002baa:	2300      	movs	r3, #0
 8002bac:	e001      	b.n	8002bb2 <LoopFillZerobss>

08002bae <FillZerobss>:
 8002bae:	6013      	str	r3, [r2, #0]
 8002bb0:	3204      	adds	r2, #4

08002bb2 <LoopFillZerobss>:
 8002bb2:	42a2      	cmp	r2, r4
 8002bb4:	d3fb      	bcc.n	8002bae <FillZerobss>
 8002bb6:	f004 fa07 	bl	8006fc8 <__libc_init_array>
 8002bba:	f7ff faf5 	bl	80021a8 <main>
 8002bbe:	4770      	bx	lr
 8002bc0:	20020000 	.word	0x20020000
 8002bc4:	20000000 	.word	0x20000000
 8002bc8:	20000100 	.word	0x20000100
 8002bcc:	08007818 	.word	0x08007818
 8002bd0:	20000100 	.word	0x20000100
 8002bd4:	200044f4 	.word	0x200044f4

08002bd8 <ADC_IRQHandler>:
 8002bd8:	e7fe      	b.n	8002bd8 <ADC_IRQHandler>
	...

08002bdc <HAL_Init>:
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	af00      	add	r7, sp, #0
 8002be0:	4b0e      	ldr	r3, [pc, #56]	; (8002c1c <HAL_Init+0x40>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	4a0d      	ldr	r2, [pc, #52]	; (8002c1c <HAL_Init+0x40>)
 8002be6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002bea:	6013      	str	r3, [r2, #0]
 8002bec:	4b0b      	ldr	r3, [pc, #44]	; (8002c1c <HAL_Init+0x40>)
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4a0a      	ldr	r2, [pc, #40]	; (8002c1c <HAL_Init+0x40>)
 8002bf2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002bf6:	6013      	str	r3, [r2, #0]
 8002bf8:	4b08      	ldr	r3, [pc, #32]	; (8002c1c <HAL_Init+0x40>)
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	4a07      	ldr	r2, [pc, #28]	; (8002c1c <HAL_Init+0x40>)
 8002bfe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002c02:	6013      	str	r3, [r2, #0]
 8002c04:	2003      	movs	r0, #3
 8002c06:	f000 f8d8 	bl	8002dba <HAL_NVIC_SetPriorityGrouping>
 8002c0a:	200f      	movs	r0, #15
 8002c0c:	f7ff ff0e 	bl	8002a2c <HAL_InitTick>
 8002c10:	f7ff fda0 	bl	8002754 <HAL_MspInit>
 8002c14:	2300      	movs	r3, #0
 8002c16:	4618      	mov	r0, r3
 8002c18:	bd80      	pop	{r7, pc}
 8002c1a:	bf00      	nop
 8002c1c:	40023c00 	.word	0x40023c00

08002c20 <HAL_IncTick>:
 8002c20:	b480      	push	{r7}
 8002c22:	af00      	add	r7, sp, #0
 8002c24:	4b06      	ldr	r3, [pc, #24]	; (8002c40 <HAL_IncTick+0x20>)
 8002c26:	781b      	ldrb	r3, [r3, #0]
 8002c28:	461a      	mov	r2, r3
 8002c2a:	4b06      	ldr	r3, [pc, #24]	; (8002c44 <HAL_IncTick+0x24>)
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	4413      	add	r3, r2
 8002c30:	4a04      	ldr	r2, [pc, #16]	; (8002c44 <HAL_IncTick+0x24>)
 8002c32:	6013      	str	r3, [r2, #0]
 8002c34:	bf00      	nop
 8002c36:	46bd      	mov	sp, r7
 8002c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c3c:	4770      	bx	lr
 8002c3e:	bf00      	nop
 8002c40:	20000098 	.word	0x20000098
 8002c44:	20000664 	.word	0x20000664

08002c48 <HAL_GetTick>:
 8002c48:	b480      	push	{r7}
 8002c4a:	af00      	add	r7, sp, #0
 8002c4c:	4b03      	ldr	r3, [pc, #12]	; (8002c5c <HAL_GetTick+0x14>)
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	4618      	mov	r0, r3
 8002c52:	46bd      	mov	sp, r7
 8002c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c58:	4770      	bx	lr
 8002c5a:	bf00      	nop
 8002c5c:	20000664 	.word	0x20000664

08002c60 <__NVIC_SetPriorityGrouping>:
 8002c60:	b480      	push	{r7}
 8002c62:	b085      	sub	sp, #20
 8002c64:	af00      	add	r7, sp, #0
 8002c66:	6078      	str	r0, [r7, #4]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	f003 0307 	and.w	r3, r3, #7
 8002c6e:	60fb      	str	r3, [r7, #12]
 8002c70:	4b0c      	ldr	r3, [pc, #48]	; (8002ca4 <__NVIC_SetPriorityGrouping+0x44>)
 8002c72:	68db      	ldr	r3, [r3, #12]
 8002c74:	60bb      	str	r3, [r7, #8]
 8002c76:	68ba      	ldr	r2, [r7, #8]
 8002c78:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002c7c:	4013      	ands	r3, r2
 8002c7e:	60bb      	str	r3, [r7, #8]
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	021a      	lsls	r2, r3, #8
 8002c84:	68bb      	ldr	r3, [r7, #8]
 8002c86:	4313      	orrs	r3, r2
 8002c88:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002c8c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002c90:	60bb      	str	r3, [r7, #8]
 8002c92:	4a04      	ldr	r2, [pc, #16]	; (8002ca4 <__NVIC_SetPriorityGrouping+0x44>)
 8002c94:	68bb      	ldr	r3, [r7, #8]
 8002c96:	60d3      	str	r3, [r2, #12]
 8002c98:	bf00      	nop
 8002c9a:	3714      	adds	r7, #20
 8002c9c:	46bd      	mov	sp, r7
 8002c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca2:	4770      	bx	lr
 8002ca4:	e000ed00 	.word	0xe000ed00

08002ca8 <__NVIC_GetPriorityGrouping>:
 8002ca8:	b480      	push	{r7}
 8002caa:	af00      	add	r7, sp, #0
 8002cac:	4b04      	ldr	r3, [pc, #16]	; (8002cc0 <__NVIC_GetPriorityGrouping+0x18>)
 8002cae:	68db      	ldr	r3, [r3, #12]
 8002cb0:	0a1b      	lsrs	r3, r3, #8
 8002cb2:	f003 0307 	and.w	r3, r3, #7
 8002cb6:	4618      	mov	r0, r3
 8002cb8:	46bd      	mov	sp, r7
 8002cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cbe:	4770      	bx	lr
 8002cc0:	e000ed00 	.word	0xe000ed00

08002cc4 <__NVIC_EnableIRQ>:
 8002cc4:	b480      	push	{r7}
 8002cc6:	b083      	sub	sp, #12
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	4603      	mov	r3, r0
 8002ccc:	71fb      	strb	r3, [r7, #7]
 8002cce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002cd2:	2b00      	cmp	r3, #0
 8002cd4:	db0b      	blt.n	8002cee <__NVIC_EnableIRQ+0x2a>
 8002cd6:	79fb      	ldrb	r3, [r7, #7]
 8002cd8:	f003 021f 	and.w	r2, r3, #31
 8002cdc:	4907      	ldr	r1, [pc, #28]	; (8002cfc <__NVIC_EnableIRQ+0x38>)
 8002cde:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ce2:	095b      	lsrs	r3, r3, #5
 8002ce4:	2001      	movs	r0, #1
 8002ce6:	fa00 f202 	lsl.w	r2, r0, r2
 8002cea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002cee:	bf00      	nop
 8002cf0:	370c      	adds	r7, #12
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf8:	4770      	bx	lr
 8002cfa:	bf00      	nop
 8002cfc:	e000e100 	.word	0xe000e100

08002d00 <__NVIC_SetPriority>:
 8002d00:	b480      	push	{r7}
 8002d02:	b083      	sub	sp, #12
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	4603      	mov	r3, r0
 8002d08:	6039      	str	r1, [r7, #0]
 8002d0a:	71fb      	strb	r3, [r7, #7]
 8002d0c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	db0a      	blt.n	8002d2a <__NVIC_SetPriority+0x2a>
 8002d14:	683b      	ldr	r3, [r7, #0]
 8002d16:	b2da      	uxtb	r2, r3
 8002d18:	490c      	ldr	r1, [pc, #48]	; (8002d4c <__NVIC_SetPriority+0x4c>)
 8002d1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d1e:	0112      	lsls	r2, r2, #4
 8002d20:	b2d2      	uxtb	r2, r2
 8002d22:	440b      	add	r3, r1
 8002d24:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002d28:	e00a      	b.n	8002d40 <__NVIC_SetPriority+0x40>
 8002d2a:	683b      	ldr	r3, [r7, #0]
 8002d2c:	b2da      	uxtb	r2, r3
 8002d2e:	4908      	ldr	r1, [pc, #32]	; (8002d50 <__NVIC_SetPriority+0x50>)
 8002d30:	79fb      	ldrb	r3, [r7, #7]
 8002d32:	f003 030f 	and.w	r3, r3, #15
 8002d36:	3b04      	subs	r3, #4
 8002d38:	0112      	lsls	r2, r2, #4
 8002d3a:	b2d2      	uxtb	r2, r2
 8002d3c:	440b      	add	r3, r1
 8002d3e:	761a      	strb	r2, [r3, #24]
 8002d40:	bf00      	nop
 8002d42:	370c      	adds	r7, #12
 8002d44:	46bd      	mov	sp, r7
 8002d46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d4a:	4770      	bx	lr
 8002d4c:	e000e100 	.word	0xe000e100
 8002d50:	e000ed00 	.word	0xe000ed00

08002d54 <NVIC_EncodePriority>:
 8002d54:	b480      	push	{r7}
 8002d56:	b089      	sub	sp, #36	; 0x24
 8002d58:	af00      	add	r7, sp, #0
 8002d5a:	60f8      	str	r0, [r7, #12]
 8002d5c:	60b9      	str	r1, [r7, #8]
 8002d5e:	607a      	str	r2, [r7, #4]
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	f003 0307 	and.w	r3, r3, #7
 8002d66:	61fb      	str	r3, [r7, #28]
 8002d68:	69fb      	ldr	r3, [r7, #28]
 8002d6a:	f1c3 0307 	rsb	r3, r3, #7
 8002d6e:	2b04      	cmp	r3, #4
 8002d70:	bf28      	it	cs
 8002d72:	2304      	movcs	r3, #4
 8002d74:	61bb      	str	r3, [r7, #24]
 8002d76:	69fb      	ldr	r3, [r7, #28]
 8002d78:	3304      	adds	r3, #4
 8002d7a:	2b06      	cmp	r3, #6
 8002d7c:	d902      	bls.n	8002d84 <NVIC_EncodePriority+0x30>
 8002d7e:	69fb      	ldr	r3, [r7, #28]
 8002d80:	3b03      	subs	r3, #3
 8002d82:	e000      	b.n	8002d86 <NVIC_EncodePriority+0x32>
 8002d84:	2300      	movs	r3, #0
 8002d86:	617b      	str	r3, [r7, #20]
 8002d88:	f04f 32ff 	mov.w	r2, #4294967295
 8002d8c:	69bb      	ldr	r3, [r7, #24]
 8002d8e:	fa02 f303 	lsl.w	r3, r2, r3
 8002d92:	43da      	mvns	r2, r3
 8002d94:	68bb      	ldr	r3, [r7, #8]
 8002d96:	401a      	ands	r2, r3
 8002d98:	697b      	ldr	r3, [r7, #20]
 8002d9a:	409a      	lsls	r2, r3
 8002d9c:	f04f 31ff 	mov.w	r1, #4294967295
 8002da0:	697b      	ldr	r3, [r7, #20]
 8002da2:	fa01 f303 	lsl.w	r3, r1, r3
 8002da6:	43d9      	mvns	r1, r3
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	400b      	ands	r3, r1
 8002dac:	4313      	orrs	r3, r2
 8002dae:	4618      	mov	r0, r3
 8002db0:	3724      	adds	r7, #36	; 0x24
 8002db2:	46bd      	mov	sp, r7
 8002db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002db8:	4770      	bx	lr

08002dba <HAL_NVIC_SetPriorityGrouping>:
 8002dba:	b580      	push	{r7, lr}
 8002dbc:	b082      	sub	sp, #8
 8002dbe:	af00      	add	r7, sp, #0
 8002dc0:	6078      	str	r0, [r7, #4]
 8002dc2:	6878      	ldr	r0, [r7, #4]
 8002dc4:	f7ff ff4c 	bl	8002c60 <__NVIC_SetPriorityGrouping>
 8002dc8:	bf00      	nop
 8002dca:	3708      	adds	r7, #8
 8002dcc:	46bd      	mov	sp, r7
 8002dce:	bd80      	pop	{r7, pc}

08002dd0 <HAL_NVIC_SetPriority>:
 8002dd0:	b580      	push	{r7, lr}
 8002dd2:	b086      	sub	sp, #24
 8002dd4:	af00      	add	r7, sp, #0
 8002dd6:	4603      	mov	r3, r0
 8002dd8:	60b9      	str	r1, [r7, #8]
 8002dda:	607a      	str	r2, [r7, #4]
 8002ddc:	73fb      	strb	r3, [r7, #15]
 8002dde:	2300      	movs	r3, #0
 8002de0:	617b      	str	r3, [r7, #20]
 8002de2:	f7ff ff61 	bl	8002ca8 <__NVIC_GetPriorityGrouping>
 8002de6:	6178      	str	r0, [r7, #20]
 8002de8:	687a      	ldr	r2, [r7, #4]
 8002dea:	68b9      	ldr	r1, [r7, #8]
 8002dec:	6978      	ldr	r0, [r7, #20]
 8002dee:	f7ff ffb1 	bl	8002d54 <NVIC_EncodePriority>
 8002df2:	4602      	mov	r2, r0
 8002df4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002df8:	4611      	mov	r1, r2
 8002dfa:	4618      	mov	r0, r3
 8002dfc:	f7ff ff80 	bl	8002d00 <__NVIC_SetPriority>
 8002e00:	bf00      	nop
 8002e02:	3718      	adds	r7, #24
 8002e04:	46bd      	mov	sp, r7
 8002e06:	bd80      	pop	{r7, pc}

08002e08 <HAL_NVIC_EnableIRQ>:
 8002e08:	b580      	push	{r7, lr}
 8002e0a:	b082      	sub	sp, #8
 8002e0c:	af00      	add	r7, sp, #0
 8002e0e:	4603      	mov	r3, r0
 8002e10:	71fb      	strb	r3, [r7, #7]
 8002e12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002e16:	4618      	mov	r0, r3
 8002e18:	f7ff ff54 	bl	8002cc4 <__NVIC_EnableIRQ>
 8002e1c:	bf00      	nop
 8002e1e:	3708      	adds	r7, #8
 8002e20:	46bd      	mov	sp, r7
 8002e22:	bd80      	pop	{r7, pc}

08002e24 <HAL_GPIO_Init>:
 8002e24:	b480      	push	{r7}
 8002e26:	b089      	sub	sp, #36	; 0x24
 8002e28:	af00      	add	r7, sp, #0
 8002e2a:	6078      	str	r0, [r7, #4]
 8002e2c:	6039      	str	r1, [r7, #0]
 8002e2e:	2300      	movs	r3, #0
 8002e30:	617b      	str	r3, [r7, #20]
 8002e32:	2300      	movs	r3, #0
 8002e34:	613b      	str	r3, [r7, #16]
 8002e36:	2300      	movs	r3, #0
 8002e38:	61bb      	str	r3, [r7, #24]
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	61fb      	str	r3, [r7, #28]
 8002e3e:	e16b      	b.n	8003118 <HAL_GPIO_Init+0x2f4>
 8002e40:	2201      	movs	r2, #1
 8002e42:	69fb      	ldr	r3, [r7, #28]
 8002e44:	fa02 f303 	lsl.w	r3, r2, r3
 8002e48:	617b      	str	r3, [r7, #20]
 8002e4a:	683b      	ldr	r3, [r7, #0]
 8002e4c:	681b      	ldr	r3, [r3, #0]
 8002e4e:	697a      	ldr	r2, [r7, #20]
 8002e50:	4013      	ands	r3, r2
 8002e52:	613b      	str	r3, [r7, #16]
 8002e54:	693a      	ldr	r2, [r7, #16]
 8002e56:	697b      	ldr	r3, [r7, #20]
 8002e58:	429a      	cmp	r2, r3
 8002e5a:	f040 815a 	bne.w	8003112 <HAL_GPIO_Init+0x2ee>
 8002e5e:	683b      	ldr	r3, [r7, #0]
 8002e60:	685b      	ldr	r3, [r3, #4]
 8002e62:	f003 0303 	and.w	r3, r3, #3
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	d005      	beq.n	8002e76 <HAL_GPIO_Init+0x52>
 8002e6a:	683b      	ldr	r3, [r7, #0]
 8002e6c:	685b      	ldr	r3, [r3, #4]
 8002e6e:	f003 0303 	and.w	r3, r3, #3
 8002e72:	2b02      	cmp	r3, #2
 8002e74:	d130      	bne.n	8002ed8 <HAL_GPIO_Init+0xb4>
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	689b      	ldr	r3, [r3, #8]
 8002e7a:	61bb      	str	r3, [r7, #24]
 8002e7c:	69fb      	ldr	r3, [r7, #28]
 8002e7e:	005b      	lsls	r3, r3, #1
 8002e80:	2203      	movs	r2, #3
 8002e82:	fa02 f303 	lsl.w	r3, r2, r3
 8002e86:	43db      	mvns	r3, r3
 8002e88:	69ba      	ldr	r2, [r7, #24]
 8002e8a:	4013      	ands	r3, r2
 8002e8c:	61bb      	str	r3, [r7, #24]
 8002e8e:	683b      	ldr	r3, [r7, #0]
 8002e90:	68da      	ldr	r2, [r3, #12]
 8002e92:	69fb      	ldr	r3, [r7, #28]
 8002e94:	005b      	lsls	r3, r3, #1
 8002e96:	fa02 f303 	lsl.w	r3, r2, r3
 8002e9a:	69ba      	ldr	r2, [r7, #24]
 8002e9c:	4313      	orrs	r3, r2
 8002e9e:	61bb      	str	r3, [r7, #24]
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	69ba      	ldr	r2, [r7, #24]
 8002ea4:	609a      	str	r2, [r3, #8]
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	685b      	ldr	r3, [r3, #4]
 8002eaa:	61bb      	str	r3, [r7, #24]
 8002eac:	2201      	movs	r2, #1
 8002eae:	69fb      	ldr	r3, [r7, #28]
 8002eb0:	fa02 f303 	lsl.w	r3, r2, r3
 8002eb4:	43db      	mvns	r3, r3
 8002eb6:	69ba      	ldr	r2, [r7, #24]
 8002eb8:	4013      	ands	r3, r2
 8002eba:	61bb      	str	r3, [r7, #24]
 8002ebc:	683b      	ldr	r3, [r7, #0]
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	091b      	lsrs	r3, r3, #4
 8002ec2:	f003 0201 	and.w	r2, r3, #1
 8002ec6:	69fb      	ldr	r3, [r7, #28]
 8002ec8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ecc:	69ba      	ldr	r2, [r7, #24]
 8002ece:	4313      	orrs	r3, r2
 8002ed0:	61bb      	str	r3, [r7, #24]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	69ba      	ldr	r2, [r7, #24]
 8002ed6:	605a      	str	r2, [r3, #4]
 8002ed8:	683b      	ldr	r3, [r7, #0]
 8002eda:	685b      	ldr	r3, [r3, #4]
 8002edc:	f003 0303 	and.w	r3, r3, #3
 8002ee0:	2b03      	cmp	r3, #3
 8002ee2:	d017      	beq.n	8002f14 <HAL_GPIO_Init+0xf0>
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	68db      	ldr	r3, [r3, #12]
 8002ee8:	61bb      	str	r3, [r7, #24]
 8002eea:	69fb      	ldr	r3, [r7, #28]
 8002eec:	005b      	lsls	r3, r3, #1
 8002eee:	2203      	movs	r2, #3
 8002ef0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef4:	43db      	mvns	r3, r3
 8002ef6:	69ba      	ldr	r2, [r7, #24]
 8002ef8:	4013      	ands	r3, r2
 8002efa:	61bb      	str	r3, [r7, #24]
 8002efc:	683b      	ldr	r3, [r7, #0]
 8002efe:	689a      	ldr	r2, [r3, #8]
 8002f00:	69fb      	ldr	r3, [r7, #28]
 8002f02:	005b      	lsls	r3, r3, #1
 8002f04:	fa02 f303 	lsl.w	r3, r2, r3
 8002f08:	69ba      	ldr	r2, [r7, #24]
 8002f0a:	4313      	orrs	r3, r2
 8002f0c:	61bb      	str	r3, [r7, #24]
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	69ba      	ldr	r2, [r7, #24]
 8002f12:	60da      	str	r2, [r3, #12]
 8002f14:	683b      	ldr	r3, [r7, #0]
 8002f16:	685b      	ldr	r3, [r3, #4]
 8002f18:	f003 0303 	and.w	r3, r3, #3
 8002f1c:	2b02      	cmp	r3, #2
 8002f1e:	d123      	bne.n	8002f68 <HAL_GPIO_Init+0x144>
 8002f20:	69fb      	ldr	r3, [r7, #28]
 8002f22:	08da      	lsrs	r2, r3, #3
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	3208      	adds	r2, #8
 8002f28:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002f2c:	61bb      	str	r3, [r7, #24]
 8002f2e:	69fb      	ldr	r3, [r7, #28]
 8002f30:	f003 0307 	and.w	r3, r3, #7
 8002f34:	009b      	lsls	r3, r3, #2
 8002f36:	220f      	movs	r2, #15
 8002f38:	fa02 f303 	lsl.w	r3, r2, r3
 8002f3c:	43db      	mvns	r3, r3
 8002f3e:	69ba      	ldr	r2, [r7, #24]
 8002f40:	4013      	ands	r3, r2
 8002f42:	61bb      	str	r3, [r7, #24]
 8002f44:	683b      	ldr	r3, [r7, #0]
 8002f46:	691a      	ldr	r2, [r3, #16]
 8002f48:	69fb      	ldr	r3, [r7, #28]
 8002f4a:	f003 0307 	and.w	r3, r3, #7
 8002f4e:	009b      	lsls	r3, r3, #2
 8002f50:	fa02 f303 	lsl.w	r3, r2, r3
 8002f54:	69ba      	ldr	r2, [r7, #24]
 8002f56:	4313      	orrs	r3, r2
 8002f58:	61bb      	str	r3, [r7, #24]
 8002f5a:	69fb      	ldr	r3, [r7, #28]
 8002f5c:	08da      	lsrs	r2, r3, #3
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	3208      	adds	r2, #8
 8002f62:	69b9      	ldr	r1, [r7, #24]
 8002f64:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	61bb      	str	r3, [r7, #24]
 8002f6e:	69fb      	ldr	r3, [r7, #28]
 8002f70:	005b      	lsls	r3, r3, #1
 8002f72:	2203      	movs	r2, #3
 8002f74:	fa02 f303 	lsl.w	r3, r2, r3
 8002f78:	43db      	mvns	r3, r3
 8002f7a:	69ba      	ldr	r2, [r7, #24]
 8002f7c:	4013      	ands	r3, r2
 8002f7e:	61bb      	str	r3, [r7, #24]
 8002f80:	683b      	ldr	r3, [r7, #0]
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	f003 0203 	and.w	r2, r3, #3
 8002f88:	69fb      	ldr	r3, [r7, #28]
 8002f8a:	005b      	lsls	r3, r3, #1
 8002f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f90:	69ba      	ldr	r2, [r7, #24]
 8002f92:	4313      	orrs	r3, r2
 8002f94:	61bb      	str	r3, [r7, #24]
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	69ba      	ldr	r2, [r7, #24]
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	683b      	ldr	r3, [r7, #0]
 8002f9e:	685b      	ldr	r3, [r3, #4]
 8002fa0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	f000 80b4 	beq.w	8003112 <HAL_GPIO_Init+0x2ee>
 8002faa:	2300      	movs	r3, #0
 8002fac:	60fb      	str	r3, [r7, #12]
 8002fae:	4b60      	ldr	r3, [pc, #384]	; (8003130 <HAL_GPIO_Init+0x30c>)
 8002fb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002fb2:	4a5f      	ldr	r2, [pc, #380]	; (8003130 <HAL_GPIO_Init+0x30c>)
 8002fb4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002fb8:	6453      	str	r3, [r2, #68]	; 0x44
 8002fba:	4b5d      	ldr	r3, [pc, #372]	; (8003130 <HAL_GPIO_Init+0x30c>)
 8002fbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002fbe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002fc2:	60fb      	str	r3, [r7, #12]
 8002fc4:	68fb      	ldr	r3, [r7, #12]
 8002fc6:	4a5b      	ldr	r2, [pc, #364]	; (8003134 <HAL_GPIO_Init+0x310>)
 8002fc8:	69fb      	ldr	r3, [r7, #28]
 8002fca:	089b      	lsrs	r3, r3, #2
 8002fcc:	3302      	adds	r3, #2
 8002fce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002fd2:	61bb      	str	r3, [r7, #24]
 8002fd4:	69fb      	ldr	r3, [r7, #28]
 8002fd6:	f003 0303 	and.w	r3, r3, #3
 8002fda:	009b      	lsls	r3, r3, #2
 8002fdc:	220f      	movs	r2, #15
 8002fde:	fa02 f303 	lsl.w	r3, r2, r3
 8002fe2:	43db      	mvns	r3, r3
 8002fe4:	69ba      	ldr	r2, [r7, #24]
 8002fe6:	4013      	ands	r3, r2
 8002fe8:	61bb      	str	r3, [r7, #24]
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	4a52      	ldr	r2, [pc, #328]	; (8003138 <HAL_GPIO_Init+0x314>)
 8002fee:	4293      	cmp	r3, r2
 8002ff0:	d02b      	beq.n	800304a <HAL_GPIO_Init+0x226>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	4a51      	ldr	r2, [pc, #324]	; (800313c <HAL_GPIO_Init+0x318>)
 8002ff6:	4293      	cmp	r3, r2
 8002ff8:	d025      	beq.n	8003046 <HAL_GPIO_Init+0x222>
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	4a50      	ldr	r2, [pc, #320]	; (8003140 <HAL_GPIO_Init+0x31c>)
 8002ffe:	4293      	cmp	r3, r2
 8003000:	d01f      	beq.n	8003042 <HAL_GPIO_Init+0x21e>
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	4a4f      	ldr	r2, [pc, #316]	; (8003144 <HAL_GPIO_Init+0x320>)
 8003006:	4293      	cmp	r3, r2
 8003008:	d019      	beq.n	800303e <HAL_GPIO_Init+0x21a>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	4a4e      	ldr	r2, [pc, #312]	; (8003148 <HAL_GPIO_Init+0x324>)
 800300e:	4293      	cmp	r3, r2
 8003010:	d013      	beq.n	800303a <HAL_GPIO_Init+0x216>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	4a4d      	ldr	r2, [pc, #308]	; (800314c <HAL_GPIO_Init+0x328>)
 8003016:	4293      	cmp	r3, r2
 8003018:	d00d      	beq.n	8003036 <HAL_GPIO_Init+0x212>
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	4a4c      	ldr	r2, [pc, #304]	; (8003150 <HAL_GPIO_Init+0x32c>)
 800301e:	4293      	cmp	r3, r2
 8003020:	d007      	beq.n	8003032 <HAL_GPIO_Init+0x20e>
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	4a4b      	ldr	r2, [pc, #300]	; (8003154 <HAL_GPIO_Init+0x330>)
 8003026:	4293      	cmp	r3, r2
 8003028:	d101      	bne.n	800302e <HAL_GPIO_Init+0x20a>
 800302a:	2307      	movs	r3, #7
 800302c:	e00e      	b.n	800304c <HAL_GPIO_Init+0x228>
 800302e:	2308      	movs	r3, #8
 8003030:	e00c      	b.n	800304c <HAL_GPIO_Init+0x228>
 8003032:	2306      	movs	r3, #6
 8003034:	e00a      	b.n	800304c <HAL_GPIO_Init+0x228>
 8003036:	2305      	movs	r3, #5
 8003038:	e008      	b.n	800304c <HAL_GPIO_Init+0x228>
 800303a:	2304      	movs	r3, #4
 800303c:	e006      	b.n	800304c <HAL_GPIO_Init+0x228>
 800303e:	2303      	movs	r3, #3
 8003040:	e004      	b.n	800304c <HAL_GPIO_Init+0x228>
 8003042:	2302      	movs	r3, #2
 8003044:	e002      	b.n	800304c <HAL_GPIO_Init+0x228>
 8003046:	2301      	movs	r3, #1
 8003048:	e000      	b.n	800304c <HAL_GPIO_Init+0x228>
 800304a:	2300      	movs	r3, #0
 800304c:	69fa      	ldr	r2, [r7, #28]
 800304e:	f002 0203 	and.w	r2, r2, #3
 8003052:	0092      	lsls	r2, r2, #2
 8003054:	4093      	lsls	r3, r2
 8003056:	69ba      	ldr	r2, [r7, #24]
 8003058:	4313      	orrs	r3, r2
 800305a:	61bb      	str	r3, [r7, #24]
 800305c:	4935      	ldr	r1, [pc, #212]	; (8003134 <HAL_GPIO_Init+0x310>)
 800305e:	69fb      	ldr	r3, [r7, #28]
 8003060:	089b      	lsrs	r3, r3, #2
 8003062:	3302      	adds	r3, #2
 8003064:	69ba      	ldr	r2, [r7, #24]
 8003066:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800306a:	4b3b      	ldr	r3, [pc, #236]	; (8003158 <HAL_GPIO_Init+0x334>)
 800306c:	689b      	ldr	r3, [r3, #8]
 800306e:	61bb      	str	r3, [r7, #24]
 8003070:	693b      	ldr	r3, [r7, #16]
 8003072:	43db      	mvns	r3, r3
 8003074:	69ba      	ldr	r2, [r7, #24]
 8003076:	4013      	ands	r3, r2
 8003078:	61bb      	str	r3, [r7, #24]
 800307a:	683b      	ldr	r3, [r7, #0]
 800307c:	685b      	ldr	r3, [r3, #4]
 800307e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003082:	2b00      	cmp	r3, #0
 8003084:	d003      	beq.n	800308e <HAL_GPIO_Init+0x26a>
 8003086:	69ba      	ldr	r2, [r7, #24]
 8003088:	693b      	ldr	r3, [r7, #16]
 800308a:	4313      	orrs	r3, r2
 800308c:	61bb      	str	r3, [r7, #24]
 800308e:	4a32      	ldr	r2, [pc, #200]	; (8003158 <HAL_GPIO_Init+0x334>)
 8003090:	69bb      	ldr	r3, [r7, #24]
 8003092:	6093      	str	r3, [r2, #8]
 8003094:	4b30      	ldr	r3, [pc, #192]	; (8003158 <HAL_GPIO_Init+0x334>)
 8003096:	68db      	ldr	r3, [r3, #12]
 8003098:	61bb      	str	r3, [r7, #24]
 800309a:	693b      	ldr	r3, [r7, #16]
 800309c:	43db      	mvns	r3, r3
 800309e:	69ba      	ldr	r2, [r7, #24]
 80030a0:	4013      	ands	r3, r2
 80030a2:	61bb      	str	r3, [r7, #24]
 80030a4:	683b      	ldr	r3, [r7, #0]
 80030a6:	685b      	ldr	r3, [r3, #4]
 80030a8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d003      	beq.n	80030b8 <HAL_GPIO_Init+0x294>
 80030b0:	69ba      	ldr	r2, [r7, #24]
 80030b2:	693b      	ldr	r3, [r7, #16]
 80030b4:	4313      	orrs	r3, r2
 80030b6:	61bb      	str	r3, [r7, #24]
 80030b8:	4a27      	ldr	r2, [pc, #156]	; (8003158 <HAL_GPIO_Init+0x334>)
 80030ba:	69bb      	ldr	r3, [r7, #24]
 80030bc:	60d3      	str	r3, [r2, #12]
 80030be:	4b26      	ldr	r3, [pc, #152]	; (8003158 <HAL_GPIO_Init+0x334>)
 80030c0:	685b      	ldr	r3, [r3, #4]
 80030c2:	61bb      	str	r3, [r7, #24]
 80030c4:	693b      	ldr	r3, [r7, #16]
 80030c6:	43db      	mvns	r3, r3
 80030c8:	69ba      	ldr	r2, [r7, #24]
 80030ca:	4013      	ands	r3, r2
 80030cc:	61bb      	str	r3, [r7, #24]
 80030ce:	683b      	ldr	r3, [r7, #0]
 80030d0:	685b      	ldr	r3, [r3, #4]
 80030d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	d003      	beq.n	80030e2 <HAL_GPIO_Init+0x2be>
 80030da:	69ba      	ldr	r2, [r7, #24]
 80030dc:	693b      	ldr	r3, [r7, #16]
 80030de:	4313      	orrs	r3, r2
 80030e0:	61bb      	str	r3, [r7, #24]
 80030e2:	4a1d      	ldr	r2, [pc, #116]	; (8003158 <HAL_GPIO_Init+0x334>)
 80030e4:	69bb      	ldr	r3, [r7, #24]
 80030e6:	6053      	str	r3, [r2, #4]
 80030e8:	4b1b      	ldr	r3, [pc, #108]	; (8003158 <HAL_GPIO_Init+0x334>)
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	61bb      	str	r3, [r7, #24]
 80030ee:	693b      	ldr	r3, [r7, #16]
 80030f0:	43db      	mvns	r3, r3
 80030f2:	69ba      	ldr	r2, [r7, #24]
 80030f4:	4013      	ands	r3, r2
 80030f6:	61bb      	str	r3, [r7, #24]
 80030f8:	683b      	ldr	r3, [r7, #0]
 80030fa:	685b      	ldr	r3, [r3, #4]
 80030fc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003100:	2b00      	cmp	r3, #0
 8003102:	d003      	beq.n	800310c <HAL_GPIO_Init+0x2e8>
 8003104:	69ba      	ldr	r2, [r7, #24]
 8003106:	693b      	ldr	r3, [r7, #16]
 8003108:	4313      	orrs	r3, r2
 800310a:	61bb      	str	r3, [r7, #24]
 800310c:	4a12      	ldr	r2, [pc, #72]	; (8003158 <HAL_GPIO_Init+0x334>)
 800310e:	69bb      	ldr	r3, [r7, #24]
 8003110:	6013      	str	r3, [r2, #0]
 8003112:	69fb      	ldr	r3, [r7, #28]
 8003114:	3301      	adds	r3, #1
 8003116:	61fb      	str	r3, [r7, #28]
 8003118:	69fb      	ldr	r3, [r7, #28]
 800311a:	2b0f      	cmp	r3, #15
 800311c:	f67f ae90 	bls.w	8002e40 <HAL_GPIO_Init+0x1c>
 8003120:	bf00      	nop
 8003122:	bf00      	nop
 8003124:	3724      	adds	r7, #36	; 0x24
 8003126:	46bd      	mov	sp, r7
 8003128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312c:	4770      	bx	lr
 800312e:	bf00      	nop
 8003130:	40023800 	.word	0x40023800
 8003134:	40013800 	.word	0x40013800
 8003138:	40020000 	.word	0x40020000
 800313c:	40020400 	.word	0x40020400
 8003140:	40020800 	.word	0x40020800
 8003144:	40020c00 	.word	0x40020c00
 8003148:	40021000 	.word	0x40021000
 800314c:	40021400 	.word	0x40021400
 8003150:	40021800 	.word	0x40021800
 8003154:	40021c00 	.word	0x40021c00
 8003158:	40013c00 	.word	0x40013c00

0800315c <HAL_I2C_Init>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b084      	sub	sp, #16
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	2b00      	cmp	r3, #0
 8003168:	d101      	bne.n	800316e <HAL_I2C_Init+0x12>
 800316a:	2301      	movs	r3, #1
 800316c:	e12b      	b.n	80033c6 <HAL_I2C_Init+0x26a>
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003174:	b2db      	uxtb	r3, r3
 8003176:	2b00      	cmp	r3, #0
 8003178:	d106      	bne.n	8003188 <HAL_I2C_Init+0x2c>
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	2200      	movs	r2, #0
 800317e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003182:	6878      	ldr	r0, [r7, #4]
 8003184:	f7ff fb12 	bl	80027ac <HAL_I2C_MspInit>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	2224      	movs	r2, #36	; 0x24
 800318c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	681a      	ldr	r2, [r3, #0]
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	f022 0201 	bic.w	r2, r2, #1
 800319e:	601a      	str	r2, [r3, #0]
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	681a      	ldr	r2, [r3, #0]
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80031ae:	601a      	str	r2, [r3, #0]
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	681a      	ldr	r2, [r3, #0]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80031be:	601a      	str	r2, [r3, #0]
 80031c0:	f001 fc60 	bl	8004a84 <HAL_RCC_GetPCLK1Freq>
 80031c4:	60f8      	str	r0, [r7, #12]
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	685b      	ldr	r3, [r3, #4]
 80031ca:	4a81      	ldr	r2, [pc, #516]	; (80033d0 <HAL_I2C_Init+0x274>)
 80031cc:	4293      	cmp	r3, r2
 80031ce:	d807      	bhi.n	80031e0 <HAL_I2C_Init+0x84>
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	4a80      	ldr	r2, [pc, #512]	; (80033d4 <HAL_I2C_Init+0x278>)
 80031d4:	4293      	cmp	r3, r2
 80031d6:	bf94      	ite	ls
 80031d8:	2301      	movls	r3, #1
 80031da:	2300      	movhi	r3, #0
 80031dc:	b2db      	uxtb	r3, r3
 80031de:	e006      	b.n	80031ee <HAL_I2C_Init+0x92>
 80031e0:	68fb      	ldr	r3, [r7, #12]
 80031e2:	4a7d      	ldr	r2, [pc, #500]	; (80033d8 <HAL_I2C_Init+0x27c>)
 80031e4:	4293      	cmp	r3, r2
 80031e6:	bf94      	ite	ls
 80031e8:	2301      	movls	r3, #1
 80031ea:	2300      	movhi	r3, #0
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d001      	beq.n	80031f6 <HAL_I2C_Init+0x9a>
 80031f2:	2301      	movs	r3, #1
 80031f4:	e0e7      	b.n	80033c6 <HAL_I2C_Init+0x26a>
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	4a78      	ldr	r2, [pc, #480]	; (80033dc <HAL_I2C_Init+0x280>)
 80031fa:	fba2 2303 	umull	r2, r3, r2, r3
 80031fe:	0c9b      	lsrs	r3, r3, #18
 8003200:	60bb      	str	r3, [r7, #8]
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	685b      	ldr	r3, [r3, #4]
 8003208:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	68ba      	ldr	r2, [r7, #8]
 8003212:	430a      	orrs	r2, r1
 8003214:	605a      	str	r2, [r3, #4]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	6a1b      	ldr	r3, [r3, #32]
 800321c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	685b      	ldr	r3, [r3, #4]
 8003224:	4a6a      	ldr	r2, [pc, #424]	; (80033d0 <HAL_I2C_Init+0x274>)
 8003226:	4293      	cmp	r3, r2
 8003228:	d802      	bhi.n	8003230 <HAL_I2C_Init+0xd4>
 800322a:	68bb      	ldr	r3, [r7, #8]
 800322c:	3301      	adds	r3, #1
 800322e:	e009      	b.n	8003244 <HAL_I2C_Init+0xe8>
 8003230:	68bb      	ldr	r3, [r7, #8]
 8003232:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003236:	fb02 f303 	mul.w	r3, r2, r3
 800323a:	4a69      	ldr	r2, [pc, #420]	; (80033e0 <HAL_I2C_Init+0x284>)
 800323c:	fba2 2303 	umull	r2, r3, r2, r3
 8003240:	099b      	lsrs	r3, r3, #6
 8003242:	3301      	adds	r3, #1
 8003244:	687a      	ldr	r2, [r7, #4]
 8003246:	6812      	ldr	r2, [r2, #0]
 8003248:	430b      	orrs	r3, r1
 800324a:	6213      	str	r3, [r2, #32]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	69db      	ldr	r3, [r3, #28]
 8003252:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003256:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	685b      	ldr	r3, [r3, #4]
 800325e:	495c      	ldr	r1, [pc, #368]	; (80033d0 <HAL_I2C_Init+0x274>)
 8003260:	428b      	cmp	r3, r1
 8003262:	d819      	bhi.n	8003298 <HAL_I2C_Init+0x13c>
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	1e59      	subs	r1, r3, #1
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	685b      	ldr	r3, [r3, #4]
 800326c:	005b      	lsls	r3, r3, #1
 800326e:	fbb1 f3f3 	udiv	r3, r1, r3
 8003272:	1c59      	adds	r1, r3, #1
 8003274:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003278:	400b      	ands	r3, r1
 800327a:	2b00      	cmp	r3, #0
 800327c:	d00a      	beq.n	8003294 <HAL_I2C_Init+0x138>
 800327e:	68fb      	ldr	r3, [r7, #12]
 8003280:	1e59      	subs	r1, r3, #1
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	685b      	ldr	r3, [r3, #4]
 8003286:	005b      	lsls	r3, r3, #1
 8003288:	fbb1 f3f3 	udiv	r3, r1, r3
 800328c:	3301      	adds	r3, #1
 800328e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003292:	e051      	b.n	8003338 <HAL_I2C_Init+0x1dc>
 8003294:	2304      	movs	r3, #4
 8003296:	e04f      	b.n	8003338 <HAL_I2C_Init+0x1dc>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	689b      	ldr	r3, [r3, #8]
 800329c:	2b00      	cmp	r3, #0
 800329e:	d111      	bne.n	80032c4 <HAL_I2C_Init+0x168>
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	1e58      	subs	r0, r3, #1
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	6859      	ldr	r1, [r3, #4]
 80032a8:	460b      	mov	r3, r1
 80032aa:	005b      	lsls	r3, r3, #1
 80032ac:	440b      	add	r3, r1
 80032ae:	fbb0 f3f3 	udiv	r3, r0, r3
 80032b2:	3301      	adds	r3, #1
 80032b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	bf0c      	ite	eq
 80032bc:	2301      	moveq	r3, #1
 80032be:	2300      	movne	r3, #0
 80032c0:	b2db      	uxtb	r3, r3
 80032c2:	e012      	b.n	80032ea <HAL_I2C_Init+0x18e>
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	1e58      	subs	r0, r3, #1
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	6859      	ldr	r1, [r3, #4]
 80032cc:	460b      	mov	r3, r1
 80032ce:	009b      	lsls	r3, r3, #2
 80032d0:	440b      	add	r3, r1
 80032d2:	0099      	lsls	r1, r3, #2
 80032d4:	440b      	add	r3, r1
 80032d6:	fbb0 f3f3 	udiv	r3, r0, r3
 80032da:	3301      	adds	r3, #1
 80032dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	bf0c      	ite	eq
 80032e4:	2301      	moveq	r3, #1
 80032e6:	2300      	movne	r3, #0
 80032e8:	b2db      	uxtb	r3, r3
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d001      	beq.n	80032f2 <HAL_I2C_Init+0x196>
 80032ee:	2301      	movs	r3, #1
 80032f0:	e022      	b.n	8003338 <HAL_I2C_Init+0x1dc>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	689b      	ldr	r3, [r3, #8]
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d10e      	bne.n	8003318 <HAL_I2C_Init+0x1bc>
 80032fa:	68fb      	ldr	r3, [r7, #12]
 80032fc:	1e58      	subs	r0, r3, #1
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	6859      	ldr	r1, [r3, #4]
 8003302:	460b      	mov	r3, r1
 8003304:	005b      	lsls	r3, r3, #1
 8003306:	440b      	add	r3, r1
 8003308:	fbb0 f3f3 	udiv	r3, r0, r3
 800330c:	3301      	adds	r3, #1
 800330e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003312:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003316:	e00f      	b.n	8003338 <HAL_I2C_Init+0x1dc>
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	1e58      	subs	r0, r3, #1
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	6859      	ldr	r1, [r3, #4]
 8003320:	460b      	mov	r3, r1
 8003322:	009b      	lsls	r3, r3, #2
 8003324:	440b      	add	r3, r1
 8003326:	0099      	lsls	r1, r3, #2
 8003328:	440b      	add	r3, r1
 800332a:	fbb0 f3f3 	udiv	r3, r0, r3
 800332e:	3301      	adds	r3, #1
 8003330:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003334:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003338:	6879      	ldr	r1, [r7, #4]
 800333a:	6809      	ldr	r1, [r1, #0]
 800333c:	4313      	orrs	r3, r2
 800333e:	61cb      	str	r3, [r1, #28]
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	69da      	ldr	r2, [r3, #28]
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6a1b      	ldr	r3, [r3, #32]
 8003352:	431a      	orrs	r2, r3
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	430a      	orrs	r2, r1
 800335a:	601a      	str	r2, [r3, #0]
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	689b      	ldr	r3, [r3, #8]
 8003362:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8003366:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800336a:	687a      	ldr	r2, [r7, #4]
 800336c:	6911      	ldr	r1, [r2, #16]
 800336e:	687a      	ldr	r2, [r7, #4]
 8003370:	68d2      	ldr	r2, [r2, #12]
 8003372:	4311      	orrs	r1, r2
 8003374:	687a      	ldr	r2, [r7, #4]
 8003376:	6812      	ldr	r2, [r2, #0]
 8003378:	430b      	orrs	r3, r1
 800337a:	6093      	str	r3, [r2, #8]
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	68db      	ldr	r3, [r3, #12]
 8003382:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	695a      	ldr	r2, [r3, #20]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	699b      	ldr	r3, [r3, #24]
 800338e:	431a      	orrs	r2, r3
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	430a      	orrs	r2, r1
 8003396:	60da      	str	r2, [r3, #12]
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	681a      	ldr	r2, [r3, #0]
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f042 0201 	orr.w	r2, r2, #1
 80033a6:	601a      	str	r2, [r3, #0]
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	2200      	movs	r2, #0
 80033ac:	641a      	str	r2, [r3, #64]	; 0x40
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	2220      	movs	r2, #32
 80033b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	2200      	movs	r2, #0
 80033ba:	631a      	str	r2, [r3, #48]	; 0x30
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	2200      	movs	r2, #0
 80033c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80033c4:	2300      	movs	r3, #0
 80033c6:	4618      	mov	r0, r3
 80033c8:	3710      	adds	r7, #16
 80033ca:	46bd      	mov	sp, r7
 80033cc:	bd80      	pop	{r7, pc}
 80033ce:	bf00      	nop
 80033d0:	000186a0 	.word	0x000186a0
 80033d4:	001e847f 	.word	0x001e847f
 80033d8:	003d08ff 	.word	0x003d08ff
 80033dc:	431bde83 	.word	0x431bde83
 80033e0:	10624dd3 	.word	0x10624dd3

080033e4 <HAL_I2C_Mem_Write>:
 80033e4:	b580      	push	{r7, lr}
 80033e6:	b088      	sub	sp, #32
 80033e8:	af02      	add	r7, sp, #8
 80033ea:	60f8      	str	r0, [r7, #12]
 80033ec:	4608      	mov	r0, r1
 80033ee:	4611      	mov	r1, r2
 80033f0:	461a      	mov	r2, r3
 80033f2:	4603      	mov	r3, r0
 80033f4:	817b      	strh	r3, [r7, #10]
 80033f6:	460b      	mov	r3, r1
 80033f8:	813b      	strh	r3, [r7, #8]
 80033fa:	4613      	mov	r3, r2
 80033fc:	80fb      	strh	r3, [r7, #6]
 80033fe:	f7ff fc23 	bl	8002c48 <HAL_GetTick>
 8003402:	6178      	str	r0, [r7, #20]
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800340a:	b2db      	uxtb	r3, r3
 800340c:	2b20      	cmp	r3, #32
 800340e:	f040 80d9 	bne.w	80035c4 <HAL_I2C_Mem_Write+0x1e0>
 8003412:	697b      	ldr	r3, [r7, #20]
 8003414:	9300      	str	r3, [sp, #0]
 8003416:	2319      	movs	r3, #25
 8003418:	2201      	movs	r2, #1
 800341a:	496d      	ldr	r1, [pc, #436]	; (80035d0 <HAL_I2C_Mem_Write+0x1ec>)
 800341c:	68f8      	ldr	r0, [r7, #12]
 800341e:	f000 fc8b 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 8003422:	4603      	mov	r3, r0
 8003424:	2b00      	cmp	r3, #0
 8003426:	d001      	beq.n	800342c <HAL_I2C_Mem_Write+0x48>
 8003428:	2302      	movs	r3, #2
 800342a:	e0cc      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003432:	2b01      	cmp	r3, #1
 8003434:	d101      	bne.n	800343a <HAL_I2C_Mem_Write+0x56>
 8003436:	2302      	movs	r3, #2
 8003438:	e0c5      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	2201      	movs	r2, #1
 800343e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f003 0301 	and.w	r3, r3, #1
 800344c:	2b01      	cmp	r3, #1
 800344e:	d007      	beq.n	8003460 <HAL_I2C_Mem_Write+0x7c>
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	681a      	ldr	r2, [r3, #0]
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f042 0201 	orr.w	r2, r2, #1
 800345e:	601a      	str	r2, [r3, #0]
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	681a      	ldr	r2, [r3, #0]
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800346e:	601a      	str	r2, [r3, #0]
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	2221      	movs	r2, #33	; 0x21
 8003474:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	2240      	movs	r2, #64	; 0x40
 800347c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003480:	68fb      	ldr	r3, [r7, #12]
 8003482:	2200      	movs	r2, #0
 8003484:	641a      	str	r2, [r3, #64]	; 0x40
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	6a3a      	ldr	r2, [r7, #32]
 800348a:	625a      	str	r2, [r3, #36]	; 0x24
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003490:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003496:	b29a      	uxth	r2, r3
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	851a      	strh	r2, [r3, #40]	; 0x28
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	4a4d      	ldr	r2, [pc, #308]	; (80035d4 <HAL_I2C_Mem_Write+0x1f0>)
 80034a0:	62da      	str	r2, [r3, #44]	; 0x2c
 80034a2:	88f8      	ldrh	r0, [r7, #6]
 80034a4:	893a      	ldrh	r2, [r7, #8]
 80034a6:	8979      	ldrh	r1, [r7, #10]
 80034a8:	697b      	ldr	r3, [r7, #20]
 80034aa:	9301      	str	r3, [sp, #4]
 80034ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80034ae:	9300      	str	r3, [sp, #0]
 80034b0:	4603      	mov	r3, r0
 80034b2:	68f8      	ldr	r0, [r7, #12]
 80034b4:	f000 fac2 	bl	8003a3c <I2C_RequestMemoryWrite>
 80034b8:	4603      	mov	r3, r0
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d052      	beq.n	8003564 <HAL_I2C_Mem_Write+0x180>
 80034be:	2301      	movs	r3, #1
 80034c0:	e081      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 80034c2:	697a      	ldr	r2, [r7, #20]
 80034c4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80034c6:	68f8      	ldr	r0, [r7, #12]
 80034c8:	f000 fd50 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 80034cc:	4603      	mov	r3, r0
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	d00d      	beq.n	80034ee <HAL_I2C_Mem_Write+0x10a>
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034d6:	2b04      	cmp	r3, #4
 80034d8:	d107      	bne.n	80034ea <HAL_I2C_Mem_Write+0x106>
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	681a      	ldr	r2, [r3, #0]
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80034e8:	601a      	str	r2, [r3, #0]
 80034ea:	2301      	movs	r3, #1
 80034ec:	e06b      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 80034ee:	68fb      	ldr	r3, [r7, #12]
 80034f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034f2:	781a      	ldrb	r2, [r3, #0]
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	611a      	str	r2, [r3, #16]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034fe:	1c5a      	adds	r2, r3, #1
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	625a      	str	r2, [r3, #36]	; 0x24
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003508:	3b01      	subs	r3, #1
 800350a:	b29a      	uxth	r2, r3
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003510:	68fb      	ldr	r3, [r7, #12]
 8003512:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003514:	b29b      	uxth	r3, r3
 8003516:	3b01      	subs	r3, #1
 8003518:	b29a      	uxth	r2, r3
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	695b      	ldr	r3, [r3, #20]
 8003524:	f003 0304 	and.w	r3, r3, #4
 8003528:	2b04      	cmp	r3, #4
 800352a:	d11b      	bne.n	8003564 <HAL_I2C_Mem_Write+0x180>
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003530:	2b00      	cmp	r3, #0
 8003532:	d017      	beq.n	8003564 <HAL_I2C_Mem_Write+0x180>
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003538:	781a      	ldrb	r2, [r3, #0]
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	611a      	str	r2, [r3, #16]
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003544:	1c5a      	adds	r2, r3, #1
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	625a      	str	r2, [r3, #36]	; 0x24
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800354e:	3b01      	subs	r3, #1
 8003550:	b29a      	uxth	r2, r3
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	851a      	strh	r2, [r3, #40]	; 0x28
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800355a:	b29b      	uxth	r3, r3
 800355c:	3b01      	subs	r3, #1
 800355e:	b29a      	uxth	r2, r3
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003568:	2b00      	cmp	r3, #0
 800356a:	d1aa      	bne.n	80034c2 <HAL_I2C_Mem_Write+0xde>
 800356c:	697a      	ldr	r2, [r7, #20]
 800356e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003570:	68f8      	ldr	r0, [r7, #12]
 8003572:	f000 fd43 	bl	8003ffc <I2C_WaitOnBTFFlagUntilTimeout>
 8003576:	4603      	mov	r3, r0
 8003578:	2b00      	cmp	r3, #0
 800357a:	d00d      	beq.n	8003598 <HAL_I2C_Mem_Write+0x1b4>
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003580:	2b04      	cmp	r3, #4
 8003582:	d107      	bne.n	8003594 <HAL_I2C_Mem_Write+0x1b0>
 8003584:	68fb      	ldr	r3, [r7, #12]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	681a      	ldr	r2, [r3, #0]
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003592:	601a      	str	r2, [r3, #0]
 8003594:	2301      	movs	r3, #1
 8003596:	e016      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	681a      	ldr	r2, [r3, #0]
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80035a6:	601a      	str	r2, [r3, #0]
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	2220      	movs	r2, #32
 80035ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035b0:	68fb      	ldr	r3, [r7, #12]
 80035b2:	2200      	movs	r2, #0
 80035b4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	2200      	movs	r2, #0
 80035bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035c0:	2300      	movs	r3, #0
 80035c2:	e000      	b.n	80035c6 <HAL_I2C_Mem_Write+0x1e2>
 80035c4:	2302      	movs	r3, #2
 80035c6:	4618      	mov	r0, r3
 80035c8:	3718      	adds	r7, #24
 80035ca:	46bd      	mov	sp, r7
 80035cc:	bd80      	pop	{r7, pc}
 80035ce:	bf00      	nop
 80035d0:	00100002 	.word	0x00100002
 80035d4:	ffff0000 	.word	0xffff0000

080035d8 <HAL_I2C_Mem_Read>:
 80035d8:	b580      	push	{r7, lr}
 80035da:	b08c      	sub	sp, #48	; 0x30
 80035dc:	af02      	add	r7, sp, #8
 80035de:	60f8      	str	r0, [r7, #12]
 80035e0:	4608      	mov	r0, r1
 80035e2:	4611      	mov	r1, r2
 80035e4:	461a      	mov	r2, r3
 80035e6:	4603      	mov	r3, r0
 80035e8:	817b      	strh	r3, [r7, #10]
 80035ea:	460b      	mov	r3, r1
 80035ec:	813b      	strh	r3, [r7, #8]
 80035ee:	4613      	mov	r3, r2
 80035f0:	80fb      	strh	r3, [r7, #6]
 80035f2:	f7ff fb29 	bl	8002c48 <HAL_GetTick>
 80035f6:	6278      	str	r0, [r7, #36]	; 0x24
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035fe:	b2db      	uxtb	r3, r3
 8003600:	2b20      	cmp	r3, #32
 8003602:	f040 8214 	bne.w	8003a2e <HAL_I2C_Mem_Read+0x456>
 8003606:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003608:	9300      	str	r3, [sp, #0]
 800360a:	2319      	movs	r3, #25
 800360c:	2201      	movs	r2, #1
 800360e:	497b      	ldr	r1, [pc, #492]	; (80037fc <HAL_I2C_Mem_Read+0x224>)
 8003610:	68f8      	ldr	r0, [r7, #12]
 8003612:	f000 fb91 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 8003616:	4603      	mov	r3, r0
 8003618:	2b00      	cmp	r3, #0
 800361a:	d001      	beq.n	8003620 <HAL_I2C_Mem_Read+0x48>
 800361c:	2302      	movs	r3, #2
 800361e:	e207      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003626:	2b01      	cmp	r3, #1
 8003628:	d101      	bne.n	800362e <HAL_I2C_Mem_Read+0x56>
 800362a:	2302      	movs	r3, #2
 800362c:	e200      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	2201      	movs	r2, #1
 8003632:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	f003 0301 	and.w	r3, r3, #1
 8003640:	2b01      	cmp	r3, #1
 8003642:	d007      	beq.n	8003654 <HAL_I2C_Mem_Read+0x7c>
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	681a      	ldr	r2, [r3, #0]
 800364a:	68fb      	ldr	r3, [r7, #12]
 800364c:	681b      	ldr	r3, [r3, #0]
 800364e:	f042 0201 	orr.w	r2, r2, #1
 8003652:	601a      	str	r2, [r3, #0]
 8003654:	68fb      	ldr	r3, [r7, #12]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003662:	601a      	str	r2, [r3, #0]
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	2222      	movs	r2, #34	; 0x22
 8003668:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800366c:	68fb      	ldr	r3, [r7, #12]
 800366e:	2240      	movs	r2, #64	; 0x40
 8003670:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	2200      	movs	r2, #0
 8003678:	641a      	str	r2, [r3, #64]	; 0x40
 800367a:	68fb      	ldr	r3, [r7, #12]
 800367c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800367e:	625a      	str	r2, [r3, #36]	; 0x24
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8003684:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800368a:	b29a      	uxth	r2, r3
 800368c:	68fb      	ldr	r3, [r7, #12]
 800368e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	4a5b      	ldr	r2, [pc, #364]	; (8003800 <HAL_I2C_Mem_Read+0x228>)
 8003694:	62da      	str	r2, [r3, #44]	; 0x2c
 8003696:	88f8      	ldrh	r0, [r7, #6]
 8003698:	893a      	ldrh	r2, [r7, #8]
 800369a:	8979      	ldrh	r1, [r7, #10]
 800369c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800369e:	9301      	str	r3, [sp, #4]
 80036a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80036a2:	9300      	str	r3, [sp, #0]
 80036a4:	4603      	mov	r3, r0
 80036a6:	68f8      	ldr	r0, [r7, #12]
 80036a8:	f000 fa5e 	bl	8003b68 <I2C_RequestMemoryRead>
 80036ac:	4603      	mov	r3, r0
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d001      	beq.n	80036b6 <HAL_I2C_Mem_Read+0xde>
 80036b2:	2301      	movs	r3, #1
 80036b4:	e1bc      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d113      	bne.n	80036e6 <HAL_I2C_Mem_Read+0x10e>
 80036be:	2300      	movs	r3, #0
 80036c0:	623b      	str	r3, [r7, #32]
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	695b      	ldr	r3, [r3, #20]
 80036c8:	623b      	str	r3, [r7, #32]
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	699b      	ldr	r3, [r3, #24]
 80036d0:	623b      	str	r3, [r7, #32]
 80036d2:	6a3b      	ldr	r3, [r7, #32]
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	681a      	ldr	r2, [r3, #0]
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80036e2:	601a      	str	r2, [r3, #0]
 80036e4:	e190      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80036ea:	2b01      	cmp	r3, #1
 80036ec:	d11b      	bne.n	8003726 <HAL_I2C_Mem_Read+0x14e>
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	681a      	ldr	r2, [r3, #0]
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80036fc:	601a      	str	r2, [r3, #0]
 80036fe:	2300      	movs	r3, #0
 8003700:	61fb      	str	r3, [r7, #28]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	695b      	ldr	r3, [r3, #20]
 8003708:	61fb      	str	r3, [r7, #28]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	699b      	ldr	r3, [r3, #24]
 8003710:	61fb      	str	r3, [r7, #28]
 8003712:	69fb      	ldr	r3, [r7, #28]
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	681a      	ldr	r2, [r3, #0]
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003722:	601a      	str	r2, [r3, #0]
 8003724:	e170      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800372a:	2b02      	cmp	r3, #2
 800372c:	d11b      	bne.n	8003766 <HAL_I2C_Mem_Read+0x18e>
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	681a      	ldr	r2, [r3, #0]
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800373c:	601a      	str	r2, [r3, #0]
 800373e:	68fb      	ldr	r3, [r7, #12]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	681a      	ldr	r2, [r3, #0]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800374c:	601a      	str	r2, [r3, #0]
 800374e:	2300      	movs	r3, #0
 8003750:	61bb      	str	r3, [r7, #24]
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	695b      	ldr	r3, [r3, #20]
 8003758:	61bb      	str	r3, [r7, #24]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	699b      	ldr	r3, [r3, #24]
 8003760:	61bb      	str	r3, [r7, #24]
 8003762:	69bb      	ldr	r3, [r7, #24]
 8003764:	e150      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 8003766:	2300      	movs	r3, #0
 8003768:	617b      	str	r3, [r7, #20]
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	695b      	ldr	r3, [r3, #20]
 8003770:	617b      	str	r3, [r7, #20]
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	699b      	ldr	r3, [r3, #24]
 8003778:	617b      	str	r3, [r7, #20]
 800377a:	697b      	ldr	r3, [r7, #20]
 800377c:	e144      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003782:	2b03      	cmp	r3, #3
 8003784:	f200 80f1 	bhi.w	800396a <HAL_I2C_Mem_Read+0x392>
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800378c:	2b01      	cmp	r3, #1
 800378e:	d123      	bne.n	80037d8 <HAL_I2C_Mem_Read+0x200>
 8003790:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003792:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003794:	68f8      	ldr	r0, [r7, #12]
 8003796:	f000 fc79 	bl	800408c <I2C_WaitOnRXNEFlagUntilTimeout>
 800379a:	4603      	mov	r3, r0
 800379c:	2b00      	cmp	r3, #0
 800379e:	d001      	beq.n	80037a4 <HAL_I2C_Mem_Read+0x1cc>
 80037a0:	2301      	movs	r3, #1
 80037a2:	e145      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	691a      	ldr	r2, [r3, #16]
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037ae:	b2d2      	uxtb	r2, r2
 80037b0:	701a      	strb	r2, [r3, #0]
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037b6:	1c5a      	adds	r2, r3, #1
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	625a      	str	r2, [r3, #36]	; 0x24
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037c0:	3b01      	subs	r3, #1
 80037c2:	b29a      	uxth	r2, r3
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	851a      	strh	r2, [r3, #40]	; 0x28
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037cc:	b29b      	uxth	r3, r3
 80037ce:	3b01      	subs	r3, #1
 80037d0:	b29a      	uxth	r2, r3
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80037d6:	e117      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037dc:	2b02      	cmp	r3, #2
 80037de:	d14e      	bne.n	800387e <HAL_I2C_Mem_Read+0x2a6>
 80037e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037e2:	9300      	str	r3, [sp, #0]
 80037e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80037e6:	2200      	movs	r2, #0
 80037e8:	4906      	ldr	r1, [pc, #24]	; (8003804 <HAL_I2C_Mem_Read+0x22c>)
 80037ea:	68f8      	ldr	r0, [r7, #12]
 80037ec:	f000 faa4 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 80037f0:	4603      	mov	r3, r0
 80037f2:	2b00      	cmp	r3, #0
 80037f4:	d008      	beq.n	8003808 <HAL_I2C_Mem_Read+0x230>
 80037f6:	2301      	movs	r3, #1
 80037f8:	e11a      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 80037fa:	bf00      	nop
 80037fc:	00100002 	.word	0x00100002
 8003800:	ffff0000 	.word	0xffff0000
 8003804:	00010004 	.word	0x00010004
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	681a      	ldr	r2, [r3, #0]
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003816:	601a      	str	r2, [r3, #0]
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	691a      	ldr	r2, [r3, #16]
 800381e:	68fb      	ldr	r3, [r7, #12]
 8003820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003822:	b2d2      	uxtb	r2, r2
 8003824:	701a      	strb	r2, [r3, #0]
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800382a:	1c5a      	adds	r2, r3, #1
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	625a      	str	r2, [r3, #36]	; 0x24
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003834:	3b01      	subs	r3, #1
 8003836:	b29a      	uxth	r2, r3
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	851a      	strh	r2, [r3, #40]	; 0x28
 800383c:	68fb      	ldr	r3, [r7, #12]
 800383e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003840:	b29b      	uxth	r3, r3
 8003842:	3b01      	subs	r3, #1
 8003844:	b29a      	uxth	r2, r3
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	855a      	strh	r2, [r3, #42]	; 0x2a
 800384a:	68fb      	ldr	r3, [r7, #12]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	691a      	ldr	r2, [r3, #16]
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003854:	b2d2      	uxtb	r2, r2
 8003856:	701a      	strb	r2, [r3, #0]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800385c:	1c5a      	adds	r2, r3, #1
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	625a      	str	r2, [r3, #36]	; 0x24
 8003862:	68fb      	ldr	r3, [r7, #12]
 8003864:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003866:	3b01      	subs	r3, #1
 8003868:	b29a      	uxth	r2, r3
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	851a      	strh	r2, [r3, #40]	; 0x28
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003872:	b29b      	uxth	r3, r3
 8003874:	3b01      	subs	r3, #1
 8003876:	b29a      	uxth	r2, r3
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800387c:	e0c4      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 800387e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003880:	9300      	str	r3, [sp, #0]
 8003882:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003884:	2200      	movs	r2, #0
 8003886:	496c      	ldr	r1, [pc, #432]	; (8003a38 <HAL_I2C_Mem_Read+0x460>)
 8003888:	68f8      	ldr	r0, [r7, #12]
 800388a:	f000 fa55 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 800388e:	4603      	mov	r3, r0
 8003890:	2b00      	cmp	r3, #0
 8003892:	d001      	beq.n	8003898 <HAL_I2C_Mem_Read+0x2c0>
 8003894:	2301      	movs	r3, #1
 8003896:	e0cb      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	681a      	ldr	r2, [r3, #0]
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80038a6:	601a      	str	r2, [r3, #0]
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	691a      	ldr	r2, [r3, #16]
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b2:	b2d2      	uxtb	r2, r2
 80038b4:	701a      	strb	r2, [r3, #0]
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038ba:	1c5a      	adds	r2, r3, #1
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	625a      	str	r2, [r3, #36]	; 0x24
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80038c4:	3b01      	subs	r3, #1
 80038c6:	b29a      	uxth	r2, r3
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	851a      	strh	r2, [r3, #40]	; 0x28
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80038d0:	b29b      	uxth	r3, r3
 80038d2:	3b01      	subs	r3, #1
 80038d4:	b29a      	uxth	r2, r3
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80038da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038dc:	9300      	str	r3, [sp, #0]
 80038de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038e0:	2200      	movs	r2, #0
 80038e2:	4955      	ldr	r1, [pc, #340]	; (8003a38 <HAL_I2C_Mem_Read+0x460>)
 80038e4:	68f8      	ldr	r0, [r7, #12]
 80038e6:	f000 fa27 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 80038ea:	4603      	mov	r3, r0
 80038ec:	2b00      	cmp	r3, #0
 80038ee:	d001      	beq.n	80038f4 <HAL_I2C_Mem_Read+0x31c>
 80038f0:	2301      	movs	r3, #1
 80038f2:	e09d      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	681a      	ldr	r2, [r3, #0]
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003902:	601a      	str	r2, [r3, #0]
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	691a      	ldr	r2, [r3, #16]
 800390a:	68fb      	ldr	r3, [r7, #12]
 800390c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800390e:	b2d2      	uxtb	r2, r2
 8003910:	701a      	strb	r2, [r3, #0]
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003916:	1c5a      	adds	r2, r3, #1
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	625a      	str	r2, [r3, #36]	; 0x24
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003920:	3b01      	subs	r3, #1
 8003922:	b29a      	uxth	r2, r3
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	851a      	strh	r2, [r3, #40]	; 0x28
 8003928:	68fb      	ldr	r3, [r7, #12]
 800392a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800392c:	b29b      	uxth	r3, r3
 800392e:	3b01      	subs	r3, #1
 8003930:	b29a      	uxth	r2, r3
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	691a      	ldr	r2, [r3, #16]
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003940:	b2d2      	uxtb	r2, r2
 8003942:	701a      	strb	r2, [r3, #0]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003948:	1c5a      	adds	r2, r3, #1
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	625a      	str	r2, [r3, #36]	; 0x24
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003952:	3b01      	subs	r3, #1
 8003954:	b29a      	uxth	r2, r3
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	851a      	strh	r2, [r3, #40]	; 0x28
 800395a:	68fb      	ldr	r3, [r7, #12]
 800395c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800395e:	b29b      	uxth	r3, r3
 8003960:	3b01      	subs	r3, #1
 8003962:	b29a      	uxth	r2, r3
 8003964:	68fb      	ldr	r3, [r7, #12]
 8003966:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003968:	e04e      	b.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 800396a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800396c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800396e:	68f8      	ldr	r0, [r7, #12]
 8003970:	f000 fb8c 	bl	800408c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003974:	4603      	mov	r3, r0
 8003976:	2b00      	cmp	r3, #0
 8003978:	d001      	beq.n	800397e <HAL_I2C_Mem_Read+0x3a6>
 800397a:	2301      	movs	r3, #1
 800397c:	e058      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 800397e:	68fb      	ldr	r3, [r7, #12]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	691a      	ldr	r2, [r3, #16]
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003988:	b2d2      	uxtb	r2, r2
 800398a:	701a      	strb	r2, [r3, #0]
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003990:	1c5a      	adds	r2, r3, #1
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	625a      	str	r2, [r3, #36]	; 0x24
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800399a:	3b01      	subs	r3, #1
 800399c:	b29a      	uxth	r2, r3
 800399e:	68fb      	ldr	r3, [r7, #12]
 80039a0:	851a      	strh	r2, [r3, #40]	; 0x28
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80039a6:	b29b      	uxth	r3, r3
 80039a8:	3b01      	subs	r3, #1
 80039aa:	b29a      	uxth	r2, r3
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	855a      	strh	r2, [r3, #42]	; 0x2a
 80039b0:	68fb      	ldr	r3, [r7, #12]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	695b      	ldr	r3, [r3, #20]
 80039b6:	f003 0304 	and.w	r3, r3, #4
 80039ba:	2b04      	cmp	r3, #4
 80039bc:	d124      	bne.n	8003a08 <HAL_I2C_Mem_Read+0x430>
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80039c2:	2b03      	cmp	r3, #3
 80039c4:	d107      	bne.n	80039d6 <HAL_I2C_Mem_Read+0x3fe>
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	681a      	ldr	r2, [r3, #0]
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	691a      	ldr	r2, [r3, #16]
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039e0:	b2d2      	uxtb	r2, r2
 80039e2:	701a      	strb	r2, [r3, #0]
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039e8:	1c5a      	adds	r2, r3, #1
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	625a      	str	r2, [r3, #36]	; 0x24
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80039f2:	3b01      	subs	r3, #1
 80039f4:	b29a      	uxth	r2, r3
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	851a      	strh	r2, [r3, #40]	; 0x28
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80039fe:	b29b      	uxth	r3, r3
 8003a00:	3b01      	subs	r3, #1
 8003a02:	b29a      	uxth	r2, r3
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a0c:	2b00      	cmp	r3, #0
 8003a0e:	f47f aeb6 	bne.w	800377e <HAL_I2C_Mem_Read+0x1a6>
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	2220      	movs	r2, #32
 8003a16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	2200      	movs	r2, #0
 8003a1e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	2200      	movs	r2, #0
 8003a26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a2a:	2300      	movs	r3, #0
 8003a2c:	e000      	b.n	8003a30 <HAL_I2C_Mem_Read+0x458>
 8003a2e:	2302      	movs	r3, #2
 8003a30:	4618      	mov	r0, r3
 8003a32:	3728      	adds	r7, #40	; 0x28
 8003a34:	46bd      	mov	sp, r7
 8003a36:	bd80      	pop	{r7, pc}
 8003a38:	00010004 	.word	0x00010004

08003a3c <I2C_RequestMemoryWrite>:
 8003a3c:	b580      	push	{r7, lr}
 8003a3e:	b088      	sub	sp, #32
 8003a40:	af02      	add	r7, sp, #8
 8003a42:	60f8      	str	r0, [r7, #12]
 8003a44:	4608      	mov	r0, r1
 8003a46:	4611      	mov	r1, r2
 8003a48:	461a      	mov	r2, r3
 8003a4a:	4603      	mov	r3, r0
 8003a4c:	817b      	strh	r3, [r7, #10]
 8003a4e:	460b      	mov	r3, r1
 8003a50:	813b      	strh	r3, [r7, #8]
 8003a52:	4613      	mov	r3, r2
 8003a54:	80fb      	strh	r3, [r7, #6]
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	681a      	ldr	r2, [r3, #0]
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003a64:	601a      	str	r2, [r3, #0]
 8003a66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a68:	9300      	str	r3, [sp, #0]
 8003a6a:	6a3b      	ldr	r3, [r7, #32]
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003a72:	68f8      	ldr	r0, [r7, #12]
 8003a74:	f000 f960 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 8003a78:	4603      	mov	r3, r0
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d00d      	beq.n	8003a9a <I2C_RequestMemoryWrite+0x5e>
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003a88:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003a8c:	d103      	bne.n	8003a96 <I2C_RequestMemoryWrite+0x5a>
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003a94:	641a      	str	r2, [r3, #64]	; 0x40
 8003a96:	2303      	movs	r3, #3
 8003a98:	e05f      	b.n	8003b5a <I2C_RequestMemoryWrite+0x11e>
 8003a9a:	897b      	ldrh	r3, [r7, #10]
 8003a9c:	b2db      	uxtb	r3, r3
 8003a9e:	461a      	mov	r2, r3
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003aa8:	611a      	str	r2, [r3, #16]
 8003aaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aac:	6a3a      	ldr	r2, [r7, #32]
 8003aae:	492d      	ldr	r1, [pc, #180]	; (8003b64 <I2C_RequestMemoryWrite+0x128>)
 8003ab0:	68f8      	ldr	r0, [r7, #12]
 8003ab2:	f000 f9bb 	bl	8003e2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003ab6:	4603      	mov	r3, r0
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d001      	beq.n	8003ac0 <I2C_RequestMemoryWrite+0x84>
 8003abc:	2301      	movs	r3, #1
 8003abe:	e04c      	b.n	8003b5a <I2C_RequestMemoryWrite+0x11e>
 8003ac0:	2300      	movs	r3, #0
 8003ac2:	617b      	str	r3, [r7, #20]
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	695b      	ldr	r3, [r3, #20]
 8003aca:	617b      	str	r3, [r7, #20]
 8003acc:	68fb      	ldr	r3, [r7, #12]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	699b      	ldr	r3, [r3, #24]
 8003ad2:	617b      	str	r3, [r7, #20]
 8003ad4:	697b      	ldr	r3, [r7, #20]
 8003ad6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ad8:	6a39      	ldr	r1, [r7, #32]
 8003ada:	68f8      	ldr	r0, [r7, #12]
 8003adc:	f000 fa46 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003ae0:	4603      	mov	r3, r0
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d00d      	beq.n	8003b02 <I2C_RequestMemoryWrite+0xc6>
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aea:	2b04      	cmp	r3, #4
 8003aec:	d107      	bne.n	8003afe <I2C_RequestMemoryWrite+0xc2>
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	681a      	ldr	r2, [r3, #0]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003afc:	601a      	str	r2, [r3, #0]
 8003afe:	2301      	movs	r3, #1
 8003b00:	e02b      	b.n	8003b5a <I2C_RequestMemoryWrite+0x11e>
 8003b02:	88fb      	ldrh	r3, [r7, #6]
 8003b04:	2b01      	cmp	r3, #1
 8003b06:	d105      	bne.n	8003b14 <I2C_RequestMemoryWrite+0xd8>
 8003b08:	893b      	ldrh	r3, [r7, #8]
 8003b0a:	b2da      	uxtb	r2, r3
 8003b0c:	68fb      	ldr	r3, [r7, #12]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	611a      	str	r2, [r3, #16]
 8003b12:	e021      	b.n	8003b58 <I2C_RequestMemoryWrite+0x11c>
 8003b14:	893b      	ldrh	r3, [r7, #8]
 8003b16:	0a1b      	lsrs	r3, r3, #8
 8003b18:	b29b      	uxth	r3, r3
 8003b1a:	b2da      	uxtb	r2, r3
 8003b1c:	68fb      	ldr	r3, [r7, #12]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	611a      	str	r2, [r3, #16]
 8003b22:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003b24:	6a39      	ldr	r1, [r7, #32]
 8003b26:	68f8      	ldr	r0, [r7, #12]
 8003b28:	f000 fa20 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	2b00      	cmp	r3, #0
 8003b30:	d00d      	beq.n	8003b4e <I2C_RequestMemoryWrite+0x112>
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b36:	2b04      	cmp	r3, #4
 8003b38:	d107      	bne.n	8003b4a <I2C_RequestMemoryWrite+0x10e>
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	681a      	ldr	r2, [r3, #0]
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003b48:	601a      	str	r2, [r3, #0]
 8003b4a:	2301      	movs	r3, #1
 8003b4c:	e005      	b.n	8003b5a <I2C_RequestMemoryWrite+0x11e>
 8003b4e:	893b      	ldrh	r3, [r7, #8]
 8003b50:	b2da      	uxtb	r2, r3
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	611a      	str	r2, [r3, #16]
 8003b58:	2300      	movs	r3, #0
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3718      	adds	r7, #24
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}
 8003b62:	bf00      	nop
 8003b64:	00010002 	.word	0x00010002

08003b68 <I2C_RequestMemoryRead>:
 8003b68:	b580      	push	{r7, lr}
 8003b6a:	b088      	sub	sp, #32
 8003b6c:	af02      	add	r7, sp, #8
 8003b6e:	60f8      	str	r0, [r7, #12]
 8003b70:	4608      	mov	r0, r1
 8003b72:	4611      	mov	r1, r2
 8003b74:	461a      	mov	r2, r3
 8003b76:	4603      	mov	r3, r0
 8003b78:	817b      	strh	r3, [r7, #10]
 8003b7a:	460b      	mov	r3, r1
 8003b7c:	813b      	strh	r3, [r7, #8]
 8003b7e:	4613      	mov	r3, r2
 8003b80:	80fb      	strh	r3, [r7, #6]
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	681a      	ldr	r2, [r3, #0]
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003b90:	601a      	str	r2, [r3, #0]
 8003b92:	68fb      	ldr	r3, [r7, #12]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	681a      	ldr	r2, [r3, #0]
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003ba0:	601a      	str	r2, [r3, #0]
 8003ba2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ba4:	9300      	str	r3, [sp, #0]
 8003ba6:	6a3b      	ldr	r3, [r7, #32]
 8003ba8:	2200      	movs	r2, #0
 8003baa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003bae:	68f8      	ldr	r0, [r7, #12]
 8003bb0:	f000 f8c2 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 8003bb4:	4603      	mov	r3, r0
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d00d      	beq.n	8003bd6 <I2C_RequestMemoryRead+0x6e>
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003bc4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003bc8:	d103      	bne.n	8003bd2 <I2C_RequestMemoryRead+0x6a>
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003bd0:	641a      	str	r2, [r3, #64]	; 0x40
 8003bd2:	2303      	movs	r3, #3
 8003bd4:	e0aa      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003bd6:	897b      	ldrh	r3, [r7, #10]
 8003bd8:	b2db      	uxtb	r3, r3
 8003bda:	461a      	mov	r2, r3
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003be4:	611a      	str	r2, [r3, #16]
 8003be6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003be8:	6a3a      	ldr	r2, [r7, #32]
 8003bea:	4952      	ldr	r1, [pc, #328]	; (8003d34 <I2C_RequestMemoryRead+0x1cc>)
 8003bec:	68f8      	ldr	r0, [r7, #12]
 8003bee:	f000 f91d 	bl	8003e2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003bf2:	4603      	mov	r3, r0
 8003bf4:	2b00      	cmp	r3, #0
 8003bf6:	d001      	beq.n	8003bfc <I2C_RequestMemoryRead+0x94>
 8003bf8:	2301      	movs	r3, #1
 8003bfa:	e097      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003bfc:	2300      	movs	r3, #0
 8003bfe:	617b      	str	r3, [r7, #20]
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	695b      	ldr	r3, [r3, #20]
 8003c06:	617b      	str	r3, [r7, #20]
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	699b      	ldr	r3, [r3, #24]
 8003c0e:	617b      	str	r3, [r7, #20]
 8003c10:	697b      	ldr	r3, [r7, #20]
 8003c12:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003c14:	6a39      	ldr	r1, [r7, #32]
 8003c16:	68f8      	ldr	r0, [r7, #12]
 8003c18:	f000 f9a8 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003c1c:	4603      	mov	r3, r0
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d00d      	beq.n	8003c3e <I2C_RequestMemoryRead+0xd6>
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c26:	2b04      	cmp	r3, #4
 8003c28:	d107      	bne.n	8003c3a <I2C_RequestMemoryRead+0xd2>
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	681a      	ldr	r2, [r3, #0]
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003c38:	601a      	str	r2, [r3, #0]
 8003c3a:	2301      	movs	r3, #1
 8003c3c:	e076      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003c3e:	88fb      	ldrh	r3, [r7, #6]
 8003c40:	2b01      	cmp	r3, #1
 8003c42:	d105      	bne.n	8003c50 <I2C_RequestMemoryRead+0xe8>
 8003c44:	893b      	ldrh	r3, [r7, #8]
 8003c46:	b2da      	uxtb	r2, r3
 8003c48:	68fb      	ldr	r3, [r7, #12]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	611a      	str	r2, [r3, #16]
 8003c4e:	e021      	b.n	8003c94 <I2C_RequestMemoryRead+0x12c>
 8003c50:	893b      	ldrh	r3, [r7, #8]
 8003c52:	0a1b      	lsrs	r3, r3, #8
 8003c54:	b29b      	uxth	r3, r3
 8003c56:	b2da      	uxtb	r2, r3
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	611a      	str	r2, [r3, #16]
 8003c5e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003c60:	6a39      	ldr	r1, [r7, #32]
 8003c62:	68f8      	ldr	r0, [r7, #12]
 8003c64:	f000 f982 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003c68:	4603      	mov	r3, r0
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d00d      	beq.n	8003c8a <I2C_RequestMemoryRead+0x122>
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c72:	2b04      	cmp	r3, #4
 8003c74:	d107      	bne.n	8003c86 <I2C_RequestMemoryRead+0x11e>
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	681a      	ldr	r2, [r3, #0]
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003c84:	601a      	str	r2, [r3, #0]
 8003c86:	2301      	movs	r3, #1
 8003c88:	e050      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003c8a:	893b      	ldrh	r3, [r7, #8]
 8003c8c:	b2da      	uxtb	r2, r3
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	611a      	str	r2, [r3, #16]
 8003c94:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003c96:	6a39      	ldr	r1, [r7, #32]
 8003c98:	68f8      	ldr	r0, [r7, #12]
 8003c9a:	f000 f967 	bl	8003f6c <I2C_WaitOnTXEFlagUntilTimeout>
 8003c9e:	4603      	mov	r3, r0
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d00d      	beq.n	8003cc0 <I2C_RequestMemoryRead+0x158>
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ca8:	2b04      	cmp	r3, #4
 8003caa:	d107      	bne.n	8003cbc <I2C_RequestMemoryRead+0x154>
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	681a      	ldr	r2, [r3, #0]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003cba:	601a      	str	r2, [r3, #0]
 8003cbc:	2301      	movs	r3, #1
 8003cbe:	e035      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	681a      	ldr	r2, [r3, #0]
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003cce:	601a      	str	r2, [r3, #0]
 8003cd0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cd2:	9300      	str	r3, [sp, #0]
 8003cd4:	6a3b      	ldr	r3, [r7, #32]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003cdc:	68f8      	ldr	r0, [r7, #12]
 8003cde:	f000 f82b 	bl	8003d38 <I2C_WaitOnFlagUntilTimeout>
 8003ce2:	4603      	mov	r3, r0
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d00d      	beq.n	8003d04 <I2C_RequestMemoryRead+0x19c>
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003cf2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003cf6:	d103      	bne.n	8003d00 <I2C_RequestMemoryRead+0x198>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003cfe:	641a      	str	r2, [r3, #64]	; 0x40
 8003d00:	2303      	movs	r3, #3
 8003d02:	e013      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003d04:	897b      	ldrh	r3, [r7, #10]
 8003d06:	b2db      	uxtb	r3, r3
 8003d08:	f043 0301 	orr.w	r3, r3, #1
 8003d0c:	b2da      	uxtb	r2, r3
 8003d0e:	68fb      	ldr	r3, [r7, #12]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	611a      	str	r2, [r3, #16]
 8003d14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d16:	6a3a      	ldr	r2, [r7, #32]
 8003d18:	4906      	ldr	r1, [pc, #24]	; (8003d34 <I2C_RequestMemoryRead+0x1cc>)
 8003d1a:	68f8      	ldr	r0, [r7, #12]
 8003d1c:	f000 f886 	bl	8003e2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003d20:	4603      	mov	r3, r0
 8003d22:	2b00      	cmp	r3, #0
 8003d24:	d001      	beq.n	8003d2a <I2C_RequestMemoryRead+0x1c2>
 8003d26:	2301      	movs	r3, #1
 8003d28:	e000      	b.n	8003d2c <I2C_RequestMemoryRead+0x1c4>
 8003d2a:	2300      	movs	r3, #0
 8003d2c:	4618      	mov	r0, r3
 8003d2e:	3718      	adds	r7, #24
 8003d30:	46bd      	mov	sp, r7
 8003d32:	bd80      	pop	{r7, pc}
 8003d34:	00010002 	.word	0x00010002

08003d38 <I2C_WaitOnFlagUntilTimeout>:
 8003d38:	b580      	push	{r7, lr}
 8003d3a:	b084      	sub	sp, #16
 8003d3c:	af00      	add	r7, sp, #0
 8003d3e:	60f8      	str	r0, [r7, #12]
 8003d40:	60b9      	str	r1, [r7, #8]
 8003d42:	603b      	str	r3, [r7, #0]
 8003d44:	4613      	mov	r3, r2
 8003d46:	71fb      	strb	r3, [r7, #7]
 8003d48:	e048      	b.n	8003ddc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d4a:	683b      	ldr	r3, [r7, #0]
 8003d4c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d50:	d044      	beq.n	8003ddc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d52:	f7fe ff79 	bl	8002c48 <HAL_GetTick>
 8003d56:	4602      	mov	r2, r0
 8003d58:	69bb      	ldr	r3, [r7, #24]
 8003d5a:	1ad3      	subs	r3, r2, r3
 8003d5c:	683a      	ldr	r2, [r7, #0]
 8003d5e:	429a      	cmp	r2, r3
 8003d60:	d302      	bcc.n	8003d68 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003d62:	683b      	ldr	r3, [r7, #0]
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d139      	bne.n	8003ddc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003d68:	68bb      	ldr	r3, [r7, #8]
 8003d6a:	0c1b      	lsrs	r3, r3, #16
 8003d6c:	b2db      	uxtb	r3, r3
 8003d6e:	2b01      	cmp	r3, #1
 8003d70:	d10d      	bne.n	8003d8e <I2C_WaitOnFlagUntilTimeout+0x56>
 8003d72:	68fb      	ldr	r3, [r7, #12]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	695b      	ldr	r3, [r3, #20]
 8003d78:	43da      	mvns	r2, r3
 8003d7a:	68bb      	ldr	r3, [r7, #8]
 8003d7c:	4013      	ands	r3, r2
 8003d7e:	b29b      	uxth	r3, r3
 8003d80:	2b00      	cmp	r3, #0
 8003d82:	bf0c      	ite	eq
 8003d84:	2301      	moveq	r3, #1
 8003d86:	2300      	movne	r3, #0
 8003d88:	b2db      	uxtb	r3, r3
 8003d8a:	461a      	mov	r2, r3
 8003d8c:	e00c      	b.n	8003da8 <I2C_WaitOnFlagUntilTimeout+0x70>
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	699b      	ldr	r3, [r3, #24]
 8003d94:	43da      	mvns	r2, r3
 8003d96:	68bb      	ldr	r3, [r7, #8]
 8003d98:	4013      	ands	r3, r2
 8003d9a:	b29b      	uxth	r3, r3
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	bf0c      	ite	eq
 8003da0:	2301      	moveq	r3, #1
 8003da2:	2300      	movne	r3, #0
 8003da4:	b2db      	uxtb	r3, r3
 8003da6:	461a      	mov	r2, r3
 8003da8:	79fb      	ldrb	r3, [r7, #7]
 8003daa:	429a      	cmp	r2, r3
 8003dac:	d116      	bne.n	8003ddc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003dae:	68fb      	ldr	r3, [r7, #12]
 8003db0:	2200      	movs	r2, #0
 8003db2:	631a      	str	r2, [r3, #48]	; 0x30
 8003db4:	68fb      	ldr	r3, [r7, #12]
 8003db6:	2220      	movs	r2, #32
 8003db8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	2200      	movs	r2, #0
 8003dc0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003dc8:	f043 0220 	orr.w	r2, r3, #32
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	641a      	str	r2, [r3, #64]	; 0x40
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	2200      	movs	r2, #0
 8003dd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003dd8:	2301      	movs	r3, #1
 8003dda:	e023      	b.n	8003e24 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003ddc:	68bb      	ldr	r3, [r7, #8]
 8003dde:	0c1b      	lsrs	r3, r3, #16
 8003de0:	b2db      	uxtb	r3, r3
 8003de2:	2b01      	cmp	r3, #1
 8003de4:	d10d      	bne.n	8003e02 <I2C_WaitOnFlagUntilTimeout+0xca>
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	695b      	ldr	r3, [r3, #20]
 8003dec:	43da      	mvns	r2, r3
 8003dee:	68bb      	ldr	r3, [r7, #8]
 8003df0:	4013      	ands	r3, r2
 8003df2:	b29b      	uxth	r3, r3
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	bf0c      	ite	eq
 8003df8:	2301      	moveq	r3, #1
 8003dfa:	2300      	movne	r3, #0
 8003dfc:	b2db      	uxtb	r3, r3
 8003dfe:	461a      	mov	r2, r3
 8003e00:	e00c      	b.n	8003e1c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	699b      	ldr	r3, [r3, #24]
 8003e08:	43da      	mvns	r2, r3
 8003e0a:	68bb      	ldr	r3, [r7, #8]
 8003e0c:	4013      	ands	r3, r2
 8003e0e:	b29b      	uxth	r3, r3
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	bf0c      	ite	eq
 8003e14:	2301      	moveq	r3, #1
 8003e16:	2300      	movne	r3, #0
 8003e18:	b2db      	uxtb	r3, r3
 8003e1a:	461a      	mov	r2, r3
 8003e1c:	79fb      	ldrb	r3, [r7, #7]
 8003e1e:	429a      	cmp	r2, r3
 8003e20:	d093      	beq.n	8003d4a <I2C_WaitOnFlagUntilTimeout+0x12>
 8003e22:	2300      	movs	r3, #0
 8003e24:	4618      	mov	r0, r3
 8003e26:	3710      	adds	r7, #16
 8003e28:	46bd      	mov	sp, r7
 8003e2a:	bd80      	pop	{r7, pc}

08003e2c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8003e2c:	b580      	push	{r7, lr}
 8003e2e:	b084      	sub	sp, #16
 8003e30:	af00      	add	r7, sp, #0
 8003e32:	60f8      	str	r0, [r7, #12]
 8003e34:	60b9      	str	r1, [r7, #8]
 8003e36:	607a      	str	r2, [r7, #4]
 8003e38:	603b      	str	r3, [r7, #0]
 8003e3a:	e071      	b.n	8003f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	695b      	ldr	r3, [r3, #20]
 8003e42:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003e46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003e4a:	d123      	bne.n	8003e94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	681a      	ldr	r2, [r3, #0]
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e5a:	601a      	str	r2, [r3, #0]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003e64:	615a      	str	r2, [r3, #20]
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	2200      	movs	r2, #0
 8003e6a:	631a      	str	r2, [r3, #48]	; 0x30
 8003e6c:	68fb      	ldr	r3, [r7, #12]
 8003e6e:	2220      	movs	r2, #32
 8003e70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	2200      	movs	r2, #0
 8003e78:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003e7c:	68fb      	ldr	r3, [r7, #12]
 8003e7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e80:	f043 0204 	orr.w	r2, r3, #4
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	641a      	str	r2, [r3, #64]	; 0x40
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	2200      	movs	r2, #0
 8003e8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e90:	2301      	movs	r3, #1
 8003e92:	e067      	b.n	8003f64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003e9a:	d041      	beq.n	8003f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003e9c:	f7fe fed4 	bl	8002c48 <HAL_GetTick>
 8003ea0:	4602      	mov	r2, r0
 8003ea2:	683b      	ldr	r3, [r7, #0]
 8003ea4:	1ad3      	subs	r3, r2, r3
 8003ea6:	687a      	ldr	r2, [r7, #4]
 8003ea8:	429a      	cmp	r2, r3
 8003eaa:	d302      	bcc.n	8003eb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d136      	bne.n	8003f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003eb2:	68bb      	ldr	r3, [r7, #8]
 8003eb4:	0c1b      	lsrs	r3, r3, #16
 8003eb6:	b2db      	uxtb	r3, r3
 8003eb8:	2b01      	cmp	r3, #1
 8003eba:	d10c      	bne.n	8003ed6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003ebc:	68fb      	ldr	r3, [r7, #12]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	695b      	ldr	r3, [r3, #20]
 8003ec2:	43da      	mvns	r2, r3
 8003ec4:	68bb      	ldr	r3, [r7, #8]
 8003ec6:	4013      	ands	r3, r2
 8003ec8:	b29b      	uxth	r3, r3
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	bf14      	ite	ne
 8003ece:	2301      	movne	r3, #1
 8003ed0:	2300      	moveq	r3, #0
 8003ed2:	b2db      	uxtb	r3, r3
 8003ed4:	e00b      	b.n	8003eee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	699b      	ldr	r3, [r3, #24]
 8003edc:	43da      	mvns	r2, r3
 8003ede:	68bb      	ldr	r3, [r7, #8]
 8003ee0:	4013      	ands	r3, r2
 8003ee2:	b29b      	uxth	r3, r3
 8003ee4:	2b00      	cmp	r3, #0
 8003ee6:	bf14      	ite	ne
 8003ee8:	2301      	movne	r3, #1
 8003eea:	2300      	moveq	r3, #0
 8003eec:	b2db      	uxtb	r3, r3
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d016      	beq.n	8003f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003ef2:	68fb      	ldr	r3, [r7, #12]
 8003ef4:	2200      	movs	r2, #0
 8003ef6:	631a      	str	r2, [r3, #48]	; 0x30
 8003ef8:	68fb      	ldr	r3, [r7, #12]
 8003efa:	2220      	movs	r2, #32
 8003efc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	2200      	movs	r2, #0
 8003f04:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003f08:	68fb      	ldr	r3, [r7, #12]
 8003f0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f0c:	f043 0220 	orr.w	r2, r3, #32
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	641a      	str	r2, [r3, #64]	; 0x40
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	2200      	movs	r2, #0
 8003f18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f1c:	2301      	movs	r3, #1
 8003f1e:	e021      	b.n	8003f64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003f20:	68bb      	ldr	r3, [r7, #8]
 8003f22:	0c1b      	lsrs	r3, r3, #16
 8003f24:	b2db      	uxtb	r3, r3
 8003f26:	2b01      	cmp	r3, #1
 8003f28:	d10c      	bne.n	8003f44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8003f2a:	68fb      	ldr	r3, [r7, #12]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	695b      	ldr	r3, [r3, #20]
 8003f30:	43da      	mvns	r2, r3
 8003f32:	68bb      	ldr	r3, [r7, #8]
 8003f34:	4013      	ands	r3, r2
 8003f36:	b29b      	uxth	r3, r3
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	bf14      	ite	ne
 8003f3c:	2301      	movne	r3, #1
 8003f3e:	2300      	moveq	r3, #0
 8003f40:	b2db      	uxtb	r3, r3
 8003f42:	e00b      	b.n	8003f5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	699b      	ldr	r3, [r3, #24]
 8003f4a:	43da      	mvns	r2, r3
 8003f4c:	68bb      	ldr	r3, [r7, #8]
 8003f4e:	4013      	ands	r3, r2
 8003f50:	b29b      	uxth	r3, r3
 8003f52:	2b00      	cmp	r3, #0
 8003f54:	bf14      	ite	ne
 8003f56:	2301      	movne	r3, #1
 8003f58:	2300      	moveq	r3, #0
 8003f5a:	b2db      	uxtb	r3, r3
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	f47f af6d 	bne.w	8003e3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003f62:	2300      	movs	r3, #0
 8003f64:	4618      	mov	r0, r3
 8003f66:	3710      	adds	r7, #16
 8003f68:	46bd      	mov	sp, r7
 8003f6a:	bd80      	pop	{r7, pc}

08003f6c <I2C_WaitOnTXEFlagUntilTimeout>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b084      	sub	sp, #16
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	60f8      	str	r0, [r7, #12]
 8003f74:	60b9      	str	r1, [r7, #8]
 8003f76:	607a      	str	r2, [r7, #4]
 8003f78:	e034      	b.n	8003fe4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003f7a:	68f8      	ldr	r0, [r7, #12]
 8003f7c:	f000 f8e3 	bl	8004146 <I2C_IsAcknowledgeFailed>
 8003f80:	4603      	mov	r3, r0
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d001      	beq.n	8003f8a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003f86:	2301      	movs	r3, #1
 8003f88:	e034      	b.n	8003ff4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003f8a:	68bb      	ldr	r3, [r7, #8]
 8003f8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f90:	d028      	beq.n	8003fe4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003f92:	f7fe fe59 	bl	8002c48 <HAL_GetTick>
 8003f96:	4602      	mov	r2, r0
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	1ad3      	subs	r3, r2, r3
 8003f9c:	68ba      	ldr	r2, [r7, #8]
 8003f9e:	429a      	cmp	r2, r3
 8003fa0:	d302      	bcc.n	8003fa8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003fa2:	68bb      	ldr	r3, [r7, #8]
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d11d      	bne.n	8003fe4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	695b      	ldr	r3, [r3, #20]
 8003fae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003fb2:	2b80      	cmp	r3, #128	; 0x80
 8003fb4:	d016      	beq.n	8003fe4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003fb6:	68fb      	ldr	r3, [r7, #12]
 8003fb8:	2200      	movs	r2, #0
 8003fba:	631a      	str	r2, [r3, #48]	; 0x30
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	2220      	movs	r2, #32
 8003fc0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fd0:	f043 0220 	orr.w	r2, r3, #32
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	641a      	str	r2, [r3, #64]	; 0x40
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	2200      	movs	r2, #0
 8003fdc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003fe0:	2301      	movs	r3, #1
 8003fe2:	e007      	b.n	8003ff4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	695b      	ldr	r3, [r3, #20]
 8003fea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003fee:	2b80      	cmp	r3, #128	; 0x80
 8003ff0:	d1c3      	bne.n	8003f7a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003ff2:	2300      	movs	r3, #0
 8003ff4:	4618      	mov	r0, r3
 8003ff6:	3710      	adds	r7, #16
 8003ff8:	46bd      	mov	sp, r7
 8003ffa:	bd80      	pop	{r7, pc}

08003ffc <I2C_WaitOnBTFFlagUntilTimeout>:
 8003ffc:	b580      	push	{r7, lr}
 8003ffe:	b084      	sub	sp, #16
 8004000:	af00      	add	r7, sp, #0
 8004002:	60f8      	str	r0, [r7, #12]
 8004004:	60b9      	str	r1, [r7, #8]
 8004006:	607a      	str	r2, [r7, #4]
 8004008:	e034      	b.n	8004074 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800400a:	68f8      	ldr	r0, [r7, #12]
 800400c:	f000 f89b 	bl	8004146 <I2C_IsAcknowledgeFailed>
 8004010:	4603      	mov	r3, r0
 8004012:	2b00      	cmp	r3, #0
 8004014:	d001      	beq.n	800401a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8004016:	2301      	movs	r3, #1
 8004018:	e034      	b.n	8004084 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800401a:	68bb      	ldr	r3, [r7, #8]
 800401c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004020:	d028      	beq.n	8004074 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004022:	f7fe fe11 	bl	8002c48 <HAL_GetTick>
 8004026:	4602      	mov	r2, r0
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	1ad3      	subs	r3, r2, r3
 800402c:	68ba      	ldr	r2, [r7, #8]
 800402e:	429a      	cmp	r2, r3
 8004030:	d302      	bcc.n	8004038 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004032:	68bb      	ldr	r3, [r7, #8]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d11d      	bne.n	8004074 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	695b      	ldr	r3, [r3, #20]
 800403e:	f003 0304 	and.w	r3, r3, #4
 8004042:	2b04      	cmp	r3, #4
 8004044:	d016      	beq.n	8004074 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	2200      	movs	r2, #0
 800404a:	631a      	str	r2, [r3, #48]	; 0x30
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	2220      	movs	r2, #32
 8004050:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	2200      	movs	r2, #0
 8004058:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004060:	f043 0220 	orr.w	r2, r3, #32
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	641a      	str	r2, [r3, #64]	; 0x40
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	2200      	movs	r2, #0
 800406c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004070:	2301      	movs	r3, #1
 8004072:	e007      	b.n	8004084 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	695b      	ldr	r3, [r3, #20]
 800407a:	f003 0304 	and.w	r3, r3, #4
 800407e:	2b04      	cmp	r3, #4
 8004080:	d1c3      	bne.n	800400a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8004082:	2300      	movs	r3, #0
 8004084:	4618      	mov	r0, r3
 8004086:	3710      	adds	r7, #16
 8004088:	46bd      	mov	sp, r7
 800408a:	bd80      	pop	{r7, pc}

0800408c <I2C_WaitOnRXNEFlagUntilTimeout>:
 800408c:	b580      	push	{r7, lr}
 800408e:	b084      	sub	sp, #16
 8004090:	af00      	add	r7, sp, #0
 8004092:	60f8      	str	r0, [r7, #12]
 8004094:	60b9      	str	r1, [r7, #8]
 8004096:	607a      	str	r2, [r7, #4]
 8004098:	e049      	b.n	800412e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	695b      	ldr	r3, [r3, #20]
 80040a0:	f003 0310 	and.w	r3, r3, #16
 80040a4:	2b10      	cmp	r3, #16
 80040a6:	d119      	bne.n	80040dc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	f06f 0210 	mvn.w	r2, #16
 80040b0:	615a      	str	r2, [r3, #20]
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	2200      	movs	r2, #0
 80040b6:	631a      	str	r2, [r3, #48]	; 0x30
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	2220      	movs	r2, #32
 80040bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	2200      	movs	r2, #0
 80040c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	641a      	str	r2, [r3, #64]	; 0x40
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	2200      	movs	r2, #0
 80040d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80040d8:	2301      	movs	r3, #1
 80040da:	e030      	b.n	800413e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80040dc:	f7fe fdb4 	bl	8002c48 <HAL_GetTick>
 80040e0:	4602      	mov	r2, r0
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	1ad3      	subs	r3, r2, r3
 80040e6:	68ba      	ldr	r2, [r7, #8]
 80040e8:	429a      	cmp	r2, r3
 80040ea:	d302      	bcc.n	80040f2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80040ec:	68bb      	ldr	r3, [r7, #8]
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	d11d      	bne.n	800412e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80040f2:	68fb      	ldr	r3, [r7, #12]
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	695b      	ldr	r3, [r3, #20]
 80040f8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80040fc:	2b40      	cmp	r3, #64	; 0x40
 80040fe:	d016      	beq.n	800412e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	2200      	movs	r2, #0
 8004104:	631a      	str	r2, [r3, #48]	; 0x30
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	2220      	movs	r2, #32
 800410a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	2200      	movs	r2, #0
 8004112:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004116:	68fb      	ldr	r3, [r7, #12]
 8004118:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800411a:	f043 0220 	orr.w	r2, r3, #32
 800411e:	68fb      	ldr	r3, [r7, #12]
 8004120:	641a      	str	r2, [r3, #64]	; 0x40
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	2200      	movs	r2, #0
 8004126:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800412a:	2301      	movs	r3, #1
 800412c:	e007      	b.n	800413e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 800412e:	68fb      	ldr	r3, [r7, #12]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	695b      	ldr	r3, [r3, #20]
 8004134:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004138:	2b40      	cmp	r3, #64	; 0x40
 800413a:	d1ae      	bne.n	800409a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800413c:	2300      	movs	r3, #0
 800413e:	4618      	mov	r0, r3
 8004140:	3710      	adds	r7, #16
 8004142:	46bd      	mov	sp, r7
 8004144:	bd80      	pop	{r7, pc}

08004146 <I2C_IsAcknowledgeFailed>:
 8004146:	b480      	push	{r7}
 8004148:	b083      	sub	sp, #12
 800414a:	af00      	add	r7, sp, #0
 800414c:	6078      	str	r0, [r7, #4]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	695b      	ldr	r3, [r3, #20]
 8004154:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004158:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800415c:	d11b      	bne.n	8004196 <I2C_IsAcknowledgeFailed+0x50>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004166:	615a      	str	r2, [r3, #20]
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	2200      	movs	r2, #0
 800416c:	631a      	str	r2, [r3, #48]	; 0x30
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	2220      	movs	r2, #32
 8004172:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	2200      	movs	r2, #0
 800417a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004182:	f043 0204 	orr.w	r2, r3, #4
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	641a      	str	r2, [r3, #64]	; 0x40
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	2200      	movs	r2, #0
 800418e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004192:	2301      	movs	r3, #1
 8004194:	e000      	b.n	8004198 <I2C_IsAcknowledgeFailed+0x52>
 8004196:	2300      	movs	r3, #0
 8004198:	4618      	mov	r0, r3
 800419a:	370c      	adds	r7, #12
 800419c:	46bd      	mov	sp, r7
 800419e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a2:	4770      	bx	lr

080041a4 <HAL_RCC_OscConfig>:
 80041a4:	b580      	push	{r7, lr}
 80041a6:	b086      	sub	sp, #24
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d101      	bne.n	80041b6 <HAL_RCC_OscConfig+0x12>
 80041b2:	2301      	movs	r3, #1
 80041b4:	e267      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	f003 0301 	and.w	r3, r3, #1
 80041be:	2b00      	cmp	r3, #0
 80041c0:	d075      	beq.n	80042ae <HAL_RCC_OscConfig+0x10a>
 80041c2:	4b88      	ldr	r3, [pc, #544]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80041c4:	689b      	ldr	r3, [r3, #8]
 80041c6:	f003 030c 	and.w	r3, r3, #12
 80041ca:	2b04      	cmp	r3, #4
 80041cc:	d00c      	beq.n	80041e8 <HAL_RCC_OscConfig+0x44>
 80041ce:	4b85      	ldr	r3, [pc, #532]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80041d0:	689b      	ldr	r3, [r3, #8]
 80041d2:	f003 030c 	and.w	r3, r3, #12
 80041d6:	2b08      	cmp	r3, #8
 80041d8:	d112      	bne.n	8004200 <HAL_RCC_OscConfig+0x5c>
 80041da:	4b82      	ldr	r3, [pc, #520]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80041dc:	685b      	ldr	r3, [r3, #4]
 80041de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80041e2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80041e6:	d10b      	bne.n	8004200 <HAL_RCC_OscConfig+0x5c>
 80041e8:	4b7e      	ldr	r3, [pc, #504]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	d05b      	beq.n	80042ac <HAL_RCC_OscConfig+0x108>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	685b      	ldr	r3, [r3, #4]
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d157      	bne.n	80042ac <HAL_RCC_OscConfig+0x108>
 80041fc:	2301      	movs	r3, #1
 80041fe:	e242      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	685b      	ldr	r3, [r3, #4]
 8004204:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004208:	d106      	bne.n	8004218 <HAL_RCC_OscConfig+0x74>
 800420a:	4b76      	ldr	r3, [pc, #472]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	4a75      	ldr	r2, [pc, #468]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004210:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004214:	6013      	str	r3, [r2, #0]
 8004216:	e01d      	b.n	8004254 <HAL_RCC_OscConfig+0xb0>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	685b      	ldr	r3, [r3, #4]
 800421c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004220:	d10c      	bne.n	800423c <HAL_RCC_OscConfig+0x98>
 8004222:	4b70      	ldr	r3, [pc, #448]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	4a6f      	ldr	r2, [pc, #444]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004228:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800422c:	6013      	str	r3, [r2, #0]
 800422e:	4b6d      	ldr	r3, [pc, #436]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	4a6c      	ldr	r2, [pc, #432]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004234:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004238:	6013      	str	r3, [r2, #0]
 800423a:	e00b      	b.n	8004254 <HAL_RCC_OscConfig+0xb0>
 800423c:	4b69      	ldr	r3, [pc, #420]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	4a68      	ldr	r2, [pc, #416]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004242:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004246:	6013      	str	r3, [r2, #0]
 8004248:	4b66      	ldr	r3, [pc, #408]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	4a65      	ldr	r2, [pc, #404]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 800424e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004252:	6013      	str	r3, [r2, #0]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	685b      	ldr	r3, [r3, #4]
 8004258:	2b00      	cmp	r3, #0
 800425a:	d013      	beq.n	8004284 <HAL_RCC_OscConfig+0xe0>
 800425c:	f7fe fcf4 	bl	8002c48 <HAL_GetTick>
 8004260:	6138      	str	r0, [r7, #16]
 8004262:	e008      	b.n	8004276 <HAL_RCC_OscConfig+0xd2>
 8004264:	f7fe fcf0 	bl	8002c48 <HAL_GetTick>
 8004268:	4602      	mov	r2, r0
 800426a:	693b      	ldr	r3, [r7, #16]
 800426c:	1ad3      	subs	r3, r2, r3
 800426e:	2b64      	cmp	r3, #100	; 0x64
 8004270:	d901      	bls.n	8004276 <HAL_RCC_OscConfig+0xd2>
 8004272:	2303      	movs	r3, #3
 8004274:	e207      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004276:	4b5b      	ldr	r3, [pc, #364]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800427e:	2b00      	cmp	r3, #0
 8004280:	d0f0      	beq.n	8004264 <HAL_RCC_OscConfig+0xc0>
 8004282:	e014      	b.n	80042ae <HAL_RCC_OscConfig+0x10a>
 8004284:	f7fe fce0 	bl	8002c48 <HAL_GetTick>
 8004288:	6138      	str	r0, [r7, #16]
 800428a:	e008      	b.n	800429e <HAL_RCC_OscConfig+0xfa>
 800428c:	f7fe fcdc 	bl	8002c48 <HAL_GetTick>
 8004290:	4602      	mov	r2, r0
 8004292:	693b      	ldr	r3, [r7, #16]
 8004294:	1ad3      	subs	r3, r2, r3
 8004296:	2b64      	cmp	r3, #100	; 0x64
 8004298:	d901      	bls.n	800429e <HAL_RCC_OscConfig+0xfa>
 800429a:	2303      	movs	r3, #3
 800429c:	e1f3      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 800429e:	4b51      	ldr	r3, [pc, #324]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042a6:	2b00      	cmp	r3, #0
 80042a8:	d1f0      	bne.n	800428c <HAL_RCC_OscConfig+0xe8>
 80042aa:	e000      	b.n	80042ae <HAL_RCC_OscConfig+0x10a>
 80042ac:	bf00      	nop
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	f003 0302 	and.w	r3, r3, #2
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d063      	beq.n	8004382 <HAL_RCC_OscConfig+0x1de>
 80042ba:	4b4a      	ldr	r3, [pc, #296]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042bc:	689b      	ldr	r3, [r3, #8]
 80042be:	f003 030c 	and.w	r3, r3, #12
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d00b      	beq.n	80042de <HAL_RCC_OscConfig+0x13a>
 80042c6:	4b47      	ldr	r3, [pc, #284]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042c8:	689b      	ldr	r3, [r3, #8]
 80042ca:	f003 030c 	and.w	r3, r3, #12
 80042ce:	2b08      	cmp	r3, #8
 80042d0:	d11c      	bne.n	800430c <HAL_RCC_OscConfig+0x168>
 80042d2:	4b44      	ldr	r3, [pc, #272]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042d4:	685b      	ldr	r3, [r3, #4]
 80042d6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d116      	bne.n	800430c <HAL_RCC_OscConfig+0x168>
 80042de:	4b41      	ldr	r3, [pc, #260]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	f003 0302 	and.w	r3, r3, #2
 80042e6:	2b00      	cmp	r3, #0
 80042e8:	d005      	beq.n	80042f6 <HAL_RCC_OscConfig+0x152>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	68db      	ldr	r3, [r3, #12]
 80042ee:	2b01      	cmp	r3, #1
 80042f0:	d001      	beq.n	80042f6 <HAL_RCC_OscConfig+0x152>
 80042f2:	2301      	movs	r3, #1
 80042f4:	e1c7      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80042f6:	4b3b      	ldr	r3, [pc, #236]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	691b      	ldr	r3, [r3, #16]
 8004302:	00db      	lsls	r3, r3, #3
 8004304:	4937      	ldr	r1, [pc, #220]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004306:	4313      	orrs	r3, r2
 8004308:	600b      	str	r3, [r1, #0]
 800430a:	e03a      	b.n	8004382 <HAL_RCC_OscConfig+0x1de>
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	68db      	ldr	r3, [r3, #12]
 8004310:	2b00      	cmp	r3, #0
 8004312:	d020      	beq.n	8004356 <HAL_RCC_OscConfig+0x1b2>
 8004314:	4b34      	ldr	r3, [pc, #208]	; (80043e8 <HAL_RCC_OscConfig+0x244>)
 8004316:	2201      	movs	r2, #1
 8004318:	601a      	str	r2, [r3, #0]
 800431a:	f7fe fc95 	bl	8002c48 <HAL_GetTick>
 800431e:	6138      	str	r0, [r7, #16]
 8004320:	e008      	b.n	8004334 <HAL_RCC_OscConfig+0x190>
 8004322:	f7fe fc91 	bl	8002c48 <HAL_GetTick>
 8004326:	4602      	mov	r2, r0
 8004328:	693b      	ldr	r3, [r7, #16]
 800432a:	1ad3      	subs	r3, r2, r3
 800432c:	2b02      	cmp	r3, #2
 800432e:	d901      	bls.n	8004334 <HAL_RCC_OscConfig+0x190>
 8004330:	2303      	movs	r3, #3
 8004332:	e1a8      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004334:	4b2b      	ldr	r3, [pc, #172]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	f003 0302 	and.w	r3, r3, #2
 800433c:	2b00      	cmp	r3, #0
 800433e:	d0f0      	beq.n	8004322 <HAL_RCC_OscConfig+0x17e>
 8004340:	4b28      	ldr	r3, [pc, #160]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	691b      	ldr	r3, [r3, #16]
 800434c:	00db      	lsls	r3, r3, #3
 800434e:	4925      	ldr	r1, [pc, #148]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004350:	4313      	orrs	r3, r2
 8004352:	600b      	str	r3, [r1, #0]
 8004354:	e015      	b.n	8004382 <HAL_RCC_OscConfig+0x1de>
 8004356:	4b24      	ldr	r3, [pc, #144]	; (80043e8 <HAL_RCC_OscConfig+0x244>)
 8004358:	2200      	movs	r2, #0
 800435a:	601a      	str	r2, [r3, #0]
 800435c:	f7fe fc74 	bl	8002c48 <HAL_GetTick>
 8004360:	6138      	str	r0, [r7, #16]
 8004362:	e008      	b.n	8004376 <HAL_RCC_OscConfig+0x1d2>
 8004364:	f7fe fc70 	bl	8002c48 <HAL_GetTick>
 8004368:	4602      	mov	r2, r0
 800436a:	693b      	ldr	r3, [r7, #16]
 800436c:	1ad3      	subs	r3, r2, r3
 800436e:	2b02      	cmp	r3, #2
 8004370:	d901      	bls.n	8004376 <HAL_RCC_OscConfig+0x1d2>
 8004372:	2303      	movs	r3, #3
 8004374:	e187      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004376:	4b1b      	ldr	r3, [pc, #108]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	f003 0302 	and.w	r3, r3, #2
 800437e:	2b00      	cmp	r3, #0
 8004380:	d1f0      	bne.n	8004364 <HAL_RCC_OscConfig+0x1c0>
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	f003 0308 	and.w	r3, r3, #8
 800438a:	2b00      	cmp	r3, #0
 800438c:	d036      	beq.n	80043fc <HAL_RCC_OscConfig+0x258>
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	695b      	ldr	r3, [r3, #20]
 8004392:	2b00      	cmp	r3, #0
 8004394:	d016      	beq.n	80043c4 <HAL_RCC_OscConfig+0x220>
 8004396:	4b15      	ldr	r3, [pc, #84]	; (80043ec <HAL_RCC_OscConfig+0x248>)
 8004398:	2201      	movs	r2, #1
 800439a:	601a      	str	r2, [r3, #0]
 800439c:	f7fe fc54 	bl	8002c48 <HAL_GetTick>
 80043a0:	6138      	str	r0, [r7, #16]
 80043a2:	e008      	b.n	80043b6 <HAL_RCC_OscConfig+0x212>
 80043a4:	f7fe fc50 	bl	8002c48 <HAL_GetTick>
 80043a8:	4602      	mov	r2, r0
 80043aa:	693b      	ldr	r3, [r7, #16]
 80043ac:	1ad3      	subs	r3, r2, r3
 80043ae:	2b02      	cmp	r3, #2
 80043b0:	d901      	bls.n	80043b6 <HAL_RCC_OscConfig+0x212>
 80043b2:	2303      	movs	r3, #3
 80043b4:	e167      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80043b6:	4b0b      	ldr	r3, [pc, #44]	; (80043e4 <HAL_RCC_OscConfig+0x240>)
 80043b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043ba:	f003 0302 	and.w	r3, r3, #2
 80043be:	2b00      	cmp	r3, #0
 80043c0:	d0f0      	beq.n	80043a4 <HAL_RCC_OscConfig+0x200>
 80043c2:	e01b      	b.n	80043fc <HAL_RCC_OscConfig+0x258>
 80043c4:	4b09      	ldr	r3, [pc, #36]	; (80043ec <HAL_RCC_OscConfig+0x248>)
 80043c6:	2200      	movs	r2, #0
 80043c8:	601a      	str	r2, [r3, #0]
 80043ca:	f7fe fc3d 	bl	8002c48 <HAL_GetTick>
 80043ce:	6138      	str	r0, [r7, #16]
 80043d0:	e00e      	b.n	80043f0 <HAL_RCC_OscConfig+0x24c>
 80043d2:	f7fe fc39 	bl	8002c48 <HAL_GetTick>
 80043d6:	4602      	mov	r2, r0
 80043d8:	693b      	ldr	r3, [r7, #16]
 80043da:	1ad3      	subs	r3, r2, r3
 80043dc:	2b02      	cmp	r3, #2
 80043de:	d907      	bls.n	80043f0 <HAL_RCC_OscConfig+0x24c>
 80043e0:	2303      	movs	r3, #3
 80043e2:	e150      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80043e4:	40023800 	.word	0x40023800
 80043e8:	42470000 	.word	0x42470000
 80043ec:	42470e80 	.word	0x42470e80
 80043f0:	4b88      	ldr	r3, [pc, #544]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80043f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043f4:	f003 0302 	and.w	r3, r3, #2
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d1ea      	bne.n	80043d2 <HAL_RCC_OscConfig+0x22e>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	f003 0304 	and.w	r3, r3, #4
 8004404:	2b00      	cmp	r3, #0
 8004406:	f000 8097 	beq.w	8004538 <HAL_RCC_OscConfig+0x394>
 800440a:	2300      	movs	r3, #0
 800440c:	75fb      	strb	r3, [r7, #23]
 800440e:	4b81      	ldr	r3, [pc, #516]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004410:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004412:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004416:	2b00      	cmp	r3, #0
 8004418:	d10f      	bne.n	800443a <HAL_RCC_OscConfig+0x296>
 800441a:	2300      	movs	r3, #0
 800441c:	60bb      	str	r3, [r7, #8]
 800441e:	4b7d      	ldr	r3, [pc, #500]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004420:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004422:	4a7c      	ldr	r2, [pc, #496]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004424:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004428:	6413      	str	r3, [r2, #64]	; 0x40
 800442a:	4b7a      	ldr	r3, [pc, #488]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 800442c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800442e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004432:	60bb      	str	r3, [r7, #8]
 8004434:	68bb      	ldr	r3, [r7, #8]
 8004436:	2301      	movs	r3, #1
 8004438:	75fb      	strb	r3, [r7, #23]
 800443a:	4b77      	ldr	r3, [pc, #476]	; (8004618 <HAL_RCC_OscConfig+0x474>)
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004442:	2b00      	cmp	r3, #0
 8004444:	d118      	bne.n	8004478 <HAL_RCC_OscConfig+0x2d4>
 8004446:	4b74      	ldr	r3, [pc, #464]	; (8004618 <HAL_RCC_OscConfig+0x474>)
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	4a73      	ldr	r2, [pc, #460]	; (8004618 <HAL_RCC_OscConfig+0x474>)
 800444c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004450:	6013      	str	r3, [r2, #0]
 8004452:	f7fe fbf9 	bl	8002c48 <HAL_GetTick>
 8004456:	6138      	str	r0, [r7, #16]
 8004458:	e008      	b.n	800446c <HAL_RCC_OscConfig+0x2c8>
 800445a:	f7fe fbf5 	bl	8002c48 <HAL_GetTick>
 800445e:	4602      	mov	r2, r0
 8004460:	693b      	ldr	r3, [r7, #16]
 8004462:	1ad3      	subs	r3, r2, r3
 8004464:	2b02      	cmp	r3, #2
 8004466:	d901      	bls.n	800446c <HAL_RCC_OscConfig+0x2c8>
 8004468:	2303      	movs	r3, #3
 800446a:	e10c      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 800446c:	4b6a      	ldr	r3, [pc, #424]	; (8004618 <HAL_RCC_OscConfig+0x474>)
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004474:	2b00      	cmp	r3, #0
 8004476:	d0f0      	beq.n	800445a <HAL_RCC_OscConfig+0x2b6>
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	689b      	ldr	r3, [r3, #8]
 800447c:	2b01      	cmp	r3, #1
 800447e:	d106      	bne.n	800448e <HAL_RCC_OscConfig+0x2ea>
 8004480:	4b64      	ldr	r3, [pc, #400]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004482:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004484:	4a63      	ldr	r2, [pc, #396]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004486:	f043 0301 	orr.w	r3, r3, #1
 800448a:	6713      	str	r3, [r2, #112]	; 0x70
 800448c:	e01c      	b.n	80044c8 <HAL_RCC_OscConfig+0x324>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	689b      	ldr	r3, [r3, #8]
 8004492:	2b05      	cmp	r3, #5
 8004494:	d10c      	bne.n	80044b0 <HAL_RCC_OscConfig+0x30c>
 8004496:	4b5f      	ldr	r3, [pc, #380]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004498:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800449a:	4a5e      	ldr	r2, [pc, #376]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 800449c:	f043 0304 	orr.w	r3, r3, #4
 80044a0:	6713      	str	r3, [r2, #112]	; 0x70
 80044a2:	4b5c      	ldr	r3, [pc, #368]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044a6:	4a5b      	ldr	r2, [pc, #364]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044a8:	f043 0301 	orr.w	r3, r3, #1
 80044ac:	6713      	str	r3, [r2, #112]	; 0x70
 80044ae:	e00b      	b.n	80044c8 <HAL_RCC_OscConfig+0x324>
 80044b0:	4b58      	ldr	r3, [pc, #352]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044b4:	4a57      	ldr	r2, [pc, #348]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044b6:	f023 0301 	bic.w	r3, r3, #1
 80044ba:	6713      	str	r3, [r2, #112]	; 0x70
 80044bc:	4b55      	ldr	r3, [pc, #340]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044be:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044c0:	4a54      	ldr	r2, [pc, #336]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044c2:	f023 0304 	bic.w	r3, r3, #4
 80044c6:	6713      	str	r3, [r2, #112]	; 0x70
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	689b      	ldr	r3, [r3, #8]
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d015      	beq.n	80044fc <HAL_RCC_OscConfig+0x358>
 80044d0:	f7fe fbba 	bl	8002c48 <HAL_GetTick>
 80044d4:	6138      	str	r0, [r7, #16]
 80044d6:	e00a      	b.n	80044ee <HAL_RCC_OscConfig+0x34a>
 80044d8:	f7fe fbb6 	bl	8002c48 <HAL_GetTick>
 80044dc:	4602      	mov	r2, r0
 80044de:	693b      	ldr	r3, [r7, #16]
 80044e0:	1ad3      	subs	r3, r2, r3
 80044e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80044e6:	4293      	cmp	r3, r2
 80044e8:	d901      	bls.n	80044ee <HAL_RCC_OscConfig+0x34a>
 80044ea:	2303      	movs	r3, #3
 80044ec:	e0cb      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80044ee:	4b49      	ldr	r3, [pc, #292]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80044f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044f2:	f003 0302 	and.w	r3, r3, #2
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d0ee      	beq.n	80044d8 <HAL_RCC_OscConfig+0x334>
 80044fa:	e014      	b.n	8004526 <HAL_RCC_OscConfig+0x382>
 80044fc:	f7fe fba4 	bl	8002c48 <HAL_GetTick>
 8004500:	6138      	str	r0, [r7, #16]
 8004502:	e00a      	b.n	800451a <HAL_RCC_OscConfig+0x376>
 8004504:	f7fe fba0 	bl	8002c48 <HAL_GetTick>
 8004508:	4602      	mov	r2, r0
 800450a:	693b      	ldr	r3, [r7, #16]
 800450c:	1ad3      	subs	r3, r2, r3
 800450e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004512:	4293      	cmp	r3, r2
 8004514:	d901      	bls.n	800451a <HAL_RCC_OscConfig+0x376>
 8004516:	2303      	movs	r3, #3
 8004518:	e0b5      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 800451a:	4b3e      	ldr	r3, [pc, #248]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 800451c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800451e:	f003 0302 	and.w	r3, r3, #2
 8004522:	2b00      	cmp	r3, #0
 8004524:	d1ee      	bne.n	8004504 <HAL_RCC_OscConfig+0x360>
 8004526:	7dfb      	ldrb	r3, [r7, #23]
 8004528:	2b01      	cmp	r3, #1
 800452a:	d105      	bne.n	8004538 <HAL_RCC_OscConfig+0x394>
 800452c:	4b39      	ldr	r3, [pc, #228]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 800452e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004530:	4a38      	ldr	r2, [pc, #224]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004532:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004536:	6413      	str	r3, [r2, #64]	; 0x40
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	699b      	ldr	r3, [r3, #24]
 800453c:	2b00      	cmp	r3, #0
 800453e:	f000 80a1 	beq.w	8004684 <HAL_RCC_OscConfig+0x4e0>
 8004542:	4b34      	ldr	r3, [pc, #208]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004544:	689b      	ldr	r3, [r3, #8]
 8004546:	f003 030c 	and.w	r3, r3, #12
 800454a:	2b08      	cmp	r3, #8
 800454c:	d05c      	beq.n	8004608 <HAL_RCC_OscConfig+0x464>
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	699b      	ldr	r3, [r3, #24]
 8004552:	2b02      	cmp	r3, #2
 8004554:	d141      	bne.n	80045da <HAL_RCC_OscConfig+0x436>
 8004556:	4b31      	ldr	r3, [pc, #196]	; (800461c <HAL_RCC_OscConfig+0x478>)
 8004558:	2200      	movs	r2, #0
 800455a:	601a      	str	r2, [r3, #0]
 800455c:	f7fe fb74 	bl	8002c48 <HAL_GetTick>
 8004560:	6138      	str	r0, [r7, #16]
 8004562:	e008      	b.n	8004576 <HAL_RCC_OscConfig+0x3d2>
 8004564:	f7fe fb70 	bl	8002c48 <HAL_GetTick>
 8004568:	4602      	mov	r2, r0
 800456a:	693b      	ldr	r3, [r7, #16]
 800456c:	1ad3      	subs	r3, r2, r3
 800456e:	2b02      	cmp	r3, #2
 8004570:	d901      	bls.n	8004576 <HAL_RCC_OscConfig+0x3d2>
 8004572:	2303      	movs	r3, #3
 8004574:	e087      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004576:	4b27      	ldr	r3, [pc, #156]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800457e:	2b00      	cmp	r3, #0
 8004580:	d1f0      	bne.n	8004564 <HAL_RCC_OscConfig+0x3c0>
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	69da      	ldr	r2, [r3, #28]
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	6a1b      	ldr	r3, [r3, #32]
 800458a:	431a      	orrs	r2, r3
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004590:	019b      	lsls	r3, r3, #6
 8004592:	431a      	orrs	r2, r3
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004598:	085b      	lsrs	r3, r3, #1
 800459a:	3b01      	subs	r3, #1
 800459c:	041b      	lsls	r3, r3, #16
 800459e:	431a      	orrs	r2, r3
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045a4:	061b      	lsls	r3, r3, #24
 80045a6:	491b      	ldr	r1, [pc, #108]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80045a8:	4313      	orrs	r3, r2
 80045aa:	604b      	str	r3, [r1, #4]
 80045ac:	4b1b      	ldr	r3, [pc, #108]	; (800461c <HAL_RCC_OscConfig+0x478>)
 80045ae:	2201      	movs	r2, #1
 80045b0:	601a      	str	r2, [r3, #0]
 80045b2:	f7fe fb49 	bl	8002c48 <HAL_GetTick>
 80045b6:	6138      	str	r0, [r7, #16]
 80045b8:	e008      	b.n	80045cc <HAL_RCC_OscConfig+0x428>
 80045ba:	f7fe fb45 	bl	8002c48 <HAL_GetTick>
 80045be:	4602      	mov	r2, r0
 80045c0:	693b      	ldr	r3, [r7, #16]
 80045c2:	1ad3      	subs	r3, r2, r3
 80045c4:	2b02      	cmp	r3, #2
 80045c6:	d901      	bls.n	80045cc <HAL_RCC_OscConfig+0x428>
 80045c8:	2303      	movs	r3, #3
 80045ca:	e05c      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80045cc:	4b11      	ldr	r3, [pc, #68]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d0f0      	beq.n	80045ba <HAL_RCC_OscConfig+0x416>
 80045d8:	e054      	b.n	8004684 <HAL_RCC_OscConfig+0x4e0>
 80045da:	4b10      	ldr	r3, [pc, #64]	; (800461c <HAL_RCC_OscConfig+0x478>)
 80045dc:	2200      	movs	r2, #0
 80045de:	601a      	str	r2, [r3, #0]
 80045e0:	f7fe fb32 	bl	8002c48 <HAL_GetTick>
 80045e4:	6138      	str	r0, [r7, #16]
 80045e6:	e008      	b.n	80045fa <HAL_RCC_OscConfig+0x456>
 80045e8:	f7fe fb2e 	bl	8002c48 <HAL_GetTick>
 80045ec:	4602      	mov	r2, r0
 80045ee:	693b      	ldr	r3, [r7, #16]
 80045f0:	1ad3      	subs	r3, r2, r3
 80045f2:	2b02      	cmp	r3, #2
 80045f4:	d901      	bls.n	80045fa <HAL_RCC_OscConfig+0x456>
 80045f6:	2303      	movs	r3, #3
 80045f8:	e045      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 80045fa:	4b06      	ldr	r3, [pc, #24]	; (8004614 <HAL_RCC_OscConfig+0x470>)
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004602:	2b00      	cmp	r3, #0
 8004604:	d1f0      	bne.n	80045e8 <HAL_RCC_OscConfig+0x444>
 8004606:	e03d      	b.n	8004684 <HAL_RCC_OscConfig+0x4e0>
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	699b      	ldr	r3, [r3, #24]
 800460c:	2b01      	cmp	r3, #1
 800460e:	d107      	bne.n	8004620 <HAL_RCC_OscConfig+0x47c>
 8004610:	2301      	movs	r3, #1
 8004612:	e038      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004614:	40023800 	.word	0x40023800
 8004618:	40007000 	.word	0x40007000
 800461c:	42470060 	.word	0x42470060
 8004620:	4b1b      	ldr	r3, [pc, #108]	; (8004690 <HAL_RCC_OscConfig+0x4ec>)
 8004622:	685b      	ldr	r3, [r3, #4]
 8004624:	60fb      	str	r3, [r7, #12]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	699b      	ldr	r3, [r3, #24]
 800462a:	2b01      	cmp	r3, #1
 800462c:	d028      	beq.n	8004680 <HAL_RCC_OscConfig+0x4dc>
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	69db      	ldr	r3, [r3, #28]
 8004638:	429a      	cmp	r2, r3
 800463a:	d121      	bne.n	8004680 <HAL_RCC_OscConfig+0x4dc>
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	6a1b      	ldr	r3, [r3, #32]
 8004646:	429a      	cmp	r2, r3
 8004648:	d11a      	bne.n	8004680 <HAL_RCC_OscConfig+0x4dc>
 800464a:	68fa      	ldr	r2, [r7, #12]
 800464c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004650:	4013      	ands	r3, r2
 8004652:	687a      	ldr	r2, [r7, #4]
 8004654:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004656:	0192      	lsls	r2, r2, #6
 8004658:	4293      	cmp	r3, r2
 800465a:	d111      	bne.n	8004680 <HAL_RCC_OscConfig+0x4dc>
 800465c:	68fb      	ldr	r3, [r7, #12]
 800465e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004666:	085b      	lsrs	r3, r3, #1
 8004668:	3b01      	subs	r3, #1
 800466a:	041b      	lsls	r3, r3, #16
 800466c:	429a      	cmp	r2, r3
 800466e:	d107      	bne.n	8004680 <HAL_RCC_OscConfig+0x4dc>
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800467a:	061b      	lsls	r3, r3, #24
 800467c:	429a      	cmp	r2, r3
 800467e:	d001      	beq.n	8004684 <HAL_RCC_OscConfig+0x4e0>
 8004680:	2301      	movs	r3, #1
 8004682:	e000      	b.n	8004686 <HAL_RCC_OscConfig+0x4e2>
 8004684:	2300      	movs	r3, #0
 8004686:	4618      	mov	r0, r3
 8004688:	3718      	adds	r7, #24
 800468a:	46bd      	mov	sp, r7
 800468c:	bd80      	pop	{r7, pc}
 800468e:	bf00      	nop
 8004690:	40023800 	.word	0x40023800

08004694 <HAL_RCC_ClockConfig>:
 8004694:	b580      	push	{r7, lr}
 8004696:	b084      	sub	sp, #16
 8004698:	af00      	add	r7, sp, #0
 800469a:	6078      	str	r0, [r7, #4]
 800469c:	6039      	str	r1, [r7, #0]
 800469e:	687b      	ldr	r3, [r7, #4]
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	d101      	bne.n	80046a8 <HAL_RCC_ClockConfig+0x14>
 80046a4:	2301      	movs	r3, #1
 80046a6:	e0cc      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 80046a8:	4b68      	ldr	r3, [pc, #416]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	f003 0307 	and.w	r3, r3, #7
 80046b0:	683a      	ldr	r2, [r7, #0]
 80046b2:	429a      	cmp	r2, r3
 80046b4:	d90c      	bls.n	80046d0 <HAL_RCC_ClockConfig+0x3c>
 80046b6:	4b65      	ldr	r3, [pc, #404]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80046b8:	683a      	ldr	r2, [r7, #0]
 80046ba:	b2d2      	uxtb	r2, r2
 80046bc:	701a      	strb	r2, [r3, #0]
 80046be:	4b63      	ldr	r3, [pc, #396]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	f003 0307 	and.w	r3, r3, #7
 80046c6:	683a      	ldr	r2, [r7, #0]
 80046c8:	429a      	cmp	r2, r3
 80046ca:	d001      	beq.n	80046d0 <HAL_RCC_ClockConfig+0x3c>
 80046cc:	2301      	movs	r3, #1
 80046ce:	e0b8      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	f003 0302 	and.w	r3, r3, #2
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d020      	beq.n	800471e <HAL_RCC_ClockConfig+0x8a>
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	f003 0304 	and.w	r3, r3, #4
 80046e4:	2b00      	cmp	r3, #0
 80046e6:	d005      	beq.n	80046f4 <HAL_RCC_ClockConfig+0x60>
 80046e8:	4b59      	ldr	r3, [pc, #356]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 80046ea:	689b      	ldr	r3, [r3, #8]
 80046ec:	4a58      	ldr	r2, [pc, #352]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 80046ee:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80046f2:	6093      	str	r3, [r2, #8]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	f003 0308 	and.w	r3, r3, #8
 80046fc:	2b00      	cmp	r3, #0
 80046fe:	d005      	beq.n	800470c <HAL_RCC_ClockConfig+0x78>
 8004700:	4b53      	ldr	r3, [pc, #332]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004702:	689b      	ldr	r3, [r3, #8]
 8004704:	4a52      	ldr	r2, [pc, #328]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004706:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800470a:	6093      	str	r3, [r2, #8]
 800470c:	4b50      	ldr	r3, [pc, #320]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 800470e:	689b      	ldr	r3, [r3, #8]
 8004710:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	689b      	ldr	r3, [r3, #8]
 8004718:	494d      	ldr	r1, [pc, #308]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 800471a:	4313      	orrs	r3, r2
 800471c:	608b      	str	r3, [r1, #8]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	f003 0301 	and.w	r3, r3, #1
 8004726:	2b00      	cmp	r3, #0
 8004728:	d044      	beq.n	80047b4 <HAL_RCC_ClockConfig+0x120>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	685b      	ldr	r3, [r3, #4]
 800472e:	2b01      	cmp	r3, #1
 8004730:	d107      	bne.n	8004742 <HAL_RCC_ClockConfig+0xae>
 8004732:	4b47      	ldr	r3, [pc, #284]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800473a:	2b00      	cmp	r3, #0
 800473c:	d119      	bne.n	8004772 <HAL_RCC_ClockConfig+0xde>
 800473e:	2301      	movs	r3, #1
 8004740:	e07f      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	685b      	ldr	r3, [r3, #4]
 8004746:	2b02      	cmp	r3, #2
 8004748:	d003      	beq.n	8004752 <HAL_RCC_ClockConfig+0xbe>
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	685b      	ldr	r3, [r3, #4]
 800474e:	2b03      	cmp	r3, #3
 8004750:	d107      	bne.n	8004762 <HAL_RCC_ClockConfig+0xce>
 8004752:	4b3f      	ldr	r3, [pc, #252]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800475a:	2b00      	cmp	r3, #0
 800475c:	d109      	bne.n	8004772 <HAL_RCC_ClockConfig+0xde>
 800475e:	2301      	movs	r3, #1
 8004760:	e06f      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 8004762:	4b3b      	ldr	r3, [pc, #236]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	f003 0302 	and.w	r3, r3, #2
 800476a:	2b00      	cmp	r3, #0
 800476c:	d101      	bne.n	8004772 <HAL_RCC_ClockConfig+0xde>
 800476e:	2301      	movs	r3, #1
 8004770:	e067      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 8004772:	4b37      	ldr	r3, [pc, #220]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004774:	689b      	ldr	r3, [r3, #8]
 8004776:	f023 0203 	bic.w	r2, r3, #3
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	685b      	ldr	r3, [r3, #4]
 800477e:	4934      	ldr	r1, [pc, #208]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004780:	4313      	orrs	r3, r2
 8004782:	608b      	str	r3, [r1, #8]
 8004784:	f7fe fa60 	bl	8002c48 <HAL_GetTick>
 8004788:	60f8      	str	r0, [r7, #12]
 800478a:	e00a      	b.n	80047a2 <HAL_RCC_ClockConfig+0x10e>
 800478c:	f7fe fa5c 	bl	8002c48 <HAL_GetTick>
 8004790:	4602      	mov	r2, r0
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	1ad3      	subs	r3, r2, r3
 8004796:	f241 3288 	movw	r2, #5000	; 0x1388
 800479a:	4293      	cmp	r3, r2
 800479c:	d901      	bls.n	80047a2 <HAL_RCC_ClockConfig+0x10e>
 800479e:	2303      	movs	r3, #3
 80047a0:	e04f      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 80047a2:	4b2b      	ldr	r3, [pc, #172]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 80047a4:	689b      	ldr	r3, [r3, #8]
 80047a6:	f003 020c 	and.w	r2, r3, #12
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	685b      	ldr	r3, [r3, #4]
 80047ae:	009b      	lsls	r3, r3, #2
 80047b0:	429a      	cmp	r2, r3
 80047b2:	d1eb      	bne.n	800478c <HAL_RCC_ClockConfig+0xf8>
 80047b4:	4b25      	ldr	r3, [pc, #148]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80047b6:	681b      	ldr	r3, [r3, #0]
 80047b8:	f003 0307 	and.w	r3, r3, #7
 80047bc:	683a      	ldr	r2, [r7, #0]
 80047be:	429a      	cmp	r2, r3
 80047c0:	d20c      	bcs.n	80047dc <HAL_RCC_ClockConfig+0x148>
 80047c2:	4b22      	ldr	r3, [pc, #136]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80047c4:	683a      	ldr	r2, [r7, #0]
 80047c6:	b2d2      	uxtb	r2, r2
 80047c8:	701a      	strb	r2, [r3, #0]
 80047ca:	4b20      	ldr	r3, [pc, #128]	; (800484c <HAL_RCC_ClockConfig+0x1b8>)
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f003 0307 	and.w	r3, r3, #7
 80047d2:	683a      	ldr	r2, [r7, #0]
 80047d4:	429a      	cmp	r2, r3
 80047d6:	d001      	beq.n	80047dc <HAL_RCC_ClockConfig+0x148>
 80047d8:	2301      	movs	r3, #1
 80047da:	e032      	b.n	8004842 <HAL_RCC_ClockConfig+0x1ae>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	f003 0304 	and.w	r3, r3, #4
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	d008      	beq.n	80047fa <HAL_RCC_ClockConfig+0x166>
 80047e8:	4b19      	ldr	r3, [pc, #100]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 80047ea:	689b      	ldr	r3, [r3, #8]
 80047ec:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	68db      	ldr	r3, [r3, #12]
 80047f4:	4916      	ldr	r1, [pc, #88]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 80047f6:	4313      	orrs	r3, r2
 80047f8:	608b      	str	r3, [r1, #8]
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f003 0308 	and.w	r3, r3, #8
 8004802:	2b00      	cmp	r3, #0
 8004804:	d009      	beq.n	800481a <HAL_RCC_ClockConfig+0x186>
 8004806:	4b12      	ldr	r3, [pc, #72]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004808:	689b      	ldr	r3, [r3, #8]
 800480a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	691b      	ldr	r3, [r3, #16]
 8004812:	00db      	lsls	r3, r3, #3
 8004814:	490e      	ldr	r1, [pc, #56]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004816:	4313      	orrs	r3, r2
 8004818:	608b      	str	r3, [r1, #8]
 800481a:	f000 f821 	bl	8004860 <HAL_RCC_GetSysClockFreq>
 800481e:	4602      	mov	r2, r0
 8004820:	4b0b      	ldr	r3, [pc, #44]	; (8004850 <HAL_RCC_ClockConfig+0x1bc>)
 8004822:	689b      	ldr	r3, [r3, #8]
 8004824:	091b      	lsrs	r3, r3, #4
 8004826:	f003 030f 	and.w	r3, r3, #15
 800482a:	490a      	ldr	r1, [pc, #40]	; (8004854 <HAL_RCC_ClockConfig+0x1c0>)
 800482c:	5ccb      	ldrb	r3, [r1, r3]
 800482e:	fa22 f303 	lsr.w	r3, r2, r3
 8004832:	4a09      	ldr	r2, [pc, #36]	; (8004858 <HAL_RCC_ClockConfig+0x1c4>)
 8004834:	6013      	str	r3, [r2, #0]
 8004836:	4b09      	ldr	r3, [pc, #36]	; (800485c <HAL_RCC_ClockConfig+0x1c8>)
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	4618      	mov	r0, r3
 800483c:	f7fe f8f6 	bl	8002a2c <HAL_InitTick>
 8004840:	2300      	movs	r3, #0
 8004842:	4618      	mov	r0, r3
 8004844:	3710      	adds	r7, #16
 8004846:	46bd      	mov	sp, r7
 8004848:	bd80      	pop	{r7, pc}
 800484a:	bf00      	nop
 800484c:	40023c00 	.word	0x40023c00
 8004850:	40023800 	.word	0x40023800
 8004854:	0800777c 	.word	0x0800777c
 8004858:	20000090 	.word	0x20000090
 800485c:	20000094 	.word	0x20000094

08004860 <HAL_RCC_GetSysClockFreq>:
 8004860:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004864:	b094      	sub	sp, #80	; 0x50
 8004866:	af00      	add	r7, sp, #0
 8004868:	2300      	movs	r3, #0
 800486a:	647b      	str	r3, [r7, #68]	; 0x44
 800486c:	2300      	movs	r3, #0
 800486e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004870:	2300      	movs	r3, #0
 8004872:	643b      	str	r3, [r7, #64]	; 0x40
 8004874:	2300      	movs	r3, #0
 8004876:	64bb      	str	r3, [r7, #72]	; 0x48
 8004878:	4b79      	ldr	r3, [pc, #484]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 800487a:	689b      	ldr	r3, [r3, #8]
 800487c:	f003 030c 	and.w	r3, r3, #12
 8004880:	2b08      	cmp	r3, #8
 8004882:	d00d      	beq.n	80048a0 <HAL_RCC_GetSysClockFreq+0x40>
 8004884:	2b08      	cmp	r3, #8
 8004886:	f200 80e1 	bhi.w	8004a4c <HAL_RCC_GetSysClockFreq+0x1ec>
 800488a:	2b00      	cmp	r3, #0
 800488c:	d002      	beq.n	8004894 <HAL_RCC_GetSysClockFreq+0x34>
 800488e:	2b04      	cmp	r3, #4
 8004890:	d003      	beq.n	800489a <HAL_RCC_GetSysClockFreq+0x3a>
 8004892:	e0db      	b.n	8004a4c <HAL_RCC_GetSysClockFreq+0x1ec>
 8004894:	4b73      	ldr	r3, [pc, #460]	; (8004a64 <HAL_RCC_GetSysClockFreq+0x204>)
 8004896:	64bb      	str	r3, [r7, #72]	; 0x48
 8004898:	e0db      	b.n	8004a52 <HAL_RCC_GetSysClockFreq+0x1f2>
 800489a:	4b73      	ldr	r3, [pc, #460]	; (8004a68 <HAL_RCC_GetSysClockFreq+0x208>)
 800489c:	64bb      	str	r3, [r7, #72]	; 0x48
 800489e:	e0d8      	b.n	8004a52 <HAL_RCC_GetSysClockFreq+0x1f2>
 80048a0:	4b6f      	ldr	r3, [pc, #444]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 80048a2:	685b      	ldr	r3, [r3, #4]
 80048a4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80048a8:	647b      	str	r3, [r7, #68]	; 0x44
 80048aa:	4b6d      	ldr	r3, [pc, #436]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 80048ac:	685b      	ldr	r3, [r3, #4]
 80048ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d063      	beq.n	800497e <HAL_RCC_GetSysClockFreq+0x11e>
 80048b6:	4b6a      	ldr	r3, [pc, #424]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 80048b8:	685b      	ldr	r3, [r3, #4]
 80048ba:	099b      	lsrs	r3, r3, #6
 80048bc:	2200      	movs	r2, #0
 80048be:	63bb      	str	r3, [r7, #56]	; 0x38
 80048c0:	63fa      	str	r2, [r7, #60]	; 0x3c
 80048c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80048c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80048c8:	633b      	str	r3, [r7, #48]	; 0x30
 80048ca:	2300      	movs	r3, #0
 80048cc:	637b      	str	r3, [r7, #52]	; 0x34
 80048ce:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80048d2:	4622      	mov	r2, r4
 80048d4:	462b      	mov	r3, r5
 80048d6:	f04f 0000 	mov.w	r0, #0
 80048da:	f04f 0100 	mov.w	r1, #0
 80048de:	0159      	lsls	r1, r3, #5
 80048e0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80048e4:	0150      	lsls	r0, r2, #5
 80048e6:	4602      	mov	r2, r0
 80048e8:	460b      	mov	r3, r1
 80048ea:	4621      	mov	r1, r4
 80048ec:	1a51      	subs	r1, r2, r1
 80048ee:	6139      	str	r1, [r7, #16]
 80048f0:	4629      	mov	r1, r5
 80048f2:	eb63 0301 	sbc.w	r3, r3, r1
 80048f6:	617b      	str	r3, [r7, #20]
 80048f8:	f04f 0200 	mov.w	r2, #0
 80048fc:	f04f 0300 	mov.w	r3, #0
 8004900:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004904:	4659      	mov	r1, fp
 8004906:	018b      	lsls	r3, r1, #6
 8004908:	4651      	mov	r1, sl
 800490a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800490e:	4651      	mov	r1, sl
 8004910:	018a      	lsls	r2, r1, #6
 8004912:	4651      	mov	r1, sl
 8004914:	ebb2 0801 	subs.w	r8, r2, r1
 8004918:	4659      	mov	r1, fp
 800491a:	eb63 0901 	sbc.w	r9, r3, r1
 800491e:	f04f 0200 	mov.w	r2, #0
 8004922:	f04f 0300 	mov.w	r3, #0
 8004926:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800492a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800492e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004932:	4690      	mov	r8, r2
 8004934:	4699      	mov	r9, r3
 8004936:	4623      	mov	r3, r4
 8004938:	eb18 0303 	adds.w	r3, r8, r3
 800493c:	60bb      	str	r3, [r7, #8]
 800493e:	462b      	mov	r3, r5
 8004940:	eb49 0303 	adc.w	r3, r9, r3
 8004944:	60fb      	str	r3, [r7, #12]
 8004946:	f04f 0200 	mov.w	r2, #0
 800494a:	f04f 0300 	mov.w	r3, #0
 800494e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8004952:	4629      	mov	r1, r5
 8004954:	024b      	lsls	r3, r1, #9
 8004956:	4621      	mov	r1, r4
 8004958:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800495c:	4621      	mov	r1, r4
 800495e:	024a      	lsls	r2, r1, #9
 8004960:	4610      	mov	r0, r2
 8004962:	4619      	mov	r1, r3
 8004964:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004966:	2200      	movs	r2, #0
 8004968:	62bb      	str	r3, [r7, #40]	; 0x28
 800496a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800496c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8004970:	f7fc f912 	bl	8000b98 <__aeabi_uldivmod>
 8004974:	4602      	mov	r2, r0
 8004976:	460b      	mov	r3, r1
 8004978:	4613      	mov	r3, r2
 800497a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800497c:	e058      	b.n	8004a30 <HAL_RCC_GetSysClockFreq+0x1d0>
 800497e:	4b38      	ldr	r3, [pc, #224]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 8004980:	685b      	ldr	r3, [r3, #4]
 8004982:	099b      	lsrs	r3, r3, #6
 8004984:	2200      	movs	r2, #0
 8004986:	4618      	mov	r0, r3
 8004988:	4611      	mov	r1, r2
 800498a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800498e:	623b      	str	r3, [r7, #32]
 8004990:	2300      	movs	r3, #0
 8004992:	627b      	str	r3, [r7, #36]	; 0x24
 8004994:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8004998:	4642      	mov	r2, r8
 800499a:	464b      	mov	r3, r9
 800499c:	f04f 0000 	mov.w	r0, #0
 80049a0:	f04f 0100 	mov.w	r1, #0
 80049a4:	0159      	lsls	r1, r3, #5
 80049a6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049aa:	0150      	lsls	r0, r2, #5
 80049ac:	4602      	mov	r2, r0
 80049ae:	460b      	mov	r3, r1
 80049b0:	4641      	mov	r1, r8
 80049b2:	ebb2 0a01 	subs.w	sl, r2, r1
 80049b6:	4649      	mov	r1, r9
 80049b8:	eb63 0b01 	sbc.w	fp, r3, r1
 80049bc:	f04f 0200 	mov.w	r2, #0
 80049c0:	f04f 0300 	mov.w	r3, #0
 80049c4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80049c8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80049cc:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80049d0:	ebb2 040a 	subs.w	r4, r2, sl
 80049d4:	eb63 050b 	sbc.w	r5, r3, fp
 80049d8:	f04f 0200 	mov.w	r2, #0
 80049dc:	f04f 0300 	mov.w	r3, #0
 80049e0:	00eb      	lsls	r3, r5, #3
 80049e2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80049e6:	00e2      	lsls	r2, r4, #3
 80049e8:	4614      	mov	r4, r2
 80049ea:	461d      	mov	r5, r3
 80049ec:	4643      	mov	r3, r8
 80049ee:	18e3      	adds	r3, r4, r3
 80049f0:	603b      	str	r3, [r7, #0]
 80049f2:	464b      	mov	r3, r9
 80049f4:	eb45 0303 	adc.w	r3, r5, r3
 80049f8:	607b      	str	r3, [r7, #4]
 80049fa:	f04f 0200 	mov.w	r2, #0
 80049fe:	f04f 0300 	mov.w	r3, #0
 8004a02:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004a06:	4629      	mov	r1, r5
 8004a08:	028b      	lsls	r3, r1, #10
 8004a0a:	4621      	mov	r1, r4
 8004a0c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004a10:	4621      	mov	r1, r4
 8004a12:	028a      	lsls	r2, r1, #10
 8004a14:	4610      	mov	r0, r2
 8004a16:	4619      	mov	r1, r3
 8004a18:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004a1a:	2200      	movs	r2, #0
 8004a1c:	61bb      	str	r3, [r7, #24]
 8004a1e:	61fa      	str	r2, [r7, #28]
 8004a20:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a24:	f7fc f8b8 	bl	8000b98 <__aeabi_uldivmod>
 8004a28:	4602      	mov	r2, r0
 8004a2a:	460b      	mov	r3, r1
 8004a2c:	4613      	mov	r3, r2
 8004a2e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004a30:	4b0b      	ldr	r3, [pc, #44]	; (8004a60 <HAL_RCC_GetSysClockFreq+0x200>)
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	0c1b      	lsrs	r3, r3, #16
 8004a36:	f003 0303 	and.w	r3, r3, #3
 8004a3a:	3301      	adds	r3, #1
 8004a3c:	005b      	lsls	r3, r3, #1
 8004a3e:	643b      	str	r3, [r7, #64]	; 0x40
 8004a40:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004a42:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004a44:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a48:	64bb      	str	r3, [r7, #72]	; 0x48
 8004a4a:	e002      	b.n	8004a52 <HAL_RCC_GetSysClockFreq+0x1f2>
 8004a4c:	4b05      	ldr	r3, [pc, #20]	; (8004a64 <HAL_RCC_GetSysClockFreq+0x204>)
 8004a4e:	64bb      	str	r3, [r7, #72]	; 0x48
 8004a50:	bf00      	nop
 8004a52:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004a54:	4618      	mov	r0, r3
 8004a56:	3750      	adds	r7, #80	; 0x50
 8004a58:	46bd      	mov	sp, r7
 8004a5a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004a5e:	bf00      	nop
 8004a60:	40023800 	.word	0x40023800
 8004a64:	00f42400 	.word	0x00f42400
 8004a68:	007a1200 	.word	0x007a1200

08004a6c <HAL_RCC_GetHCLKFreq>:
 8004a6c:	b480      	push	{r7}
 8004a6e:	af00      	add	r7, sp, #0
 8004a70:	4b03      	ldr	r3, [pc, #12]	; (8004a80 <HAL_RCC_GetHCLKFreq+0x14>)
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	4618      	mov	r0, r3
 8004a76:	46bd      	mov	sp, r7
 8004a78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a7c:	4770      	bx	lr
 8004a7e:	bf00      	nop
 8004a80:	20000090 	.word	0x20000090

08004a84 <HAL_RCC_GetPCLK1Freq>:
 8004a84:	b580      	push	{r7, lr}
 8004a86:	af00      	add	r7, sp, #0
 8004a88:	f7ff fff0 	bl	8004a6c <HAL_RCC_GetHCLKFreq>
 8004a8c:	4602      	mov	r2, r0
 8004a8e:	4b05      	ldr	r3, [pc, #20]	; (8004aa4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004a90:	689b      	ldr	r3, [r3, #8]
 8004a92:	0a9b      	lsrs	r3, r3, #10
 8004a94:	f003 0307 	and.w	r3, r3, #7
 8004a98:	4903      	ldr	r1, [pc, #12]	; (8004aa8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004a9a:	5ccb      	ldrb	r3, [r1, r3]
 8004a9c:	fa22 f303 	lsr.w	r3, r2, r3
 8004aa0:	4618      	mov	r0, r3
 8004aa2:	bd80      	pop	{r7, pc}
 8004aa4:	40023800 	.word	0x40023800
 8004aa8:	0800778c 	.word	0x0800778c

08004aac <HAL_RCC_GetClockConfig>:
 8004aac:	b480      	push	{r7}
 8004aae:	b083      	sub	sp, #12
 8004ab0:	af00      	add	r7, sp, #0
 8004ab2:	6078      	str	r0, [r7, #4]
 8004ab4:	6039      	str	r1, [r7, #0]
 8004ab6:	687b      	ldr	r3, [r7, #4]
 8004ab8:	220f      	movs	r2, #15
 8004aba:	601a      	str	r2, [r3, #0]
 8004abc:	4b12      	ldr	r3, [pc, #72]	; (8004b08 <HAL_RCC_GetClockConfig+0x5c>)
 8004abe:	689b      	ldr	r3, [r3, #8]
 8004ac0:	f003 0203 	and.w	r2, r3, #3
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	605a      	str	r2, [r3, #4]
 8004ac8:	4b0f      	ldr	r3, [pc, #60]	; (8004b08 <HAL_RCC_GetClockConfig+0x5c>)
 8004aca:	689b      	ldr	r3, [r3, #8]
 8004acc:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	609a      	str	r2, [r3, #8]
 8004ad4:	4b0c      	ldr	r3, [pc, #48]	; (8004b08 <HAL_RCC_GetClockConfig+0x5c>)
 8004ad6:	689b      	ldr	r3, [r3, #8]
 8004ad8:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	60da      	str	r2, [r3, #12]
 8004ae0:	4b09      	ldr	r3, [pc, #36]	; (8004b08 <HAL_RCC_GetClockConfig+0x5c>)
 8004ae2:	689b      	ldr	r3, [r3, #8]
 8004ae4:	08db      	lsrs	r3, r3, #3
 8004ae6:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	611a      	str	r2, [r3, #16]
 8004aee:	4b07      	ldr	r3, [pc, #28]	; (8004b0c <HAL_RCC_GetClockConfig+0x60>)
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	f003 0207 	and.w	r2, r3, #7
 8004af6:	683b      	ldr	r3, [r7, #0]
 8004af8:	601a      	str	r2, [r3, #0]
 8004afa:	bf00      	nop
 8004afc:	370c      	adds	r7, #12
 8004afe:	46bd      	mov	sp, r7
 8004b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b04:	4770      	bx	lr
 8004b06:	bf00      	nop
 8004b08:	40023800 	.word	0x40023800
 8004b0c:	40023c00 	.word	0x40023c00

08004b10 <HAL_TIM_Base_Init>:
 8004b10:	b580      	push	{r7, lr}
 8004b12:	b082      	sub	sp, #8
 8004b14:	af00      	add	r7, sp, #0
 8004b16:	6078      	str	r0, [r7, #4]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d101      	bne.n	8004b22 <HAL_TIM_Base_Init+0x12>
 8004b1e:	2301      	movs	r3, #1
 8004b20:	e041      	b.n	8004ba6 <HAL_TIM_Base_Init+0x96>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004b28:	b2db      	uxtb	r3, r3
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d106      	bne.n	8004b3c <HAL_TIM_Base_Init+0x2c>
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	2200      	movs	r2, #0
 8004b32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b36:	6878      	ldr	r0, [r7, #4]
 8004b38:	f000 f839 	bl	8004bae <HAL_TIM_Base_MspInit>
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2202      	movs	r2, #2
 8004b40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	681a      	ldr	r2, [r3, #0]
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	3304      	adds	r3, #4
 8004b4c:	4619      	mov	r1, r3
 8004b4e:	4610      	mov	r0, r2
 8004b50:	f000 fcce 	bl	80054f0 <TIM_Base_SetConfig>
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	2201      	movs	r2, #1
 8004b58:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	2201      	movs	r2, #1
 8004b60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	2201      	movs	r2, #1
 8004b68:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2201      	movs	r2, #1
 8004b70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2201      	movs	r2, #1
 8004b78:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	2201      	movs	r2, #1
 8004b80:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	2201      	movs	r2, #1
 8004b88:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	2201      	movs	r2, #1
 8004b90:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	2201      	movs	r2, #1
 8004b98:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	2201      	movs	r2, #1
 8004ba0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ba4:	2300      	movs	r3, #0
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	3708      	adds	r7, #8
 8004baa:	46bd      	mov	sp, r7
 8004bac:	bd80      	pop	{r7, pc}

08004bae <HAL_TIM_Base_MspInit>:
 8004bae:	b480      	push	{r7}
 8004bb0:	b083      	sub	sp, #12
 8004bb2:	af00      	add	r7, sp, #0
 8004bb4:	6078      	str	r0, [r7, #4]
 8004bb6:	bf00      	nop
 8004bb8:	370c      	adds	r7, #12
 8004bba:	46bd      	mov	sp, r7
 8004bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc0:	4770      	bx	lr
	...

08004bc4 <HAL_TIM_Base_Start_IT>:
 8004bc4:	b480      	push	{r7}
 8004bc6:	b085      	sub	sp, #20
 8004bc8:	af00      	add	r7, sp, #0
 8004bca:	6078      	str	r0, [r7, #4]
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004bd2:	b2db      	uxtb	r3, r3
 8004bd4:	2b01      	cmp	r3, #1
 8004bd6:	d001      	beq.n	8004bdc <HAL_TIM_Base_Start_IT+0x18>
 8004bd8:	2301      	movs	r3, #1
 8004bda:	e04e      	b.n	8004c7a <HAL_TIM_Base_Start_IT+0xb6>
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	2202      	movs	r2, #2
 8004be0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	68da      	ldr	r2, [r3, #12]
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	f042 0201 	orr.w	r2, r2, #1
 8004bf2:	60da      	str	r2, [r3, #12]
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	4a23      	ldr	r2, [pc, #140]	; (8004c88 <HAL_TIM_Base_Start_IT+0xc4>)
 8004bfa:	4293      	cmp	r3, r2
 8004bfc:	d022      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c06:	d01d      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	4a1f      	ldr	r2, [pc, #124]	; (8004c8c <HAL_TIM_Base_Start_IT+0xc8>)
 8004c0e:	4293      	cmp	r3, r2
 8004c10:	d018      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c12:	687b      	ldr	r3, [r7, #4]
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	4a1e      	ldr	r2, [pc, #120]	; (8004c90 <HAL_TIM_Base_Start_IT+0xcc>)
 8004c18:	4293      	cmp	r3, r2
 8004c1a:	d013      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	4a1c      	ldr	r2, [pc, #112]	; (8004c94 <HAL_TIM_Base_Start_IT+0xd0>)
 8004c22:	4293      	cmp	r3, r2
 8004c24:	d00e      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	4a1b      	ldr	r2, [pc, #108]	; (8004c98 <HAL_TIM_Base_Start_IT+0xd4>)
 8004c2c:	4293      	cmp	r3, r2
 8004c2e:	d009      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	4a19      	ldr	r2, [pc, #100]	; (8004c9c <HAL_TIM_Base_Start_IT+0xd8>)
 8004c36:	4293      	cmp	r3, r2
 8004c38:	d004      	beq.n	8004c44 <HAL_TIM_Base_Start_IT+0x80>
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4a18      	ldr	r2, [pc, #96]	; (8004ca0 <HAL_TIM_Base_Start_IT+0xdc>)
 8004c40:	4293      	cmp	r3, r2
 8004c42:	d111      	bne.n	8004c68 <HAL_TIM_Base_Start_IT+0xa4>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	689b      	ldr	r3, [r3, #8]
 8004c4a:	f003 0307 	and.w	r3, r3, #7
 8004c4e:	60fb      	str	r3, [r7, #12]
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	2b06      	cmp	r3, #6
 8004c54:	d010      	beq.n	8004c78 <HAL_TIM_Base_Start_IT+0xb4>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	681b      	ldr	r3, [r3, #0]
 8004c5a:	681a      	ldr	r2, [r3, #0]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	f042 0201 	orr.w	r2, r2, #1
 8004c64:	601a      	str	r2, [r3, #0]
 8004c66:	e007      	b.n	8004c78 <HAL_TIM_Base_Start_IT+0xb4>
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	681a      	ldr	r2, [r3, #0]
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	f042 0201 	orr.w	r2, r2, #1
 8004c76:	601a      	str	r2, [r3, #0]
 8004c78:	2300      	movs	r3, #0
 8004c7a:	4618      	mov	r0, r3
 8004c7c:	3714      	adds	r7, #20
 8004c7e:	46bd      	mov	sp, r7
 8004c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c84:	4770      	bx	lr
 8004c86:	bf00      	nop
 8004c88:	40010000 	.word	0x40010000
 8004c8c:	40000400 	.word	0x40000400
 8004c90:	40000800 	.word	0x40000800
 8004c94:	40000c00 	.word	0x40000c00
 8004c98:	40010400 	.word	0x40010400
 8004c9c:	40014000 	.word	0x40014000
 8004ca0:	40001800 	.word	0x40001800

08004ca4 <HAL_TIM_PWM_Init>:
 8004ca4:	b580      	push	{r7, lr}
 8004ca6:	b082      	sub	sp, #8
 8004ca8:	af00      	add	r7, sp, #0
 8004caa:	6078      	str	r0, [r7, #4]
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	d101      	bne.n	8004cb6 <HAL_TIM_PWM_Init+0x12>
 8004cb2:	2301      	movs	r3, #1
 8004cb4:	e041      	b.n	8004d3a <HAL_TIM_PWM_Init+0x96>
 8004cb6:	687b      	ldr	r3, [r7, #4]
 8004cb8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004cbc:	b2db      	uxtb	r3, r3
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d106      	bne.n	8004cd0 <HAL_TIM_PWM_Init+0x2c>
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	2200      	movs	r2, #0
 8004cc6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004cca:	6878      	ldr	r0, [r7, #4]
 8004ccc:	f7fd fe32 	bl	8002934 <HAL_TIM_PWM_MspInit>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	2202      	movs	r2, #2
 8004cd4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681a      	ldr	r2, [r3, #0]
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	3304      	adds	r3, #4
 8004ce0:	4619      	mov	r1, r3
 8004ce2:	4610      	mov	r0, r2
 8004ce4:	f000 fc04 	bl	80054f0 <TIM_Base_SetConfig>
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	2201      	movs	r2, #1
 8004cec:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	2201      	movs	r2, #1
 8004cf4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	2201      	movs	r2, #1
 8004cfc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	2201      	movs	r2, #1
 8004d04:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	2201      	movs	r2, #1
 8004d0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2201      	movs	r2, #1
 8004d14:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	2201      	movs	r2, #1
 8004d1c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	2201      	movs	r2, #1
 8004d24:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	2201      	movs	r2, #1
 8004d2c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	2201      	movs	r2, #1
 8004d34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d38:	2300      	movs	r3, #0
 8004d3a:	4618      	mov	r0, r3
 8004d3c:	3708      	adds	r7, #8
 8004d3e:	46bd      	mov	sp, r7
 8004d40:	bd80      	pop	{r7, pc}
	...

08004d44 <HAL_TIM_PWM_Start>:
 8004d44:	b580      	push	{r7, lr}
 8004d46:	b084      	sub	sp, #16
 8004d48:	af00      	add	r7, sp, #0
 8004d4a:	6078      	str	r0, [r7, #4]
 8004d4c:	6039      	str	r1, [r7, #0]
 8004d4e:	683b      	ldr	r3, [r7, #0]
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	d109      	bne.n	8004d68 <HAL_TIM_PWM_Start+0x24>
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004d5a:	b2db      	uxtb	r3, r3
 8004d5c:	2b01      	cmp	r3, #1
 8004d5e:	bf14      	ite	ne
 8004d60:	2301      	movne	r3, #1
 8004d62:	2300      	moveq	r3, #0
 8004d64:	b2db      	uxtb	r3, r3
 8004d66:	e022      	b.n	8004dae <HAL_TIM_PWM_Start+0x6a>
 8004d68:	683b      	ldr	r3, [r7, #0]
 8004d6a:	2b04      	cmp	r3, #4
 8004d6c:	d109      	bne.n	8004d82 <HAL_TIM_PWM_Start+0x3e>
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	2b01      	cmp	r3, #1
 8004d78:	bf14      	ite	ne
 8004d7a:	2301      	movne	r3, #1
 8004d7c:	2300      	moveq	r3, #0
 8004d7e:	b2db      	uxtb	r3, r3
 8004d80:	e015      	b.n	8004dae <HAL_TIM_PWM_Start+0x6a>
 8004d82:	683b      	ldr	r3, [r7, #0]
 8004d84:	2b08      	cmp	r3, #8
 8004d86:	d109      	bne.n	8004d9c <HAL_TIM_PWM_Start+0x58>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8004d8e:	b2db      	uxtb	r3, r3
 8004d90:	2b01      	cmp	r3, #1
 8004d92:	bf14      	ite	ne
 8004d94:	2301      	movne	r3, #1
 8004d96:	2300      	moveq	r3, #0
 8004d98:	b2db      	uxtb	r3, r3
 8004d9a:	e008      	b.n	8004dae <HAL_TIM_PWM_Start+0x6a>
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004da2:	b2db      	uxtb	r3, r3
 8004da4:	2b01      	cmp	r3, #1
 8004da6:	bf14      	ite	ne
 8004da8:	2301      	movne	r3, #1
 8004daa:	2300      	moveq	r3, #0
 8004dac:	b2db      	uxtb	r3, r3
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d001      	beq.n	8004db6 <HAL_TIM_PWM_Start+0x72>
 8004db2:	2301      	movs	r3, #1
 8004db4:	e07c      	b.n	8004eb0 <HAL_TIM_PWM_Start+0x16c>
 8004db6:	683b      	ldr	r3, [r7, #0]
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d104      	bne.n	8004dc6 <HAL_TIM_PWM_Start+0x82>
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	2202      	movs	r2, #2
 8004dc0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004dc4:	e013      	b.n	8004dee <HAL_TIM_PWM_Start+0xaa>
 8004dc6:	683b      	ldr	r3, [r7, #0]
 8004dc8:	2b04      	cmp	r3, #4
 8004dca:	d104      	bne.n	8004dd6 <HAL_TIM_PWM_Start+0x92>
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2202      	movs	r2, #2
 8004dd0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004dd4:	e00b      	b.n	8004dee <HAL_TIM_PWM_Start+0xaa>
 8004dd6:	683b      	ldr	r3, [r7, #0]
 8004dd8:	2b08      	cmp	r3, #8
 8004dda:	d104      	bne.n	8004de6 <HAL_TIM_PWM_Start+0xa2>
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	2202      	movs	r2, #2
 8004de0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8004de4:	e003      	b.n	8004dee <HAL_TIM_PWM_Start+0xaa>
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	2202      	movs	r2, #2
 8004dea:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	681b      	ldr	r3, [r3, #0]
 8004df2:	2201      	movs	r2, #1
 8004df4:	6839      	ldr	r1, [r7, #0]
 8004df6:	4618      	mov	r0, r3
 8004df8:	f000 fdd6 	bl	80059a8 <TIM_CCxChannelCmd>
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	4a2d      	ldr	r2, [pc, #180]	; (8004eb8 <HAL_TIM_PWM_Start+0x174>)
 8004e02:	4293      	cmp	r3, r2
 8004e04:	d004      	beq.n	8004e10 <HAL_TIM_PWM_Start+0xcc>
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	4a2c      	ldr	r2, [pc, #176]	; (8004ebc <HAL_TIM_PWM_Start+0x178>)
 8004e0c:	4293      	cmp	r3, r2
 8004e0e:	d101      	bne.n	8004e14 <HAL_TIM_PWM_Start+0xd0>
 8004e10:	2301      	movs	r3, #1
 8004e12:	e000      	b.n	8004e16 <HAL_TIM_PWM_Start+0xd2>
 8004e14:	2300      	movs	r3, #0
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d007      	beq.n	8004e2a <HAL_TIM_PWM_Start+0xe6>
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004e28:	645a      	str	r2, [r3, #68]	; 0x44
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	4a22      	ldr	r2, [pc, #136]	; (8004eb8 <HAL_TIM_PWM_Start+0x174>)
 8004e30:	4293      	cmp	r3, r2
 8004e32:	d022      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004e3c:	d01d      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	681b      	ldr	r3, [r3, #0]
 8004e42:	4a1f      	ldr	r2, [pc, #124]	; (8004ec0 <HAL_TIM_PWM_Start+0x17c>)
 8004e44:	4293      	cmp	r3, r2
 8004e46:	d018      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	4a1d      	ldr	r2, [pc, #116]	; (8004ec4 <HAL_TIM_PWM_Start+0x180>)
 8004e4e:	4293      	cmp	r3, r2
 8004e50:	d013      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	4a1c      	ldr	r2, [pc, #112]	; (8004ec8 <HAL_TIM_PWM_Start+0x184>)
 8004e58:	4293      	cmp	r3, r2
 8004e5a:	d00e      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	681b      	ldr	r3, [r3, #0]
 8004e60:	4a16      	ldr	r2, [pc, #88]	; (8004ebc <HAL_TIM_PWM_Start+0x178>)
 8004e62:	4293      	cmp	r3, r2
 8004e64:	d009      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	4a18      	ldr	r2, [pc, #96]	; (8004ecc <HAL_TIM_PWM_Start+0x188>)
 8004e6c:	4293      	cmp	r3, r2
 8004e6e:	d004      	beq.n	8004e7a <HAL_TIM_PWM_Start+0x136>
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	4a16      	ldr	r2, [pc, #88]	; (8004ed0 <HAL_TIM_PWM_Start+0x18c>)
 8004e76:	4293      	cmp	r3, r2
 8004e78:	d111      	bne.n	8004e9e <HAL_TIM_PWM_Start+0x15a>
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	689b      	ldr	r3, [r3, #8]
 8004e80:	f003 0307 	and.w	r3, r3, #7
 8004e84:	60fb      	str	r3, [r7, #12]
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	2b06      	cmp	r3, #6
 8004e8a:	d010      	beq.n	8004eae <HAL_TIM_PWM_Start+0x16a>
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	681a      	ldr	r2, [r3, #0]
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	f042 0201 	orr.w	r2, r2, #1
 8004e9a:	601a      	str	r2, [r3, #0]
 8004e9c:	e007      	b.n	8004eae <HAL_TIM_PWM_Start+0x16a>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	681a      	ldr	r2, [r3, #0]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	f042 0201 	orr.w	r2, r2, #1
 8004eac:	601a      	str	r2, [r3, #0]
 8004eae:	2300      	movs	r3, #0
 8004eb0:	4618      	mov	r0, r3
 8004eb2:	3710      	adds	r7, #16
 8004eb4:	46bd      	mov	sp, r7
 8004eb6:	bd80      	pop	{r7, pc}
 8004eb8:	40010000 	.word	0x40010000
 8004ebc:	40010400 	.word	0x40010400
 8004ec0:	40000400 	.word	0x40000400
 8004ec4:	40000800 	.word	0x40000800
 8004ec8:	40000c00 	.word	0x40000c00
 8004ecc:	40014000 	.word	0x40014000
 8004ed0:	40001800 	.word	0x40001800

08004ed4 <HAL_TIM_Encoder_Init>:
 8004ed4:	b580      	push	{r7, lr}
 8004ed6:	b086      	sub	sp, #24
 8004ed8:	af00      	add	r7, sp, #0
 8004eda:	6078      	str	r0, [r7, #4]
 8004edc:	6039      	str	r1, [r7, #0]
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d101      	bne.n	8004ee8 <HAL_TIM_Encoder_Init+0x14>
 8004ee4:	2301      	movs	r3, #1
 8004ee6:	e097      	b.n	8005018 <HAL_TIM_Encoder_Init+0x144>
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004eee:	b2db      	uxtb	r3, r3
 8004ef0:	2b00      	cmp	r3, #0
 8004ef2:	d106      	bne.n	8004f02 <HAL_TIM_Encoder_Init+0x2e>
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	2200      	movs	r2, #0
 8004ef8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004efc:	6878      	ldr	r0, [r7, #4]
 8004efe:	f7fd fc9d 	bl	800283c <HAL_TIM_Encoder_MspInit>
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	2202      	movs	r2, #2
 8004f06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f0a:	687b      	ldr	r3, [r7, #4]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	689b      	ldr	r3, [r3, #8]
 8004f10:	687a      	ldr	r2, [r7, #4]
 8004f12:	6812      	ldr	r2, [r2, #0]
 8004f14:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004f18:	f023 0307 	bic.w	r3, r3, #7
 8004f1c:	6093      	str	r3, [r2, #8]
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681a      	ldr	r2, [r3, #0]
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	3304      	adds	r3, #4
 8004f26:	4619      	mov	r1, r3
 8004f28:	4610      	mov	r0, r2
 8004f2a:	f000 fae1 	bl	80054f0 <TIM_Base_SetConfig>
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	689b      	ldr	r3, [r3, #8]
 8004f34:	617b      	str	r3, [r7, #20]
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	681b      	ldr	r3, [r3, #0]
 8004f3a:	699b      	ldr	r3, [r3, #24]
 8004f3c:	613b      	str	r3, [r7, #16]
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	6a1b      	ldr	r3, [r3, #32]
 8004f44:	60fb      	str	r3, [r7, #12]
 8004f46:	683b      	ldr	r3, [r7, #0]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	697a      	ldr	r2, [r7, #20]
 8004f4c:	4313      	orrs	r3, r2
 8004f4e:	617b      	str	r3, [r7, #20]
 8004f50:	693b      	ldr	r3, [r7, #16]
 8004f52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004f56:	f023 0303 	bic.w	r3, r3, #3
 8004f5a:	613b      	str	r3, [r7, #16]
 8004f5c:	683b      	ldr	r3, [r7, #0]
 8004f5e:	689a      	ldr	r2, [r3, #8]
 8004f60:	683b      	ldr	r3, [r7, #0]
 8004f62:	699b      	ldr	r3, [r3, #24]
 8004f64:	021b      	lsls	r3, r3, #8
 8004f66:	4313      	orrs	r3, r2
 8004f68:	693a      	ldr	r2, [r7, #16]
 8004f6a:	4313      	orrs	r3, r2
 8004f6c:	613b      	str	r3, [r7, #16]
 8004f6e:	693b      	ldr	r3, [r7, #16]
 8004f70:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8004f74:	f023 030c 	bic.w	r3, r3, #12
 8004f78:	613b      	str	r3, [r7, #16]
 8004f7a:	693b      	ldr	r3, [r7, #16]
 8004f7c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004f80:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004f84:	613b      	str	r3, [r7, #16]
 8004f86:	683b      	ldr	r3, [r7, #0]
 8004f88:	68da      	ldr	r2, [r3, #12]
 8004f8a:	683b      	ldr	r3, [r7, #0]
 8004f8c:	69db      	ldr	r3, [r3, #28]
 8004f8e:	021b      	lsls	r3, r3, #8
 8004f90:	4313      	orrs	r3, r2
 8004f92:	693a      	ldr	r2, [r7, #16]
 8004f94:	4313      	orrs	r3, r2
 8004f96:	613b      	str	r3, [r7, #16]
 8004f98:	683b      	ldr	r3, [r7, #0]
 8004f9a:	691b      	ldr	r3, [r3, #16]
 8004f9c:	011a      	lsls	r2, r3, #4
 8004f9e:	683b      	ldr	r3, [r7, #0]
 8004fa0:	6a1b      	ldr	r3, [r3, #32]
 8004fa2:	031b      	lsls	r3, r3, #12
 8004fa4:	4313      	orrs	r3, r2
 8004fa6:	693a      	ldr	r2, [r7, #16]
 8004fa8:	4313      	orrs	r3, r2
 8004faa:	613b      	str	r3, [r7, #16]
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8004fb2:	60fb      	str	r3, [r7, #12]
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8004fba:	60fb      	str	r3, [r7, #12]
 8004fbc:	683b      	ldr	r3, [r7, #0]
 8004fbe:	685a      	ldr	r2, [r3, #4]
 8004fc0:	683b      	ldr	r3, [r7, #0]
 8004fc2:	695b      	ldr	r3, [r3, #20]
 8004fc4:	011b      	lsls	r3, r3, #4
 8004fc6:	4313      	orrs	r3, r2
 8004fc8:	68fa      	ldr	r2, [r7, #12]
 8004fca:	4313      	orrs	r3, r2
 8004fcc:	60fb      	str	r3, [r7, #12]
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	697a      	ldr	r2, [r7, #20]
 8004fd4:	609a      	str	r2, [r3, #8]
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	693a      	ldr	r2, [r7, #16]
 8004fdc:	619a      	str	r2, [r3, #24]
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	68fa      	ldr	r2, [r7, #12]
 8004fe4:	621a      	str	r2, [r3, #32]
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	2201      	movs	r2, #1
 8004fea:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	2201      	movs	r2, #1
 8004ff2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	2201      	movs	r2, #1
 8004ffa:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	2201      	movs	r2, #1
 8005002:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	2201      	movs	r2, #1
 800500a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	2201      	movs	r2, #1
 8005012:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005016:	2300      	movs	r3, #0
 8005018:	4618      	mov	r0, r3
 800501a:	3718      	adds	r7, #24
 800501c:	46bd      	mov	sp, r7
 800501e:	bd80      	pop	{r7, pc}

08005020 <HAL_TIM_Encoder_Start>:
 8005020:	b580      	push	{r7, lr}
 8005022:	b084      	sub	sp, #16
 8005024:	af00      	add	r7, sp, #0
 8005026:	6078      	str	r0, [r7, #4]
 8005028:	6039      	str	r1, [r7, #0]
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005030:	73fb      	strb	r3, [r7, #15]
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005038:	73bb      	strb	r3, [r7, #14]
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005040:	737b      	strb	r3, [r7, #13]
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8005048:	733b      	strb	r3, [r7, #12]
 800504a:	683b      	ldr	r3, [r7, #0]
 800504c:	2b00      	cmp	r3, #0
 800504e:	d110      	bne.n	8005072 <HAL_TIM_Encoder_Start+0x52>
 8005050:	7bfb      	ldrb	r3, [r7, #15]
 8005052:	2b01      	cmp	r3, #1
 8005054:	d102      	bne.n	800505c <HAL_TIM_Encoder_Start+0x3c>
 8005056:	7b7b      	ldrb	r3, [r7, #13]
 8005058:	2b01      	cmp	r3, #1
 800505a:	d001      	beq.n	8005060 <HAL_TIM_Encoder_Start+0x40>
 800505c:	2301      	movs	r3, #1
 800505e:	e069      	b.n	8005134 <HAL_TIM_Encoder_Start+0x114>
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	2202      	movs	r2, #2
 8005064:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	2202      	movs	r2, #2
 800506c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005070:	e031      	b.n	80050d6 <HAL_TIM_Encoder_Start+0xb6>
 8005072:	683b      	ldr	r3, [r7, #0]
 8005074:	2b04      	cmp	r3, #4
 8005076:	d110      	bne.n	800509a <HAL_TIM_Encoder_Start+0x7a>
 8005078:	7bbb      	ldrb	r3, [r7, #14]
 800507a:	2b01      	cmp	r3, #1
 800507c:	d102      	bne.n	8005084 <HAL_TIM_Encoder_Start+0x64>
 800507e:	7b3b      	ldrb	r3, [r7, #12]
 8005080:	2b01      	cmp	r3, #1
 8005082:	d001      	beq.n	8005088 <HAL_TIM_Encoder_Start+0x68>
 8005084:	2301      	movs	r3, #1
 8005086:	e055      	b.n	8005134 <HAL_TIM_Encoder_Start+0x114>
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	2202      	movs	r2, #2
 800508c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	2202      	movs	r2, #2
 8005094:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005098:	e01d      	b.n	80050d6 <HAL_TIM_Encoder_Start+0xb6>
 800509a:	7bfb      	ldrb	r3, [r7, #15]
 800509c:	2b01      	cmp	r3, #1
 800509e:	d108      	bne.n	80050b2 <HAL_TIM_Encoder_Start+0x92>
 80050a0:	7bbb      	ldrb	r3, [r7, #14]
 80050a2:	2b01      	cmp	r3, #1
 80050a4:	d105      	bne.n	80050b2 <HAL_TIM_Encoder_Start+0x92>
 80050a6:	7b7b      	ldrb	r3, [r7, #13]
 80050a8:	2b01      	cmp	r3, #1
 80050aa:	d102      	bne.n	80050b2 <HAL_TIM_Encoder_Start+0x92>
 80050ac:	7b3b      	ldrb	r3, [r7, #12]
 80050ae:	2b01      	cmp	r3, #1
 80050b0:	d001      	beq.n	80050b6 <HAL_TIM_Encoder_Start+0x96>
 80050b2:	2301      	movs	r3, #1
 80050b4:	e03e      	b.n	8005134 <HAL_TIM_Encoder_Start+0x114>
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	2202      	movs	r2, #2
 80050ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	2202      	movs	r2, #2
 80050c2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	2202      	movs	r2, #2
 80050ca:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	2202      	movs	r2, #2
 80050d2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80050d6:	683b      	ldr	r3, [r7, #0]
 80050d8:	2b00      	cmp	r3, #0
 80050da:	d003      	beq.n	80050e4 <HAL_TIM_Encoder_Start+0xc4>
 80050dc:	683b      	ldr	r3, [r7, #0]
 80050de:	2b04      	cmp	r3, #4
 80050e0:	d008      	beq.n	80050f4 <HAL_TIM_Encoder_Start+0xd4>
 80050e2:	e00f      	b.n	8005104 <HAL_TIM_Encoder_Start+0xe4>
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	2201      	movs	r2, #1
 80050ea:	2100      	movs	r1, #0
 80050ec:	4618      	mov	r0, r3
 80050ee:	f000 fc5b 	bl	80059a8 <TIM_CCxChannelCmd>
 80050f2:	e016      	b.n	8005122 <HAL_TIM_Encoder_Start+0x102>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	2201      	movs	r2, #1
 80050fa:	2104      	movs	r1, #4
 80050fc:	4618      	mov	r0, r3
 80050fe:	f000 fc53 	bl	80059a8 <TIM_CCxChannelCmd>
 8005102:	e00e      	b.n	8005122 <HAL_TIM_Encoder_Start+0x102>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	2201      	movs	r2, #1
 800510a:	2100      	movs	r1, #0
 800510c:	4618      	mov	r0, r3
 800510e:	f000 fc4b 	bl	80059a8 <TIM_CCxChannelCmd>
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	2201      	movs	r2, #1
 8005118:	2104      	movs	r1, #4
 800511a:	4618      	mov	r0, r3
 800511c:	f000 fc44 	bl	80059a8 <TIM_CCxChannelCmd>
 8005120:	bf00      	nop
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	681a      	ldr	r2, [r3, #0]
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	681b      	ldr	r3, [r3, #0]
 800512c:	f042 0201 	orr.w	r2, r2, #1
 8005130:	601a      	str	r2, [r3, #0]
 8005132:	2300      	movs	r3, #0
 8005134:	4618      	mov	r0, r3
 8005136:	3710      	adds	r7, #16
 8005138:	46bd      	mov	sp, r7
 800513a:	bd80      	pop	{r7, pc}

0800513c <HAL_TIM_IRQHandler>:
 800513c:	b580      	push	{r7, lr}
 800513e:	b084      	sub	sp, #16
 8005140:	af00      	add	r7, sp, #0
 8005142:	6078      	str	r0, [r7, #4]
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	68db      	ldr	r3, [r3, #12]
 800514a:	60fb      	str	r3, [r7, #12]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	691b      	ldr	r3, [r3, #16]
 8005152:	60bb      	str	r3, [r7, #8]
 8005154:	68bb      	ldr	r3, [r7, #8]
 8005156:	f003 0302 	and.w	r3, r3, #2
 800515a:	2b00      	cmp	r3, #0
 800515c:	d020      	beq.n	80051a0 <HAL_TIM_IRQHandler+0x64>
 800515e:	68fb      	ldr	r3, [r7, #12]
 8005160:	f003 0302 	and.w	r3, r3, #2
 8005164:	2b00      	cmp	r3, #0
 8005166:	d01b      	beq.n	80051a0 <HAL_TIM_IRQHandler+0x64>
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	f06f 0202 	mvn.w	r2, #2
 8005170:	611a      	str	r2, [r3, #16]
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	2201      	movs	r2, #1
 8005176:	771a      	strb	r2, [r3, #28]
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	699b      	ldr	r3, [r3, #24]
 800517e:	f003 0303 	and.w	r3, r3, #3
 8005182:	2b00      	cmp	r3, #0
 8005184:	d003      	beq.n	800518e <HAL_TIM_IRQHandler+0x52>
 8005186:	6878      	ldr	r0, [r7, #4]
 8005188:	f000 f994 	bl	80054b4 <HAL_TIM_IC_CaptureCallback>
 800518c:	e005      	b.n	800519a <HAL_TIM_IRQHandler+0x5e>
 800518e:	6878      	ldr	r0, [r7, #4]
 8005190:	f000 f986 	bl	80054a0 <HAL_TIM_OC_DelayElapsedCallback>
 8005194:	6878      	ldr	r0, [r7, #4]
 8005196:	f000 f997 	bl	80054c8 <HAL_TIM_PWM_PulseFinishedCallback>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	2200      	movs	r2, #0
 800519e:	771a      	strb	r2, [r3, #28]
 80051a0:	68bb      	ldr	r3, [r7, #8]
 80051a2:	f003 0304 	and.w	r3, r3, #4
 80051a6:	2b00      	cmp	r3, #0
 80051a8:	d020      	beq.n	80051ec <HAL_TIM_IRQHandler+0xb0>
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	f003 0304 	and.w	r3, r3, #4
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d01b      	beq.n	80051ec <HAL_TIM_IRQHandler+0xb0>
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	f06f 0204 	mvn.w	r2, #4
 80051bc:	611a      	str	r2, [r3, #16]
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	2202      	movs	r2, #2
 80051c2:	771a      	strb	r2, [r3, #28]
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	699b      	ldr	r3, [r3, #24]
 80051ca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d003      	beq.n	80051da <HAL_TIM_IRQHandler+0x9e>
 80051d2:	6878      	ldr	r0, [r7, #4]
 80051d4:	f000 f96e 	bl	80054b4 <HAL_TIM_IC_CaptureCallback>
 80051d8:	e005      	b.n	80051e6 <HAL_TIM_IRQHandler+0xaa>
 80051da:	6878      	ldr	r0, [r7, #4]
 80051dc:	f000 f960 	bl	80054a0 <HAL_TIM_OC_DelayElapsedCallback>
 80051e0:	6878      	ldr	r0, [r7, #4]
 80051e2:	f000 f971 	bl	80054c8 <HAL_TIM_PWM_PulseFinishedCallback>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	2200      	movs	r2, #0
 80051ea:	771a      	strb	r2, [r3, #28]
 80051ec:	68bb      	ldr	r3, [r7, #8]
 80051ee:	f003 0308 	and.w	r3, r3, #8
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d020      	beq.n	8005238 <HAL_TIM_IRQHandler+0xfc>
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	f003 0308 	and.w	r3, r3, #8
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d01b      	beq.n	8005238 <HAL_TIM_IRQHandler+0xfc>
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	f06f 0208 	mvn.w	r2, #8
 8005208:	611a      	str	r2, [r3, #16]
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	2204      	movs	r2, #4
 800520e:	771a      	strb	r2, [r3, #28]
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	69db      	ldr	r3, [r3, #28]
 8005216:	f003 0303 	and.w	r3, r3, #3
 800521a:	2b00      	cmp	r3, #0
 800521c:	d003      	beq.n	8005226 <HAL_TIM_IRQHandler+0xea>
 800521e:	6878      	ldr	r0, [r7, #4]
 8005220:	f000 f948 	bl	80054b4 <HAL_TIM_IC_CaptureCallback>
 8005224:	e005      	b.n	8005232 <HAL_TIM_IRQHandler+0xf6>
 8005226:	6878      	ldr	r0, [r7, #4]
 8005228:	f000 f93a 	bl	80054a0 <HAL_TIM_OC_DelayElapsedCallback>
 800522c:	6878      	ldr	r0, [r7, #4]
 800522e:	f000 f94b 	bl	80054c8 <HAL_TIM_PWM_PulseFinishedCallback>
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	2200      	movs	r2, #0
 8005236:	771a      	strb	r2, [r3, #28]
 8005238:	68bb      	ldr	r3, [r7, #8]
 800523a:	f003 0310 	and.w	r3, r3, #16
 800523e:	2b00      	cmp	r3, #0
 8005240:	d020      	beq.n	8005284 <HAL_TIM_IRQHandler+0x148>
 8005242:	68fb      	ldr	r3, [r7, #12]
 8005244:	f003 0310 	and.w	r3, r3, #16
 8005248:	2b00      	cmp	r3, #0
 800524a:	d01b      	beq.n	8005284 <HAL_TIM_IRQHandler+0x148>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	f06f 0210 	mvn.w	r2, #16
 8005254:	611a      	str	r2, [r3, #16]
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	2208      	movs	r2, #8
 800525a:	771a      	strb	r2, [r3, #28]
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	69db      	ldr	r3, [r3, #28]
 8005262:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005266:	2b00      	cmp	r3, #0
 8005268:	d003      	beq.n	8005272 <HAL_TIM_IRQHandler+0x136>
 800526a:	6878      	ldr	r0, [r7, #4]
 800526c:	f000 f922 	bl	80054b4 <HAL_TIM_IC_CaptureCallback>
 8005270:	e005      	b.n	800527e <HAL_TIM_IRQHandler+0x142>
 8005272:	6878      	ldr	r0, [r7, #4]
 8005274:	f000 f914 	bl	80054a0 <HAL_TIM_OC_DelayElapsedCallback>
 8005278:	6878      	ldr	r0, [r7, #4]
 800527a:	f000 f925 	bl	80054c8 <HAL_TIM_PWM_PulseFinishedCallback>
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	2200      	movs	r2, #0
 8005282:	771a      	strb	r2, [r3, #28]
 8005284:	68bb      	ldr	r3, [r7, #8]
 8005286:	f003 0301 	and.w	r3, r3, #1
 800528a:	2b00      	cmp	r3, #0
 800528c:	d00c      	beq.n	80052a8 <HAL_TIM_IRQHandler+0x16c>
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	f003 0301 	and.w	r3, r3, #1
 8005294:	2b00      	cmp	r3, #0
 8005296:	d007      	beq.n	80052a8 <HAL_TIM_IRQHandler+0x16c>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	f06f 0201 	mvn.w	r2, #1
 80052a0:	611a      	str	r2, [r3, #16]
 80052a2:	6878      	ldr	r0, [r7, #4]
 80052a4:	f7fd fa3e 	bl	8002724 <HAL_TIM_PeriodElapsedCallback>
 80052a8:	68bb      	ldr	r3, [r7, #8]
 80052aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d00c      	beq.n	80052cc <HAL_TIM_IRQHandler+0x190>
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d007      	beq.n	80052cc <HAL_TIM_IRQHandler+0x190>
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80052c4:	611a      	str	r2, [r3, #16]
 80052c6:	6878      	ldr	r0, [r7, #4]
 80052c8:	f000 fc1a 	bl	8005b00 <HAL_TIMEx_BreakCallback>
 80052cc:	68bb      	ldr	r3, [r7, #8]
 80052ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d00c      	beq.n	80052f0 <HAL_TIM_IRQHandler+0x1b4>
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d007      	beq.n	80052f0 <HAL_TIM_IRQHandler+0x1b4>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80052e8:	611a      	str	r2, [r3, #16]
 80052ea:	6878      	ldr	r0, [r7, #4]
 80052ec:	f000 f8f6 	bl	80054dc <HAL_TIM_TriggerCallback>
 80052f0:	68bb      	ldr	r3, [r7, #8]
 80052f2:	f003 0320 	and.w	r3, r3, #32
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d00c      	beq.n	8005314 <HAL_TIM_IRQHandler+0x1d8>
 80052fa:	68fb      	ldr	r3, [r7, #12]
 80052fc:	f003 0320 	and.w	r3, r3, #32
 8005300:	2b00      	cmp	r3, #0
 8005302:	d007      	beq.n	8005314 <HAL_TIM_IRQHandler+0x1d8>
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	681b      	ldr	r3, [r3, #0]
 8005308:	f06f 0220 	mvn.w	r2, #32
 800530c:	611a      	str	r2, [r3, #16]
 800530e:	6878      	ldr	r0, [r7, #4]
 8005310:	f000 fbec 	bl	8005aec <HAL_TIMEx_CommutCallback>
 8005314:	bf00      	nop
 8005316:	3710      	adds	r7, #16
 8005318:	46bd      	mov	sp, r7
 800531a:	bd80      	pop	{r7, pc}

0800531c <HAL_TIM_PWM_ConfigChannel>:
 800531c:	b580      	push	{r7, lr}
 800531e:	b086      	sub	sp, #24
 8005320:	af00      	add	r7, sp, #0
 8005322:	60f8      	str	r0, [r7, #12]
 8005324:	60b9      	str	r1, [r7, #8]
 8005326:	607a      	str	r2, [r7, #4]
 8005328:	2300      	movs	r3, #0
 800532a:	75fb      	strb	r3, [r7, #23]
 800532c:	68fb      	ldr	r3, [r7, #12]
 800532e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005332:	2b01      	cmp	r3, #1
 8005334:	d101      	bne.n	800533a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005336:	2302      	movs	r3, #2
 8005338:	e0ae      	b.n	8005498 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800533a:	68fb      	ldr	r3, [r7, #12]
 800533c:	2201      	movs	r2, #1
 800533e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	2b0c      	cmp	r3, #12
 8005346:	f200 809f 	bhi.w	8005488 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800534a:	a201      	add	r2, pc, #4	; (adr r2, 8005350 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800534c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005350:	08005385 	.word	0x08005385
 8005354:	08005489 	.word	0x08005489
 8005358:	08005489 	.word	0x08005489
 800535c:	08005489 	.word	0x08005489
 8005360:	080053c5 	.word	0x080053c5
 8005364:	08005489 	.word	0x08005489
 8005368:	08005489 	.word	0x08005489
 800536c:	08005489 	.word	0x08005489
 8005370:	08005407 	.word	0x08005407
 8005374:	08005489 	.word	0x08005489
 8005378:	08005489 	.word	0x08005489
 800537c:	08005489 	.word	0x08005489
 8005380:	08005447 	.word	0x08005447
 8005384:	68fb      	ldr	r3, [r7, #12]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	68b9      	ldr	r1, [r7, #8]
 800538a:	4618      	mov	r0, r3
 800538c:	f000 f95c 	bl	8005648 <TIM_OC1_SetConfig>
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	699a      	ldr	r2, [r3, #24]
 8005396:	68fb      	ldr	r3, [r7, #12]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	f042 0208 	orr.w	r2, r2, #8
 800539e:	619a      	str	r2, [r3, #24]
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	699a      	ldr	r2, [r3, #24]
 80053a6:	68fb      	ldr	r3, [r7, #12]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	f022 0204 	bic.w	r2, r2, #4
 80053ae:	619a      	str	r2, [r3, #24]
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	6999      	ldr	r1, [r3, #24]
 80053b6:	68bb      	ldr	r3, [r7, #8]
 80053b8:	691a      	ldr	r2, [r3, #16]
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	430a      	orrs	r2, r1
 80053c0:	619a      	str	r2, [r3, #24]
 80053c2:	e064      	b.n	800548e <HAL_TIM_PWM_ConfigChannel+0x172>
 80053c4:	68fb      	ldr	r3, [r7, #12]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	68b9      	ldr	r1, [r7, #8]
 80053ca:	4618      	mov	r0, r3
 80053cc:	f000 f9ac 	bl	8005728 <TIM_OC2_SetConfig>
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	699a      	ldr	r2, [r3, #24]
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80053de:	619a      	str	r2, [r3, #24]
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	699a      	ldr	r2, [r3, #24]
 80053e6:	68fb      	ldr	r3, [r7, #12]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80053ee:	619a      	str	r2, [r3, #24]
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	6999      	ldr	r1, [r3, #24]
 80053f6:	68bb      	ldr	r3, [r7, #8]
 80053f8:	691b      	ldr	r3, [r3, #16]
 80053fa:	021a      	lsls	r2, r3, #8
 80053fc:	68fb      	ldr	r3, [r7, #12]
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	430a      	orrs	r2, r1
 8005402:	619a      	str	r2, [r3, #24]
 8005404:	e043      	b.n	800548e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	68b9      	ldr	r1, [r7, #8]
 800540c:	4618      	mov	r0, r3
 800540e:	f000 fa01 	bl	8005814 <TIM_OC3_SetConfig>
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	69da      	ldr	r2, [r3, #28]
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	f042 0208 	orr.w	r2, r2, #8
 8005420:	61da      	str	r2, [r3, #28]
 8005422:	68fb      	ldr	r3, [r7, #12]
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	69da      	ldr	r2, [r3, #28]
 8005428:	68fb      	ldr	r3, [r7, #12]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	f022 0204 	bic.w	r2, r2, #4
 8005430:	61da      	str	r2, [r3, #28]
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	69d9      	ldr	r1, [r3, #28]
 8005438:	68bb      	ldr	r3, [r7, #8]
 800543a:	691a      	ldr	r2, [r3, #16]
 800543c:	68fb      	ldr	r3, [r7, #12]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	430a      	orrs	r2, r1
 8005442:	61da      	str	r2, [r3, #28]
 8005444:	e023      	b.n	800548e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	68b9      	ldr	r1, [r7, #8]
 800544c:	4618      	mov	r0, r3
 800544e:	f000 fa55 	bl	80058fc <TIM_OC4_SetConfig>
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	69da      	ldr	r2, [r3, #28]
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005460:	61da      	str	r2, [r3, #28]
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	69da      	ldr	r2, [r3, #28]
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005470:	61da      	str	r2, [r3, #28]
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	69d9      	ldr	r1, [r3, #28]
 8005478:	68bb      	ldr	r3, [r7, #8]
 800547a:	691b      	ldr	r3, [r3, #16]
 800547c:	021a      	lsls	r2, r3, #8
 800547e:	68fb      	ldr	r3, [r7, #12]
 8005480:	681b      	ldr	r3, [r3, #0]
 8005482:	430a      	orrs	r2, r1
 8005484:	61da      	str	r2, [r3, #28]
 8005486:	e002      	b.n	800548e <HAL_TIM_PWM_ConfigChannel+0x172>
 8005488:	2301      	movs	r3, #1
 800548a:	75fb      	strb	r3, [r7, #23]
 800548c:	bf00      	nop
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	2200      	movs	r2, #0
 8005492:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005496:	7dfb      	ldrb	r3, [r7, #23]
 8005498:	4618      	mov	r0, r3
 800549a:	3718      	adds	r7, #24
 800549c:	46bd      	mov	sp, r7
 800549e:	bd80      	pop	{r7, pc}

080054a0 <HAL_TIM_OC_DelayElapsedCallback>:
 80054a0:	b480      	push	{r7}
 80054a2:	b083      	sub	sp, #12
 80054a4:	af00      	add	r7, sp, #0
 80054a6:	6078      	str	r0, [r7, #4]
 80054a8:	bf00      	nop
 80054aa:	370c      	adds	r7, #12
 80054ac:	46bd      	mov	sp, r7
 80054ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054b2:	4770      	bx	lr

080054b4 <HAL_TIM_IC_CaptureCallback>:
 80054b4:	b480      	push	{r7}
 80054b6:	b083      	sub	sp, #12
 80054b8:	af00      	add	r7, sp, #0
 80054ba:	6078      	str	r0, [r7, #4]
 80054bc:	bf00      	nop
 80054be:	370c      	adds	r7, #12
 80054c0:	46bd      	mov	sp, r7
 80054c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c6:	4770      	bx	lr

080054c8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80054c8:	b480      	push	{r7}
 80054ca:	b083      	sub	sp, #12
 80054cc:	af00      	add	r7, sp, #0
 80054ce:	6078      	str	r0, [r7, #4]
 80054d0:	bf00      	nop
 80054d2:	370c      	adds	r7, #12
 80054d4:	46bd      	mov	sp, r7
 80054d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054da:	4770      	bx	lr

080054dc <HAL_TIM_TriggerCallback>:
 80054dc:	b480      	push	{r7}
 80054de:	b083      	sub	sp, #12
 80054e0:	af00      	add	r7, sp, #0
 80054e2:	6078      	str	r0, [r7, #4]
 80054e4:	bf00      	nop
 80054e6:	370c      	adds	r7, #12
 80054e8:	46bd      	mov	sp, r7
 80054ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ee:	4770      	bx	lr

080054f0 <TIM_Base_SetConfig>:
 80054f0:	b480      	push	{r7}
 80054f2:	b085      	sub	sp, #20
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	6078      	str	r0, [r7, #4]
 80054f8:	6039      	str	r1, [r7, #0]
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	60fb      	str	r3, [r7, #12]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	4a46      	ldr	r2, [pc, #280]	; (800561c <TIM_Base_SetConfig+0x12c>)
 8005504:	4293      	cmp	r3, r2
 8005506:	d013      	beq.n	8005530 <TIM_Base_SetConfig+0x40>
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800550e:	d00f      	beq.n	8005530 <TIM_Base_SetConfig+0x40>
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	4a43      	ldr	r2, [pc, #268]	; (8005620 <TIM_Base_SetConfig+0x130>)
 8005514:	4293      	cmp	r3, r2
 8005516:	d00b      	beq.n	8005530 <TIM_Base_SetConfig+0x40>
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	4a42      	ldr	r2, [pc, #264]	; (8005624 <TIM_Base_SetConfig+0x134>)
 800551c:	4293      	cmp	r3, r2
 800551e:	d007      	beq.n	8005530 <TIM_Base_SetConfig+0x40>
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	4a41      	ldr	r2, [pc, #260]	; (8005628 <TIM_Base_SetConfig+0x138>)
 8005524:	4293      	cmp	r3, r2
 8005526:	d003      	beq.n	8005530 <TIM_Base_SetConfig+0x40>
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	4a40      	ldr	r2, [pc, #256]	; (800562c <TIM_Base_SetConfig+0x13c>)
 800552c:	4293      	cmp	r3, r2
 800552e:	d108      	bne.n	8005542 <TIM_Base_SetConfig+0x52>
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005536:	60fb      	str	r3, [r7, #12]
 8005538:	683b      	ldr	r3, [r7, #0]
 800553a:	685b      	ldr	r3, [r3, #4]
 800553c:	68fa      	ldr	r2, [r7, #12]
 800553e:	4313      	orrs	r3, r2
 8005540:	60fb      	str	r3, [r7, #12]
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	4a35      	ldr	r2, [pc, #212]	; (800561c <TIM_Base_SetConfig+0x12c>)
 8005546:	4293      	cmp	r3, r2
 8005548:	d02b      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005550:	d027      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	4a32      	ldr	r2, [pc, #200]	; (8005620 <TIM_Base_SetConfig+0x130>)
 8005556:	4293      	cmp	r3, r2
 8005558:	d023      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	4a31      	ldr	r2, [pc, #196]	; (8005624 <TIM_Base_SetConfig+0x134>)
 800555e:	4293      	cmp	r3, r2
 8005560:	d01f      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	4a30      	ldr	r2, [pc, #192]	; (8005628 <TIM_Base_SetConfig+0x138>)
 8005566:	4293      	cmp	r3, r2
 8005568:	d01b      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	4a2f      	ldr	r2, [pc, #188]	; (800562c <TIM_Base_SetConfig+0x13c>)
 800556e:	4293      	cmp	r3, r2
 8005570:	d017      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	4a2e      	ldr	r2, [pc, #184]	; (8005630 <TIM_Base_SetConfig+0x140>)
 8005576:	4293      	cmp	r3, r2
 8005578:	d013      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	4a2d      	ldr	r2, [pc, #180]	; (8005634 <TIM_Base_SetConfig+0x144>)
 800557e:	4293      	cmp	r3, r2
 8005580:	d00f      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	4a2c      	ldr	r2, [pc, #176]	; (8005638 <TIM_Base_SetConfig+0x148>)
 8005586:	4293      	cmp	r3, r2
 8005588:	d00b      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800558a:	687b      	ldr	r3, [r7, #4]
 800558c:	4a2b      	ldr	r2, [pc, #172]	; (800563c <TIM_Base_SetConfig+0x14c>)
 800558e:	4293      	cmp	r3, r2
 8005590:	d007      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	4a2a      	ldr	r2, [pc, #168]	; (8005640 <TIM_Base_SetConfig+0x150>)
 8005596:	4293      	cmp	r3, r2
 8005598:	d003      	beq.n	80055a2 <TIM_Base_SetConfig+0xb2>
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	4a29      	ldr	r2, [pc, #164]	; (8005644 <TIM_Base_SetConfig+0x154>)
 800559e:	4293      	cmp	r3, r2
 80055a0:	d108      	bne.n	80055b4 <TIM_Base_SetConfig+0xc4>
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80055a8:	60fb      	str	r3, [r7, #12]
 80055aa:	683b      	ldr	r3, [r7, #0]
 80055ac:	68db      	ldr	r3, [r3, #12]
 80055ae:	68fa      	ldr	r2, [r7, #12]
 80055b0:	4313      	orrs	r3, r2
 80055b2:	60fb      	str	r3, [r7, #12]
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80055ba:	683b      	ldr	r3, [r7, #0]
 80055bc:	695b      	ldr	r3, [r3, #20]
 80055be:	4313      	orrs	r3, r2
 80055c0:	60fb      	str	r3, [r7, #12]
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	68fa      	ldr	r2, [r7, #12]
 80055c6:	601a      	str	r2, [r3, #0]
 80055c8:	683b      	ldr	r3, [r7, #0]
 80055ca:	689a      	ldr	r2, [r3, #8]
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	62da      	str	r2, [r3, #44]	; 0x2c
 80055d0:	683b      	ldr	r3, [r7, #0]
 80055d2:	681a      	ldr	r2, [r3, #0]
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	629a      	str	r2, [r3, #40]	; 0x28
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	4a10      	ldr	r2, [pc, #64]	; (800561c <TIM_Base_SetConfig+0x12c>)
 80055dc:	4293      	cmp	r3, r2
 80055de:	d003      	beq.n	80055e8 <TIM_Base_SetConfig+0xf8>
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	4a12      	ldr	r2, [pc, #72]	; (800562c <TIM_Base_SetConfig+0x13c>)
 80055e4:	4293      	cmp	r3, r2
 80055e6:	d103      	bne.n	80055f0 <TIM_Base_SetConfig+0x100>
 80055e8:	683b      	ldr	r3, [r7, #0]
 80055ea:	691a      	ldr	r2, [r3, #16]
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	631a      	str	r2, [r3, #48]	; 0x30
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	2201      	movs	r2, #1
 80055f4:	615a      	str	r2, [r3, #20]
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	691b      	ldr	r3, [r3, #16]
 80055fa:	f003 0301 	and.w	r3, r3, #1
 80055fe:	2b01      	cmp	r3, #1
 8005600:	d105      	bne.n	800560e <TIM_Base_SetConfig+0x11e>
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	691b      	ldr	r3, [r3, #16]
 8005606:	f023 0201 	bic.w	r2, r3, #1
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	611a      	str	r2, [r3, #16]
 800560e:	bf00      	nop
 8005610:	3714      	adds	r7, #20
 8005612:	46bd      	mov	sp, r7
 8005614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005618:	4770      	bx	lr
 800561a:	bf00      	nop
 800561c:	40010000 	.word	0x40010000
 8005620:	40000400 	.word	0x40000400
 8005624:	40000800 	.word	0x40000800
 8005628:	40000c00 	.word	0x40000c00
 800562c:	40010400 	.word	0x40010400
 8005630:	40014000 	.word	0x40014000
 8005634:	40014400 	.word	0x40014400
 8005638:	40014800 	.word	0x40014800
 800563c:	40001800 	.word	0x40001800
 8005640:	40001c00 	.word	0x40001c00
 8005644:	40002000 	.word	0x40002000

08005648 <TIM_OC1_SetConfig>:
 8005648:	b480      	push	{r7}
 800564a:	b087      	sub	sp, #28
 800564c:	af00      	add	r7, sp, #0
 800564e:	6078      	str	r0, [r7, #4]
 8005650:	6039      	str	r1, [r7, #0]
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	6a1b      	ldr	r3, [r3, #32]
 8005656:	617b      	str	r3, [r7, #20]
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	6a1b      	ldr	r3, [r3, #32]
 800565c:	f023 0201 	bic.w	r2, r3, #1
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	621a      	str	r2, [r3, #32]
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	685b      	ldr	r3, [r3, #4]
 8005668:	613b      	str	r3, [r7, #16]
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	699b      	ldr	r3, [r3, #24]
 800566e:	60fb      	str	r3, [r7, #12]
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005676:	60fb      	str	r3, [r7, #12]
 8005678:	68fb      	ldr	r3, [r7, #12]
 800567a:	f023 0303 	bic.w	r3, r3, #3
 800567e:	60fb      	str	r3, [r7, #12]
 8005680:	683b      	ldr	r3, [r7, #0]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	68fa      	ldr	r2, [r7, #12]
 8005686:	4313      	orrs	r3, r2
 8005688:	60fb      	str	r3, [r7, #12]
 800568a:	697b      	ldr	r3, [r7, #20]
 800568c:	f023 0302 	bic.w	r3, r3, #2
 8005690:	617b      	str	r3, [r7, #20]
 8005692:	683b      	ldr	r3, [r7, #0]
 8005694:	689b      	ldr	r3, [r3, #8]
 8005696:	697a      	ldr	r2, [r7, #20]
 8005698:	4313      	orrs	r3, r2
 800569a:	617b      	str	r3, [r7, #20]
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	4a20      	ldr	r2, [pc, #128]	; (8005720 <TIM_OC1_SetConfig+0xd8>)
 80056a0:	4293      	cmp	r3, r2
 80056a2:	d003      	beq.n	80056ac <TIM_OC1_SetConfig+0x64>
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	4a1f      	ldr	r2, [pc, #124]	; (8005724 <TIM_OC1_SetConfig+0xdc>)
 80056a8:	4293      	cmp	r3, r2
 80056aa:	d10c      	bne.n	80056c6 <TIM_OC1_SetConfig+0x7e>
 80056ac:	697b      	ldr	r3, [r7, #20]
 80056ae:	f023 0308 	bic.w	r3, r3, #8
 80056b2:	617b      	str	r3, [r7, #20]
 80056b4:	683b      	ldr	r3, [r7, #0]
 80056b6:	68db      	ldr	r3, [r3, #12]
 80056b8:	697a      	ldr	r2, [r7, #20]
 80056ba:	4313      	orrs	r3, r2
 80056bc:	617b      	str	r3, [r7, #20]
 80056be:	697b      	ldr	r3, [r7, #20]
 80056c0:	f023 0304 	bic.w	r3, r3, #4
 80056c4:	617b      	str	r3, [r7, #20]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	4a15      	ldr	r2, [pc, #84]	; (8005720 <TIM_OC1_SetConfig+0xd8>)
 80056ca:	4293      	cmp	r3, r2
 80056cc:	d003      	beq.n	80056d6 <TIM_OC1_SetConfig+0x8e>
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	4a14      	ldr	r2, [pc, #80]	; (8005724 <TIM_OC1_SetConfig+0xdc>)
 80056d2:	4293      	cmp	r3, r2
 80056d4:	d111      	bne.n	80056fa <TIM_OC1_SetConfig+0xb2>
 80056d6:	693b      	ldr	r3, [r7, #16]
 80056d8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80056dc:	613b      	str	r3, [r7, #16]
 80056de:	693b      	ldr	r3, [r7, #16]
 80056e0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80056e4:	613b      	str	r3, [r7, #16]
 80056e6:	683b      	ldr	r3, [r7, #0]
 80056e8:	695b      	ldr	r3, [r3, #20]
 80056ea:	693a      	ldr	r2, [r7, #16]
 80056ec:	4313      	orrs	r3, r2
 80056ee:	613b      	str	r3, [r7, #16]
 80056f0:	683b      	ldr	r3, [r7, #0]
 80056f2:	699b      	ldr	r3, [r3, #24]
 80056f4:	693a      	ldr	r2, [r7, #16]
 80056f6:	4313      	orrs	r3, r2
 80056f8:	613b      	str	r3, [r7, #16]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	693a      	ldr	r2, [r7, #16]
 80056fe:	605a      	str	r2, [r3, #4]
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	68fa      	ldr	r2, [r7, #12]
 8005704:	619a      	str	r2, [r3, #24]
 8005706:	683b      	ldr	r3, [r7, #0]
 8005708:	685a      	ldr	r2, [r3, #4]
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	635a      	str	r2, [r3, #52]	; 0x34
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	697a      	ldr	r2, [r7, #20]
 8005712:	621a      	str	r2, [r3, #32]
 8005714:	bf00      	nop
 8005716:	371c      	adds	r7, #28
 8005718:	46bd      	mov	sp, r7
 800571a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800571e:	4770      	bx	lr
 8005720:	40010000 	.word	0x40010000
 8005724:	40010400 	.word	0x40010400

08005728 <TIM_OC2_SetConfig>:
 8005728:	b480      	push	{r7}
 800572a:	b087      	sub	sp, #28
 800572c:	af00      	add	r7, sp, #0
 800572e:	6078      	str	r0, [r7, #4]
 8005730:	6039      	str	r1, [r7, #0]
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	6a1b      	ldr	r3, [r3, #32]
 8005736:	617b      	str	r3, [r7, #20]
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	6a1b      	ldr	r3, [r3, #32]
 800573c:	f023 0210 	bic.w	r2, r3, #16
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	621a      	str	r2, [r3, #32]
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	685b      	ldr	r3, [r3, #4]
 8005748:	613b      	str	r3, [r7, #16]
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	699b      	ldr	r3, [r3, #24]
 800574e:	60fb      	str	r3, [r7, #12]
 8005750:	68fb      	ldr	r3, [r7, #12]
 8005752:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005756:	60fb      	str	r3, [r7, #12]
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800575e:	60fb      	str	r3, [r7, #12]
 8005760:	683b      	ldr	r3, [r7, #0]
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	021b      	lsls	r3, r3, #8
 8005766:	68fa      	ldr	r2, [r7, #12]
 8005768:	4313      	orrs	r3, r2
 800576a:	60fb      	str	r3, [r7, #12]
 800576c:	697b      	ldr	r3, [r7, #20]
 800576e:	f023 0320 	bic.w	r3, r3, #32
 8005772:	617b      	str	r3, [r7, #20]
 8005774:	683b      	ldr	r3, [r7, #0]
 8005776:	689b      	ldr	r3, [r3, #8]
 8005778:	011b      	lsls	r3, r3, #4
 800577a:	697a      	ldr	r2, [r7, #20]
 800577c:	4313      	orrs	r3, r2
 800577e:	617b      	str	r3, [r7, #20]
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	4a22      	ldr	r2, [pc, #136]	; (800580c <TIM_OC2_SetConfig+0xe4>)
 8005784:	4293      	cmp	r3, r2
 8005786:	d003      	beq.n	8005790 <TIM_OC2_SetConfig+0x68>
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	4a21      	ldr	r2, [pc, #132]	; (8005810 <TIM_OC2_SetConfig+0xe8>)
 800578c:	4293      	cmp	r3, r2
 800578e:	d10d      	bne.n	80057ac <TIM_OC2_SetConfig+0x84>
 8005790:	697b      	ldr	r3, [r7, #20]
 8005792:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005796:	617b      	str	r3, [r7, #20]
 8005798:	683b      	ldr	r3, [r7, #0]
 800579a:	68db      	ldr	r3, [r3, #12]
 800579c:	011b      	lsls	r3, r3, #4
 800579e:	697a      	ldr	r2, [r7, #20]
 80057a0:	4313      	orrs	r3, r2
 80057a2:	617b      	str	r3, [r7, #20]
 80057a4:	697b      	ldr	r3, [r7, #20]
 80057a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80057aa:	617b      	str	r3, [r7, #20]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	4a17      	ldr	r2, [pc, #92]	; (800580c <TIM_OC2_SetConfig+0xe4>)
 80057b0:	4293      	cmp	r3, r2
 80057b2:	d003      	beq.n	80057bc <TIM_OC2_SetConfig+0x94>
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	4a16      	ldr	r2, [pc, #88]	; (8005810 <TIM_OC2_SetConfig+0xe8>)
 80057b8:	4293      	cmp	r3, r2
 80057ba:	d113      	bne.n	80057e4 <TIM_OC2_SetConfig+0xbc>
 80057bc:	693b      	ldr	r3, [r7, #16]
 80057be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80057c2:	613b      	str	r3, [r7, #16]
 80057c4:	693b      	ldr	r3, [r7, #16]
 80057c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80057ca:	613b      	str	r3, [r7, #16]
 80057cc:	683b      	ldr	r3, [r7, #0]
 80057ce:	695b      	ldr	r3, [r3, #20]
 80057d0:	009b      	lsls	r3, r3, #2
 80057d2:	693a      	ldr	r2, [r7, #16]
 80057d4:	4313      	orrs	r3, r2
 80057d6:	613b      	str	r3, [r7, #16]
 80057d8:	683b      	ldr	r3, [r7, #0]
 80057da:	699b      	ldr	r3, [r3, #24]
 80057dc:	009b      	lsls	r3, r3, #2
 80057de:	693a      	ldr	r2, [r7, #16]
 80057e0:	4313      	orrs	r3, r2
 80057e2:	613b      	str	r3, [r7, #16]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	693a      	ldr	r2, [r7, #16]
 80057e8:	605a      	str	r2, [r3, #4]
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	68fa      	ldr	r2, [r7, #12]
 80057ee:	619a      	str	r2, [r3, #24]
 80057f0:	683b      	ldr	r3, [r7, #0]
 80057f2:	685a      	ldr	r2, [r3, #4]
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	639a      	str	r2, [r3, #56]	; 0x38
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	697a      	ldr	r2, [r7, #20]
 80057fc:	621a      	str	r2, [r3, #32]
 80057fe:	bf00      	nop
 8005800:	371c      	adds	r7, #28
 8005802:	46bd      	mov	sp, r7
 8005804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005808:	4770      	bx	lr
 800580a:	bf00      	nop
 800580c:	40010000 	.word	0x40010000
 8005810:	40010400 	.word	0x40010400

08005814 <TIM_OC3_SetConfig>:
 8005814:	b480      	push	{r7}
 8005816:	b087      	sub	sp, #28
 8005818:	af00      	add	r7, sp, #0
 800581a:	6078      	str	r0, [r7, #4]
 800581c:	6039      	str	r1, [r7, #0]
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	6a1b      	ldr	r3, [r3, #32]
 8005822:	617b      	str	r3, [r7, #20]
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	6a1b      	ldr	r3, [r3, #32]
 8005828:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	621a      	str	r2, [r3, #32]
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	685b      	ldr	r3, [r3, #4]
 8005834:	613b      	str	r3, [r7, #16]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	69db      	ldr	r3, [r3, #28]
 800583a:	60fb      	str	r3, [r7, #12]
 800583c:	68fb      	ldr	r3, [r7, #12]
 800583e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005842:	60fb      	str	r3, [r7, #12]
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	f023 0303 	bic.w	r3, r3, #3
 800584a:	60fb      	str	r3, [r7, #12]
 800584c:	683b      	ldr	r3, [r7, #0]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	68fa      	ldr	r2, [r7, #12]
 8005852:	4313      	orrs	r3, r2
 8005854:	60fb      	str	r3, [r7, #12]
 8005856:	697b      	ldr	r3, [r7, #20]
 8005858:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800585c:	617b      	str	r3, [r7, #20]
 800585e:	683b      	ldr	r3, [r7, #0]
 8005860:	689b      	ldr	r3, [r3, #8]
 8005862:	021b      	lsls	r3, r3, #8
 8005864:	697a      	ldr	r2, [r7, #20]
 8005866:	4313      	orrs	r3, r2
 8005868:	617b      	str	r3, [r7, #20]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	4a21      	ldr	r2, [pc, #132]	; (80058f4 <TIM_OC3_SetConfig+0xe0>)
 800586e:	4293      	cmp	r3, r2
 8005870:	d003      	beq.n	800587a <TIM_OC3_SetConfig+0x66>
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	4a20      	ldr	r2, [pc, #128]	; (80058f8 <TIM_OC3_SetConfig+0xe4>)
 8005876:	4293      	cmp	r3, r2
 8005878:	d10d      	bne.n	8005896 <TIM_OC3_SetConfig+0x82>
 800587a:	697b      	ldr	r3, [r7, #20]
 800587c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005880:	617b      	str	r3, [r7, #20]
 8005882:	683b      	ldr	r3, [r7, #0]
 8005884:	68db      	ldr	r3, [r3, #12]
 8005886:	021b      	lsls	r3, r3, #8
 8005888:	697a      	ldr	r2, [r7, #20]
 800588a:	4313      	orrs	r3, r2
 800588c:	617b      	str	r3, [r7, #20]
 800588e:	697b      	ldr	r3, [r7, #20]
 8005890:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005894:	617b      	str	r3, [r7, #20]
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	4a16      	ldr	r2, [pc, #88]	; (80058f4 <TIM_OC3_SetConfig+0xe0>)
 800589a:	4293      	cmp	r3, r2
 800589c:	d003      	beq.n	80058a6 <TIM_OC3_SetConfig+0x92>
 800589e:	687b      	ldr	r3, [r7, #4]
 80058a0:	4a15      	ldr	r2, [pc, #84]	; (80058f8 <TIM_OC3_SetConfig+0xe4>)
 80058a2:	4293      	cmp	r3, r2
 80058a4:	d113      	bne.n	80058ce <TIM_OC3_SetConfig+0xba>
 80058a6:	693b      	ldr	r3, [r7, #16]
 80058a8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80058ac:	613b      	str	r3, [r7, #16]
 80058ae:	693b      	ldr	r3, [r7, #16]
 80058b0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80058b4:	613b      	str	r3, [r7, #16]
 80058b6:	683b      	ldr	r3, [r7, #0]
 80058b8:	695b      	ldr	r3, [r3, #20]
 80058ba:	011b      	lsls	r3, r3, #4
 80058bc:	693a      	ldr	r2, [r7, #16]
 80058be:	4313      	orrs	r3, r2
 80058c0:	613b      	str	r3, [r7, #16]
 80058c2:	683b      	ldr	r3, [r7, #0]
 80058c4:	699b      	ldr	r3, [r3, #24]
 80058c6:	011b      	lsls	r3, r3, #4
 80058c8:	693a      	ldr	r2, [r7, #16]
 80058ca:	4313      	orrs	r3, r2
 80058cc:	613b      	str	r3, [r7, #16]
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	693a      	ldr	r2, [r7, #16]
 80058d2:	605a      	str	r2, [r3, #4]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	68fa      	ldr	r2, [r7, #12]
 80058d8:	61da      	str	r2, [r3, #28]
 80058da:	683b      	ldr	r3, [r7, #0]
 80058dc:	685a      	ldr	r2, [r3, #4]
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	63da      	str	r2, [r3, #60]	; 0x3c
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	697a      	ldr	r2, [r7, #20]
 80058e6:	621a      	str	r2, [r3, #32]
 80058e8:	bf00      	nop
 80058ea:	371c      	adds	r7, #28
 80058ec:	46bd      	mov	sp, r7
 80058ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058f2:	4770      	bx	lr
 80058f4:	40010000 	.word	0x40010000
 80058f8:	40010400 	.word	0x40010400

080058fc <TIM_OC4_SetConfig>:
 80058fc:	b480      	push	{r7}
 80058fe:	b087      	sub	sp, #28
 8005900:	af00      	add	r7, sp, #0
 8005902:	6078      	str	r0, [r7, #4]
 8005904:	6039      	str	r1, [r7, #0]
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	6a1b      	ldr	r3, [r3, #32]
 800590a:	613b      	str	r3, [r7, #16]
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	6a1b      	ldr	r3, [r3, #32]
 8005910:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005914:	687b      	ldr	r3, [r7, #4]
 8005916:	621a      	str	r2, [r3, #32]
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	685b      	ldr	r3, [r3, #4]
 800591c:	617b      	str	r3, [r7, #20]
 800591e:	687b      	ldr	r3, [r7, #4]
 8005920:	69db      	ldr	r3, [r3, #28]
 8005922:	60fb      	str	r3, [r7, #12]
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800592a:	60fb      	str	r3, [r7, #12]
 800592c:	68fb      	ldr	r3, [r7, #12]
 800592e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005932:	60fb      	str	r3, [r7, #12]
 8005934:	683b      	ldr	r3, [r7, #0]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	021b      	lsls	r3, r3, #8
 800593a:	68fa      	ldr	r2, [r7, #12]
 800593c:	4313      	orrs	r3, r2
 800593e:	60fb      	str	r3, [r7, #12]
 8005940:	693b      	ldr	r3, [r7, #16]
 8005942:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005946:	613b      	str	r3, [r7, #16]
 8005948:	683b      	ldr	r3, [r7, #0]
 800594a:	689b      	ldr	r3, [r3, #8]
 800594c:	031b      	lsls	r3, r3, #12
 800594e:	693a      	ldr	r2, [r7, #16]
 8005950:	4313      	orrs	r3, r2
 8005952:	613b      	str	r3, [r7, #16]
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	4a12      	ldr	r2, [pc, #72]	; (80059a0 <TIM_OC4_SetConfig+0xa4>)
 8005958:	4293      	cmp	r3, r2
 800595a:	d003      	beq.n	8005964 <TIM_OC4_SetConfig+0x68>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	4a11      	ldr	r2, [pc, #68]	; (80059a4 <TIM_OC4_SetConfig+0xa8>)
 8005960:	4293      	cmp	r3, r2
 8005962:	d109      	bne.n	8005978 <TIM_OC4_SetConfig+0x7c>
 8005964:	697b      	ldr	r3, [r7, #20]
 8005966:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800596a:	617b      	str	r3, [r7, #20]
 800596c:	683b      	ldr	r3, [r7, #0]
 800596e:	695b      	ldr	r3, [r3, #20]
 8005970:	019b      	lsls	r3, r3, #6
 8005972:	697a      	ldr	r2, [r7, #20]
 8005974:	4313      	orrs	r3, r2
 8005976:	617b      	str	r3, [r7, #20]
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	697a      	ldr	r2, [r7, #20]
 800597c:	605a      	str	r2, [r3, #4]
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	68fa      	ldr	r2, [r7, #12]
 8005982:	61da      	str	r2, [r3, #28]
 8005984:	683b      	ldr	r3, [r7, #0]
 8005986:	685a      	ldr	r2, [r3, #4]
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	641a      	str	r2, [r3, #64]	; 0x40
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	693a      	ldr	r2, [r7, #16]
 8005990:	621a      	str	r2, [r3, #32]
 8005992:	bf00      	nop
 8005994:	371c      	adds	r7, #28
 8005996:	46bd      	mov	sp, r7
 8005998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800599c:	4770      	bx	lr
 800599e:	bf00      	nop
 80059a0:	40010000 	.word	0x40010000
 80059a4:	40010400 	.word	0x40010400

080059a8 <TIM_CCxChannelCmd>:
 80059a8:	b480      	push	{r7}
 80059aa:	b087      	sub	sp, #28
 80059ac:	af00      	add	r7, sp, #0
 80059ae:	60f8      	str	r0, [r7, #12]
 80059b0:	60b9      	str	r1, [r7, #8]
 80059b2:	607a      	str	r2, [r7, #4]
 80059b4:	68bb      	ldr	r3, [r7, #8]
 80059b6:	f003 031f 	and.w	r3, r3, #31
 80059ba:	2201      	movs	r2, #1
 80059bc:	fa02 f303 	lsl.w	r3, r2, r3
 80059c0:	617b      	str	r3, [r7, #20]
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	6a1a      	ldr	r2, [r3, #32]
 80059c6:	697b      	ldr	r3, [r7, #20]
 80059c8:	43db      	mvns	r3, r3
 80059ca:	401a      	ands	r2, r3
 80059cc:	68fb      	ldr	r3, [r7, #12]
 80059ce:	621a      	str	r2, [r3, #32]
 80059d0:	68fb      	ldr	r3, [r7, #12]
 80059d2:	6a1a      	ldr	r2, [r3, #32]
 80059d4:	68bb      	ldr	r3, [r7, #8]
 80059d6:	f003 031f 	and.w	r3, r3, #31
 80059da:	6879      	ldr	r1, [r7, #4]
 80059dc:	fa01 f303 	lsl.w	r3, r1, r3
 80059e0:	431a      	orrs	r2, r3
 80059e2:	68fb      	ldr	r3, [r7, #12]
 80059e4:	621a      	str	r2, [r3, #32]
 80059e6:	bf00      	nop
 80059e8:	371c      	adds	r7, #28
 80059ea:	46bd      	mov	sp, r7
 80059ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f0:	4770      	bx	lr
	...

080059f4 <HAL_TIMEx_MasterConfigSynchronization>:
 80059f4:	b480      	push	{r7}
 80059f6:	b085      	sub	sp, #20
 80059f8:	af00      	add	r7, sp, #0
 80059fa:	6078      	str	r0, [r7, #4]
 80059fc:	6039      	str	r1, [r7, #0]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005a04:	2b01      	cmp	r3, #1
 8005a06:	d101      	bne.n	8005a0c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005a08:	2302      	movs	r3, #2
 8005a0a:	e05a      	b.n	8005ac2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	2201      	movs	r2, #1
 8005a10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	2202      	movs	r2, #2
 8005a18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	685b      	ldr	r3, [r3, #4]
 8005a22:	60fb      	str	r3, [r7, #12]
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	689b      	ldr	r3, [r3, #8]
 8005a2a:	60bb      	str	r3, [r7, #8]
 8005a2c:	68fb      	ldr	r3, [r7, #12]
 8005a2e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005a32:	60fb      	str	r3, [r7, #12]
 8005a34:	683b      	ldr	r3, [r7, #0]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	68fa      	ldr	r2, [r7, #12]
 8005a3a:	4313      	orrs	r3, r2
 8005a3c:	60fb      	str	r3, [r7, #12]
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	68fa      	ldr	r2, [r7, #12]
 8005a44:	605a      	str	r2, [r3, #4]
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	4a21      	ldr	r2, [pc, #132]	; (8005ad0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005a4c:	4293      	cmp	r3, r2
 8005a4e:	d022      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005a58:	d01d      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	4a1d      	ldr	r2, [pc, #116]	; (8005ad4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005a60:	4293      	cmp	r3, r2
 8005a62:	d018      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	4a1b      	ldr	r2, [pc, #108]	; (8005ad8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005a6a:	4293      	cmp	r3, r2
 8005a6c:	d013      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	4a1a      	ldr	r2, [pc, #104]	; (8005adc <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005a74:	4293      	cmp	r3, r2
 8005a76:	d00e      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	4a18      	ldr	r2, [pc, #96]	; (8005ae0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005a7e:	4293      	cmp	r3, r2
 8005a80:	d009      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	4a17      	ldr	r2, [pc, #92]	; (8005ae4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005a88:	4293      	cmp	r3, r2
 8005a8a:	d004      	beq.n	8005a96 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	4a15      	ldr	r2, [pc, #84]	; (8005ae8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005a92:	4293      	cmp	r3, r2
 8005a94:	d10c      	bne.n	8005ab0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8005a96:	68bb      	ldr	r3, [r7, #8]
 8005a98:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005a9c:	60bb      	str	r3, [r7, #8]
 8005a9e:	683b      	ldr	r3, [r7, #0]
 8005aa0:	685b      	ldr	r3, [r3, #4]
 8005aa2:	68ba      	ldr	r2, [r7, #8]
 8005aa4:	4313      	orrs	r3, r2
 8005aa6:	60bb      	str	r3, [r7, #8]
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	68ba      	ldr	r2, [r7, #8]
 8005aae:	609a      	str	r2, [r3, #8]
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	2201      	movs	r2, #1
 8005ab4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	2200      	movs	r2, #0
 8005abc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ac0:	2300      	movs	r3, #0
 8005ac2:	4618      	mov	r0, r3
 8005ac4:	3714      	adds	r7, #20
 8005ac6:	46bd      	mov	sp, r7
 8005ac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005acc:	4770      	bx	lr
 8005ace:	bf00      	nop
 8005ad0:	40010000 	.word	0x40010000
 8005ad4:	40000400 	.word	0x40000400
 8005ad8:	40000800 	.word	0x40000800
 8005adc:	40000c00 	.word	0x40000c00
 8005ae0:	40010400 	.word	0x40010400
 8005ae4:	40014000 	.word	0x40014000
 8005ae8:	40001800 	.word	0x40001800

08005aec <HAL_TIMEx_CommutCallback>:
 8005aec:	b480      	push	{r7}
 8005aee:	b083      	sub	sp, #12
 8005af0:	af00      	add	r7, sp, #0
 8005af2:	6078      	str	r0, [r7, #4]
 8005af4:	bf00      	nop
 8005af6:	370c      	adds	r7, #12
 8005af8:	46bd      	mov	sp, r7
 8005afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005afe:	4770      	bx	lr

08005b00 <HAL_TIMEx_BreakCallback>:
 8005b00:	b480      	push	{r7}
 8005b02:	b083      	sub	sp, #12
 8005b04:	af00      	add	r7, sp, #0
 8005b06:	6078      	str	r0, [r7, #4]
 8005b08:	bf00      	nop
 8005b0a:	370c      	adds	r7, #12
 8005b0c:	46bd      	mov	sp, r7
 8005b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b12:	4770      	bx	lr

08005b14 <makeFreeRtosPriority>:
 8005b14:	b480      	push	{r7}
 8005b16:	b085      	sub	sp, #20
 8005b18:	af00      	add	r7, sp, #0
 8005b1a:	4603      	mov	r3, r0
 8005b1c:	80fb      	strh	r3, [r7, #6]
 8005b1e:	2300      	movs	r3, #0
 8005b20:	60fb      	str	r3, [r7, #12]
 8005b22:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005b26:	2b84      	cmp	r3, #132	; 0x84
 8005b28:	d005      	beq.n	8005b36 <makeFreeRtosPriority+0x22>
 8005b2a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8005b2e:	68fb      	ldr	r3, [r7, #12]
 8005b30:	4413      	add	r3, r2
 8005b32:	3303      	adds	r3, #3
 8005b34:	60fb      	str	r3, [r7, #12]
 8005b36:	68fb      	ldr	r3, [r7, #12]
 8005b38:	4618      	mov	r0, r3
 8005b3a:	3714      	adds	r7, #20
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b42:	4770      	bx	lr

08005b44 <osKernelStart>:
 8005b44:	b580      	push	{r7, lr}
 8005b46:	af00      	add	r7, sp, #0
 8005b48:	f000 fade 	bl	8006108 <vTaskStartScheduler>
 8005b4c:	2300      	movs	r3, #0
 8005b4e:	4618      	mov	r0, r3
 8005b50:	bd80      	pop	{r7, pc}

08005b52 <osThreadCreate>:
 8005b52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b54:	b089      	sub	sp, #36	; 0x24
 8005b56:	af04      	add	r7, sp, #16
 8005b58:	6078      	str	r0, [r7, #4]
 8005b5a:	6039      	str	r1, [r7, #0]
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	695b      	ldr	r3, [r3, #20]
 8005b60:	2b00      	cmp	r3, #0
 8005b62:	d020      	beq.n	8005ba6 <osThreadCreate+0x54>
 8005b64:	687b      	ldr	r3, [r7, #4]
 8005b66:	699b      	ldr	r3, [r3, #24]
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d01c      	beq.n	8005ba6 <osThreadCreate+0x54>
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	685c      	ldr	r4, [r3, #4]
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681d      	ldr	r5, [r3, #0]
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	691e      	ldr	r6, [r3, #16]
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005b7e:	4618      	mov	r0, r3
 8005b80:	f7ff ffc8 	bl	8005b14 <makeFreeRtosPriority>
 8005b84:	4601      	mov	r1, r0
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	695b      	ldr	r3, [r3, #20]
 8005b8a:	687a      	ldr	r2, [r7, #4]
 8005b8c:	6992      	ldr	r2, [r2, #24]
 8005b8e:	9202      	str	r2, [sp, #8]
 8005b90:	9301      	str	r3, [sp, #4]
 8005b92:	9100      	str	r1, [sp, #0]
 8005b94:	683b      	ldr	r3, [r7, #0]
 8005b96:	4632      	mov	r2, r6
 8005b98:	4629      	mov	r1, r5
 8005b9a:	4620      	mov	r0, r4
 8005b9c:	f000 f8ed 	bl	8005d7a <xTaskCreateStatic>
 8005ba0:	4603      	mov	r3, r0
 8005ba2:	60fb      	str	r3, [r7, #12]
 8005ba4:	e01c      	b.n	8005be0 <osThreadCreate+0x8e>
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	685c      	ldr	r4, [r3, #4]
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	681d      	ldr	r5, [r3, #0]
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	691b      	ldr	r3, [r3, #16]
 8005bb2:	b29e      	uxth	r6, r3
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8005bba:	4618      	mov	r0, r3
 8005bbc:	f7ff ffaa 	bl	8005b14 <makeFreeRtosPriority>
 8005bc0:	4602      	mov	r2, r0
 8005bc2:	f107 030c 	add.w	r3, r7, #12
 8005bc6:	9301      	str	r3, [sp, #4]
 8005bc8:	9200      	str	r2, [sp, #0]
 8005bca:	683b      	ldr	r3, [r7, #0]
 8005bcc:	4632      	mov	r2, r6
 8005bce:	4629      	mov	r1, r5
 8005bd0:	4620      	mov	r0, r4
 8005bd2:	f000 f92f 	bl	8005e34 <xTaskCreate>
 8005bd6:	4603      	mov	r3, r0
 8005bd8:	2b01      	cmp	r3, #1
 8005bda:	d001      	beq.n	8005be0 <osThreadCreate+0x8e>
 8005bdc:	2300      	movs	r3, #0
 8005bde:	e000      	b.n	8005be2 <osThreadCreate+0x90>
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	4618      	mov	r0, r3
 8005be4:	3714      	adds	r7, #20
 8005be6:	46bd      	mov	sp, r7
 8005be8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005bea <osDelay>:
 8005bea:	b580      	push	{r7, lr}
 8005bec:	b084      	sub	sp, #16
 8005bee:	af00      	add	r7, sp, #0
 8005bf0:	6078      	str	r0, [r7, #4]
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	60fb      	str	r3, [r7, #12]
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d001      	beq.n	8005c00 <osDelay+0x16>
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	e000      	b.n	8005c02 <osDelay+0x18>
 8005c00:	2301      	movs	r3, #1
 8005c02:	4618      	mov	r0, r3
 8005c04:	f000 fa4c 	bl	80060a0 <vTaskDelay>
 8005c08:	2300      	movs	r3, #0
 8005c0a:	4618      	mov	r0, r3
 8005c0c:	3710      	adds	r7, #16
 8005c0e:	46bd      	mov	sp, r7
 8005c10:	bd80      	pop	{r7, pc}

08005c12 <vListInitialise>:
 8005c12:	b480      	push	{r7}
 8005c14:	b083      	sub	sp, #12
 8005c16:	af00      	add	r7, sp, #0
 8005c18:	6078      	str	r0, [r7, #4]
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	f103 0208 	add.w	r2, r3, #8
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	605a      	str	r2, [r3, #4]
 8005c24:	687b      	ldr	r3, [r7, #4]
 8005c26:	f04f 32ff 	mov.w	r2, #4294967295
 8005c2a:	609a      	str	r2, [r3, #8]
 8005c2c:	687b      	ldr	r3, [r7, #4]
 8005c2e:	f103 0208 	add.w	r2, r3, #8
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	60da      	str	r2, [r3, #12]
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	f103 0208 	add.w	r2, r3, #8
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	611a      	str	r2, [r3, #16]
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	2200      	movs	r2, #0
 8005c44:	601a      	str	r2, [r3, #0]
 8005c46:	bf00      	nop
 8005c48:	370c      	adds	r7, #12
 8005c4a:	46bd      	mov	sp, r7
 8005c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c50:	4770      	bx	lr

08005c52 <vListInitialiseItem>:
 8005c52:	b480      	push	{r7}
 8005c54:	b083      	sub	sp, #12
 8005c56:	af00      	add	r7, sp, #0
 8005c58:	6078      	str	r0, [r7, #4]
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	2200      	movs	r2, #0
 8005c5e:	611a      	str	r2, [r3, #16]
 8005c60:	bf00      	nop
 8005c62:	370c      	adds	r7, #12
 8005c64:	46bd      	mov	sp, r7
 8005c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c6a:	4770      	bx	lr

08005c6c <vListInsertEnd>:
 8005c6c:	b480      	push	{r7}
 8005c6e:	b085      	sub	sp, #20
 8005c70:	af00      	add	r7, sp, #0
 8005c72:	6078      	str	r0, [r7, #4]
 8005c74:	6039      	str	r1, [r7, #0]
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	685b      	ldr	r3, [r3, #4]
 8005c7a:	60fb      	str	r3, [r7, #12]
 8005c7c:	683b      	ldr	r3, [r7, #0]
 8005c7e:	68fa      	ldr	r2, [r7, #12]
 8005c80:	605a      	str	r2, [r3, #4]
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	689a      	ldr	r2, [r3, #8]
 8005c86:	683b      	ldr	r3, [r7, #0]
 8005c88:	609a      	str	r2, [r3, #8]
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	689b      	ldr	r3, [r3, #8]
 8005c8e:	683a      	ldr	r2, [r7, #0]
 8005c90:	605a      	str	r2, [r3, #4]
 8005c92:	68fb      	ldr	r3, [r7, #12]
 8005c94:	683a      	ldr	r2, [r7, #0]
 8005c96:	609a      	str	r2, [r3, #8]
 8005c98:	683b      	ldr	r3, [r7, #0]
 8005c9a:	687a      	ldr	r2, [r7, #4]
 8005c9c:	611a      	str	r2, [r3, #16]
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	1c5a      	adds	r2, r3, #1
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	601a      	str	r2, [r3, #0]
 8005ca8:	bf00      	nop
 8005caa:	3714      	adds	r7, #20
 8005cac:	46bd      	mov	sp, r7
 8005cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb2:	4770      	bx	lr

08005cb4 <vListInsert>:
 8005cb4:	b480      	push	{r7}
 8005cb6:	b085      	sub	sp, #20
 8005cb8:	af00      	add	r7, sp, #0
 8005cba:	6078      	str	r0, [r7, #4]
 8005cbc:	6039      	str	r1, [r7, #0]
 8005cbe:	683b      	ldr	r3, [r7, #0]
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	60bb      	str	r3, [r7, #8]
 8005cc4:	68bb      	ldr	r3, [r7, #8]
 8005cc6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005cca:	d103      	bne.n	8005cd4 <vListInsert+0x20>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	691b      	ldr	r3, [r3, #16]
 8005cd0:	60fb      	str	r3, [r7, #12]
 8005cd2:	e00c      	b.n	8005cee <vListInsert+0x3a>
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	3308      	adds	r3, #8
 8005cd8:	60fb      	str	r3, [r7, #12]
 8005cda:	e002      	b.n	8005ce2 <vListInsert+0x2e>
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	685b      	ldr	r3, [r3, #4]
 8005ce0:	60fb      	str	r3, [r7, #12]
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	685b      	ldr	r3, [r3, #4]
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	68ba      	ldr	r2, [r7, #8]
 8005cea:	429a      	cmp	r2, r3
 8005cec:	d2f6      	bcs.n	8005cdc <vListInsert+0x28>
 8005cee:	68fb      	ldr	r3, [r7, #12]
 8005cf0:	685a      	ldr	r2, [r3, #4]
 8005cf2:	683b      	ldr	r3, [r7, #0]
 8005cf4:	605a      	str	r2, [r3, #4]
 8005cf6:	683b      	ldr	r3, [r7, #0]
 8005cf8:	685b      	ldr	r3, [r3, #4]
 8005cfa:	683a      	ldr	r2, [r7, #0]
 8005cfc:	609a      	str	r2, [r3, #8]
 8005cfe:	683b      	ldr	r3, [r7, #0]
 8005d00:	68fa      	ldr	r2, [r7, #12]
 8005d02:	609a      	str	r2, [r3, #8]
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	683a      	ldr	r2, [r7, #0]
 8005d08:	605a      	str	r2, [r3, #4]
 8005d0a:	683b      	ldr	r3, [r7, #0]
 8005d0c:	687a      	ldr	r2, [r7, #4]
 8005d0e:	611a      	str	r2, [r3, #16]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	1c5a      	adds	r2, r3, #1
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	601a      	str	r2, [r3, #0]
 8005d1a:	bf00      	nop
 8005d1c:	3714      	adds	r7, #20
 8005d1e:	46bd      	mov	sp, r7
 8005d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d24:	4770      	bx	lr

08005d26 <uxListRemove>:
 8005d26:	b480      	push	{r7}
 8005d28:	b085      	sub	sp, #20
 8005d2a:	af00      	add	r7, sp, #0
 8005d2c:	6078      	str	r0, [r7, #4]
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	691b      	ldr	r3, [r3, #16]
 8005d32:	60fb      	str	r3, [r7, #12]
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	685b      	ldr	r3, [r3, #4]
 8005d38:	687a      	ldr	r2, [r7, #4]
 8005d3a:	6892      	ldr	r2, [r2, #8]
 8005d3c:	609a      	str	r2, [r3, #8]
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	689b      	ldr	r3, [r3, #8]
 8005d42:	687a      	ldr	r2, [r7, #4]
 8005d44:	6852      	ldr	r2, [r2, #4]
 8005d46:	605a      	str	r2, [r3, #4]
 8005d48:	68fb      	ldr	r3, [r7, #12]
 8005d4a:	685b      	ldr	r3, [r3, #4]
 8005d4c:	687a      	ldr	r2, [r7, #4]
 8005d4e:	429a      	cmp	r2, r3
 8005d50:	d103      	bne.n	8005d5a <uxListRemove+0x34>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	689a      	ldr	r2, [r3, #8]
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	605a      	str	r2, [r3, #4]
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	2200      	movs	r2, #0
 8005d5e:	611a      	str	r2, [r3, #16]
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	1e5a      	subs	r2, r3, #1
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	601a      	str	r2, [r3, #0]
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	4618      	mov	r0, r3
 8005d70:	3714      	adds	r7, #20
 8005d72:	46bd      	mov	sp, r7
 8005d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d78:	4770      	bx	lr

08005d7a <xTaskCreateStatic>:
 8005d7a:	b580      	push	{r7, lr}
 8005d7c:	b08e      	sub	sp, #56	; 0x38
 8005d7e:	af04      	add	r7, sp, #16
 8005d80:	60f8      	str	r0, [r7, #12]
 8005d82:	60b9      	str	r1, [r7, #8]
 8005d84:	607a      	str	r2, [r7, #4]
 8005d86:	603b      	str	r3, [r7, #0]
 8005d88:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005d8a:	2b00      	cmp	r3, #0
 8005d8c:	d10a      	bne.n	8005da4 <xTaskCreateStatic+0x2a>
 8005d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d92:	f383 8811 	msr	BASEPRI, r3
 8005d96:	f3bf 8f6f 	isb	sy
 8005d9a:	f3bf 8f4f 	dsb	sy
 8005d9e:	623b      	str	r3, [r7, #32]
 8005da0:	bf00      	nop
 8005da2:	e7fe      	b.n	8005da2 <xTaskCreateStatic+0x28>
 8005da4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005da6:	2b00      	cmp	r3, #0
 8005da8:	d10a      	bne.n	8005dc0 <xTaskCreateStatic+0x46>
 8005daa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005dae:	f383 8811 	msr	BASEPRI, r3
 8005db2:	f3bf 8f6f 	isb	sy
 8005db6:	f3bf 8f4f 	dsb	sy
 8005dba:	61fb      	str	r3, [r7, #28]
 8005dbc:	bf00      	nop
 8005dbe:	e7fe      	b.n	8005dbe <xTaskCreateStatic+0x44>
 8005dc0:	2354      	movs	r3, #84	; 0x54
 8005dc2:	613b      	str	r3, [r7, #16]
 8005dc4:	693b      	ldr	r3, [r7, #16]
 8005dc6:	2b54      	cmp	r3, #84	; 0x54
 8005dc8:	d00a      	beq.n	8005de0 <xTaskCreateStatic+0x66>
 8005dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005dce:	f383 8811 	msr	BASEPRI, r3
 8005dd2:	f3bf 8f6f 	isb	sy
 8005dd6:	f3bf 8f4f 	dsb	sy
 8005dda:	61bb      	str	r3, [r7, #24]
 8005ddc:	bf00      	nop
 8005dde:	e7fe      	b.n	8005dde <xTaskCreateStatic+0x64>
 8005de0:	693b      	ldr	r3, [r7, #16]
 8005de2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005de4:	2b00      	cmp	r3, #0
 8005de6:	d01e      	beq.n	8005e26 <xTaskCreateStatic+0xac>
 8005de8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005dea:	2b00      	cmp	r3, #0
 8005dec:	d01b      	beq.n	8005e26 <xTaskCreateStatic+0xac>
 8005dee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005df0:	627b      	str	r3, [r7, #36]	; 0x24
 8005df2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005df4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005df6:	631a      	str	r2, [r3, #48]	; 0x30
 8005df8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005dfa:	2202      	movs	r2, #2
 8005dfc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005e00:	2300      	movs	r3, #0
 8005e02:	9303      	str	r3, [sp, #12]
 8005e04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e06:	9302      	str	r3, [sp, #8]
 8005e08:	f107 0314 	add.w	r3, r7, #20
 8005e0c:	9301      	str	r3, [sp, #4]
 8005e0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005e10:	9300      	str	r3, [sp, #0]
 8005e12:	683b      	ldr	r3, [r7, #0]
 8005e14:	687a      	ldr	r2, [r7, #4]
 8005e16:	68b9      	ldr	r1, [r7, #8]
 8005e18:	68f8      	ldr	r0, [r7, #12]
 8005e1a:	f000 f850 	bl	8005ebe <prvInitialiseNewTask>
 8005e1e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8005e20:	f000 f8d4 	bl	8005fcc <prvAddNewTaskToReadyList>
 8005e24:	e001      	b.n	8005e2a <xTaskCreateStatic+0xb0>
 8005e26:	2300      	movs	r3, #0
 8005e28:	617b      	str	r3, [r7, #20]
 8005e2a:	697b      	ldr	r3, [r7, #20]
 8005e2c:	4618      	mov	r0, r3
 8005e2e:	3728      	adds	r7, #40	; 0x28
 8005e30:	46bd      	mov	sp, r7
 8005e32:	bd80      	pop	{r7, pc}

08005e34 <xTaskCreate>:
 8005e34:	b580      	push	{r7, lr}
 8005e36:	b08c      	sub	sp, #48	; 0x30
 8005e38:	af04      	add	r7, sp, #16
 8005e3a:	60f8      	str	r0, [r7, #12]
 8005e3c:	60b9      	str	r1, [r7, #8]
 8005e3e:	603b      	str	r3, [r7, #0]
 8005e40:	4613      	mov	r3, r2
 8005e42:	80fb      	strh	r3, [r7, #6]
 8005e44:	88fb      	ldrh	r3, [r7, #6]
 8005e46:	009b      	lsls	r3, r3, #2
 8005e48:	4618      	mov	r0, r3
 8005e4a:	f000 fec5 	bl	8006bd8 <pvPortMalloc>
 8005e4e:	6178      	str	r0, [r7, #20]
 8005e50:	697b      	ldr	r3, [r7, #20]
 8005e52:	2b00      	cmp	r3, #0
 8005e54:	d00e      	beq.n	8005e74 <xTaskCreate+0x40>
 8005e56:	2054      	movs	r0, #84	; 0x54
 8005e58:	f000 febe 	bl	8006bd8 <pvPortMalloc>
 8005e5c:	61f8      	str	r0, [r7, #28]
 8005e5e:	69fb      	ldr	r3, [r7, #28]
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d003      	beq.n	8005e6c <xTaskCreate+0x38>
 8005e64:	69fb      	ldr	r3, [r7, #28]
 8005e66:	697a      	ldr	r2, [r7, #20]
 8005e68:	631a      	str	r2, [r3, #48]	; 0x30
 8005e6a:	e005      	b.n	8005e78 <xTaskCreate+0x44>
 8005e6c:	6978      	ldr	r0, [r7, #20]
 8005e6e:	f000 ff7f 	bl	8006d70 <vPortFree>
 8005e72:	e001      	b.n	8005e78 <xTaskCreate+0x44>
 8005e74:	2300      	movs	r3, #0
 8005e76:	61fb      	str	r3, [r7, #28]
 8005e78:	69fb      	ldr	r3, [r7, #28]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d017      	beq.n	8005eae <xTaskCreate+0x7a>
 8005e7e:	69fb      	ldr	r3, [r7, #28]
 8005e80:	2200      	movs	r2, #0
 8005e82:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005e86:	88fa      	ldrh	r2, [r7, #6]
 8005e88:	2300      	movs	r3, #0
 8005e8a:	9303      	str	r3, [sp, #12]
 8005e8c:	69fb      	ldr	r3, [r7, #28]
 8005e8e:	9302      	str	r3, [sp, #8]
 8005e90:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005e92:	9301      	str	r3, [sp, #4]
 8005e94:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005e96:	9300      	str	r3, [sp, #0]
 8005e98:	683b      	ldr	r3, [r7, #0]
 8005e9a:	68b9      	ldr	r1, [r7, #8]
 8005e9c:	68f8      	ldr	r0, [r7, #12]
 8005e9e:	f000 f80e 	bl	8005ebe <prvInitialiseNewTask>
 8005ea2:	69f8      	ldr	r0, [r7, #28]
 8005ea4:	f000 f892 	bl	8005fcc <prvAddNewTaskToReadyList>
 8005ea8:	2301      	movs	r3, #1
 8005eaa:	61bb      	str	r3, [r7, #24]
 8005eac:	e002      	b.n	8005eb4 <xTaskCreate+0x80>
 8005eae:	f04f 33ff 	mov.w	r3, #4294967295
 8005eb2:	61bb      	str	r3, [r7, #24]
 8005eb4:	69bb      	ldr	r3, [r7, #24]
 8005eb6:	4618      	mov	r0, r3
 8005eb8:	3720      	adds	r7, #32
 8005eba:	46bd      	mov	sp, r7
 8005ebc:	bd80      	pop	{r7, pc}

08005ebe <prvInitialiseNewTask>:
 8005ebe:	b580      	push	{r7, lr}
 8005ec0:	b088      	sub	sp, #32
 8005ec2:	af00      	add	r7, sp, #0
 8005ec4:	60f8      	str	r0, [r7, #12]
 8005ec6:	60b9      	str	r1, [r7, #8]
 8005ec8:	607a      	str	r2, [r7, #4]
 8005eca:	603b      	str	r3, [r7, #0]
 8005ecc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005ece:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8005ed6:	3b01      	subs	r3, #1
 8005ed8:	009b      	lsls	r3, r3, #2
 8005eda:	4413      	add	r3, r2
 8005edc:	61bb      	str	r3, [r7, #24]
 8005ede:	69bb      	ldr	r3, [r7, #24]
 8005ee0:	f023 0307 	bic.w	r3, r3, #7
 8005ee4:	61bb      	str	r3, [r7, #24]
 8005ee6:	69bb      	ldr	r3, [r7, #24]
 8005ee8:	f003 0307 	and.w	r3, r3, #7
 8005eec:	2b00      	cmp	r3, #0
 8005eee:	d00a      	beq.n	8005f06 <prvInitialiseNewTask+0x48>
 8005ef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005ef4:	f383 8811 	msr	BASEPRI, r3
 8005ef8:	f3bf 8f6f 	isb	sy
 8005efc:	f3bf 8f4f 	dsb	sy
 8005f00:	617b      	str	r3, [r7, #20]
 8005f02:	bf00      	nop
 8005f04:	e7fe      	b.n	8005f04 <prvInitialiseNewTask+0x46>
 8005f06:	68bb      	ldr	r3, [r7, #8]
 8005f08:	2b00      	cmp	r3, #0
 8005f0a:	d01f      	beq.n	8005f4c <prvInitialiseNewTask+0x8e>
 8005f0c:	2300      	movs	r3, #0
 8005f0e:	61fb      	str	r3, [r7, #28]
 8005f10:	e012      	b.n	8005f38 <prvInitialiseNewTask+0x7a>
 8005f12:	68ba      	ldr	r2, [r7, #8]
 8005f14:	69fb      	ldr	r3, [r7, #28]
 8005f16:	4413      	add	r3, r2
 8005f18:	7819      	ldrb	r1, [r3, #0]
 8005f1a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005f1c:	69fb      	ldr	r3, [r7, #28]
 8005f1e:	4413      	add	r3, r2
 8005f20:	3334      	adds	r3, #52	; 0x34
 8005f22:	460a      	mov	r2, r1
 8005f24:	701a      	strb	r2, [r3, #0]
 8005f26:	68ba      	ldr	r2, [r7, #8]
 8005f28:	69fb      	ldr	r3, [r7, #28]
 8005f2a:	4413      	add	r3, r2
 8005f2c:	781b      	ldrb	r3, [r3, #0]
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d006      	beq.n	8005f40 <prvInitialiseNewTask+0x82>
 8005f32:	69fb      	ldr	r3, [r7, #28]
 8005f34:	3301      	adds	r3, #1
 8005f36:	61fb      	str	r3, [r7, #28]
 8005f38:	69fb      	ldr	r3, [r7, #28]
 8005f3a:	2b0f      	cmp	r3, #15
 8005f3c:	d9e9      	bls.n	8005f12 <prvInitialiseNewTask+0x54>
 8005f3e:	e000      	b.n	8005f42 <prvInitialiseNewTask+0x84>
 8005f40:	bf00      	nop
 8005f42:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f44:	2200      	movs	r2, #0
 8005f46:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005f4a:	e003      	b.n	8005f54 <prvInitialiseNewTask+0x96>
 8005f4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f4e:	2200      	movs	r2, #0
 8005f50:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005f54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f56:	2b06      	cmp	r3, #6
 8005f58:	d901      	bls.n	8005f5e <prvInitialiseNewTask+0xa0>
 8005f5a:	2306      	movs	r3, #6
 8005f5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f5e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f60:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8005f62:	62da      	str	r2, [r3, #44]	; 0x2c
 8005f64:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f66:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8005f68:	645a      	str	r2, [r3, #68]	; 0x44
 8005f6a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f6c:	2200      	movs	r2, #0
 8005f6e:	649a      	str	r2, [r3, #72]	; 0x48
 8005f70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f72:	3304      	adds	r3, #4
 8005f74:	4618      	mov	r0, r3
 8005f76:	f7ff fe6c 	bl	8005c52 <vListInitialiseItem>
 8005f7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f7c:	3318      	adds	r3, #24
 8005f7e:	4618      	mov	r0, r3
 8005f80:	f7ff fe67 	bl	8005c52 <vListInitialiseItem>
 8005f84:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f86:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005f88:	611a      	str	r2, [r3, #16]
 8005f8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f8c:	f1c3 0207 	rsb	r2, r3, #7
 8005f90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f92:	619a      	str	r2, [r3, #24]
 8005f94:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f96:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005f98:	625a      	str	r2, [r3, #36]	; 0x24
 8005f9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f9c:	2200      	movs	r2, #0
 8005f9e:	64da      	str	r2, [r3, #76]	; 0x4c
 8005fa0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005fa8:	683a      	ldr	r2, [r7, #0]
 8005faa:	68f9      	ldr	r1, [r7, #12]
 8005fac:	69b8      	ldr	r0, [r7, #24]
 8005fae:	f000 fc05 	bl	80067bc <pxPortInitialiseStack>
 8005fb2:	4602      	mov	r2, r0
 8005fb4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005fb6:	601a      	str	r2, [r3, #0]
 8005fb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005fba:	2b00      	cmp	r3, #0
 8005fbc:	d002      	beq.n	8005fc4 <prvInitialiseNewTask+0x106>
 8005fbe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005fc0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005fc2:	601a      	str	r2, [r3, #0]
 8005fc4:	bf00      	nop
 8005fc6:	3720      	adds	r7, #32
 8005fc8:	46bd      	mov	sp, r7
 8005fca:	bd80      	pop	{r7, pc}

08005fcc <prvAddNewTaskToReadyList>:
 8005fcc:	b580      	push	{r7, lr}
 8005fce:	b082      	sub	sp, #8
 8005fd0:	af00      	add	r7, sp, #0
 8005fd2:	6078      	str	r0, [r7, #4]
 8005fd4:	f000 fd1e 	bl	8006a14 <vPortEnterCritical>
 8005fd8:	4b2a      	ldr	r3, [pc, #168]	; (8006084 <prvAddNewTaskToReadyList+0xb8>)
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	3301      	adds	r3, #1
 8005fde:	4a29      	ldr	r2, [pc, #164]	; (8006084 <prvAddNewTaskToReadyList+0xb8>)
 8005fe0:	6013      	str	r3, [r2, #0]
 8005fe2:	4b29      	ldr	r3, [pc, #164]	; (8006088 <prvAddNewTaskToReadyList+0xbc>)
 8005fe4:	681b      	ldr	r3, [r3, #0]
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d109      	bne.n	8005ffe <prvAddNewTaskToReadyList+0x32>
 8005fea:	4a27      	ldr	r2, [pc, #156]	; (8006088 <prvAddNewTaskToReadyList+0xbc>)
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	6013      	str	r3, [r2, #0]
 8005ff0:	4b24      	ldr	r3, [pc, #144]	; (8006084 <prvAddNewTaskToReadyList+0xb8>)
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	2b01      	cmp	r3, #1
 8005ff6:	d110      	bne.n	800601a <prvAddNewTaskToReadyList+0x4e>
 8005ff8:	f000 fabc 	bl	8006574 <prvInitialiseTaskLists>
 8005ffc:	e00d      	b.n	800601a <prvAddNewTaskToReadyList+0x4e>
 8005ffe:	4b23      	ldr	r3, [pc, #140]	; (800608c <prvAddNewTaskToReadyList+0xc0>)
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	2b00      	cmp	r3, #0
 8006004:	d109      	bne.n	800601a <prvAddNewTaskToReadyList+0x4e>
 8006006:	4b20      	ldr	r3, [pc, #128]	; (8006088 <prvAddNewTaskToReadyList+0xbc>)
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006010:	429a      	cmp	r2, r3
 8006012:	d802      	bhi.n	800601a <prvAddNewTaskToReadyList+0x4e>
 8006014:	4a1c      	ldr	r2, [pc, #112]	; (8006088 <prvAddNewTaskToReadyList+0xbc>)
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	6013      	str	r3, [r2, #0]
 800601a:	4b1d      	ldr	r3, [pc, #116]	; (8006090 <prvAddNewTaskToReadyList+0xc4>)
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	3301      	adds	r3, #1
 8006020:	4a1b      	ldr	r2, [pc, #108]	; (8006090 <prvAddNewTaskToReadyList+0xc4>)
 8006022:	6013      	str	r3, [r2, #0]
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006028:	2201      	movs	r2, #1
 800602a:	409a      	lsls	r2, r3
 800602c:	4b19      	ldr	r3, [pc, #100]	; (8006094 <prvAddNewTaskToReadyList+0xc8>)
 800602e:	681b      	ldr	r3, [r3, #0]
 8006030:	4313      	orrs	r3, r2
 8006032:	4a18      	ldr	r2, [pc, #96]	; (8006094 <prvAddNewTaskToReadyList+0xc8>)
 8006034:	6013      	str	r3, [r2, #0]
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800603a:	4613      	mov	r3, r2
 800603c:	009b      	lsls	r3, r3, #2
 800603e:	4413      	add	r3, r2
 8006040:	009b      	lsls	r3, r3, #2
 8006042:	4a15      	ldr	r2, [pc, #84]	; (8006098 <prvAddNewTaskToReadyList+0xcc>)
 8006044:	441a      	add	r2, r3
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	3304      	adds	r3, #4
 800604a:	4619      	mov	r1, r3
 800604c:	4610      	mov	r0, r2
 800604e:	f7ff fe0d 	bl	8005c6c <vListInsertEnd>
 8006052:	f000 fd0f 	bl	8006a74 <vPortExitCritical>
 8006056:	4b0d      	ldr	r3, [pc, #52]	; (800608c <prvAddNewTaskToReadyList+0xc0>)
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	2b00      	cmp	r3, #0
 800605c:	d00e      	beq.n	800607c <prvAddNewTaskToReadyList+0xb0>
 800605e:	4b0a      	ldr	r3, [pc, #40]	; (8006088 <prvAddNewTaskToReadyList+0xbc>)
 8006060:	681b      	ldr	r3, [r3, #0]
 8006062:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006068:	429a      	cmp	r2, r3
 800606a:	d207      	bcs.n	800607c <prvAddNewTaskToReadyList+0xb0>
 800606c:	4b0b      	ldr	r3, [pc, #44]	; (800609c <prvAddNewTaskToReadyList+0xd0>)
 800606e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006072:	601a      	str	r2, [r3, #0]
 8006074:	f3bf 8f4f 	dsb	sy
 8006078:	f3bf 8f6f 	isb	sy
 800607c:	bf00      	nop
 800607e:	3708      	adds	r7, #8
 8006080:	46bd      	mov	sp, r7
 8006082:	bd80      	pop	{r7, pc}
 8006084:	20000768 	.word	0x20000768
 8006088:	20000668 	.word	0x20000668
 800608c:	20000774 	.word	0x20000774
 8006090:	20000784 	.word	0x20000784
 8006094:	20000770 	.word	0x20000770
 8006098:	2000066c 	.word	0x2000066c
 800609c:	e000ed04 	.word	0xe000ed04

080060a0 <vTaskDelay>:
 80060a0:	b580      	push	{r7, lr}
 80060a2:	b084      	sub	sp, #16
 80060a4:	af00      	add	r7, sp, #0
 80060a6:	6078      	str	r0, [r7, #4]
 80060a8:	2300      	movs	r3, #0
 80060aa:	60fb      	str	r3, [r7, #12]
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	2b00      	cmp	r3, #0
 80060b0:	d017      	beq.n	80060e2 <vTaskDelay+0x42>
 80060b2:	4b13      	ldr	r3, [pc, #76]	; (8006100 <vTaskDelay+0x60>)
 80060b4:	681b      	ldr	r3, [r3, #0]
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d00a      	beq.n	80060d0 <vTaskDelay+0x30>
 80060ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80060be:	f383 8811 	msr	BASEPRI, r3
 80060c2:	f3bf 8f6f 	isb	sy
 80060c6:	f3bf 8f4f 	dsb	sy
 80060ca:	60bb      	str	r3, [r7, #8]
 80060cc:	bf00      	nop
 80060ce:	e7fe      	b.n	80060ce <vTaskDelay+0x2e>
 80060d0:	f000 f87a 	bl	80061c8 <vTaskSuspendAll>
 80060d4:	2100      	movs	r1, #0
 80060d6:	6878      	ldr	r0, [r7, #4]
 80060d8:	f000 fb0a 	bl	80066f0 <prvAddCurrentTaskToDelayedList>
 80060dc:	f000 f882 	bl	80061e4 <xTaskResumeAll>
 80060e0:	60f8      	str	r0, [r7, #12]
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	2b00      	cmp	r3, #0
 80060e6:	d107      	bne.n	80060f8 <vTaskDelay+0x58>
 80060e8:	4b06      	ldr	r3, [pc, #24]	; (8006104 <vTaskDelay+0x64>)
 80060ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80060ee:	601a      	str	r2, [r3, #0]
 80060f0:	f3bf 8f4f 	dsb	sy
 80060f4:	f3bf 8f6f 	isb	sy
 80060f8:	bf00      	nop
 80060fa:	3710      	adds	r7, #16
 80060fc:	46bd      	mov	sp, r7
 80060fe:	bd80      	pop	{r7, pc}
 8006100:	20000790 	.word	0x20000790
 8006104:	e000ed04 	.word	0xe000ed04

08006108 <vTaskStartScheduler>:
 8006108:	b580      	push	{r7, lr}
 800610a:	b08a      	sub	sp, #40	; 0x28
 800610c:	af04      	add	r7, sp, #16
 800610e:	2300      	movs	r3, #0
 8006110:	60bb      	str	r3, [r7, #8]
 8006112:	2300      	movs	r3, #0
 8006114:	607b      	str	r3, [r7, #4]
 8006116:	463a      	mov	r2, r7
 8006118:	1d39      	adds	r1, r7, #4
 800611a:	f107 0308 	add.w	r3, r7, #8
 800611e:	4618      	mov	r0, r3
 8006120:	f7fb f8cc 	bl	80012bc <vApplicationGetIdleTaskMemory>
 8006124:	6839      	ldr	r1, [r7, #0]
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	68ba      	ldr	r2, [r7, #8]
 800612a:	9202      	str	r2, [sp, #8]
 800612c:	9301      	str	r3, [sp, #4]
 800612e:	2300      	movs	r3, #0
 8006130:	9300      	str	r3, [sp, #0]
 8006132:	2300      	movs	r3, #0
 8006134:	460a      	mov	r2, r1
 8006136:	491e      	ldr	r1, [pc, #120]	; (80061b0 <vTaskStartScheduler+0xa8>)
 8006138:	481e      	ldr	r0, [pc, #120]	; (80061b4 <vTaskStartScheduler+0xac>)
 800613a:	f7ff fe1e 	bl	8005d7a <xTaskCreateStatic>
 800613e:	4603      	mov	r3, r0
 8006140:	4a1d      	ldr	r2, [pc, #116]	; (80061b8 <vTaskStartScheduler+0xb0>)
 8006142:	6013      	str	r3, [r2, #0]
 8006144:	4b1c      	ldr	r3, [pc, #112]	; (80061b8 <vTaskStartScheduler+0xb0>)
 8006146:	681b      	ldr	r3, [r3, #0]
 8006148:	2b00      	cmp	r3, #0
 800614a:	d002      	beq.n	8006152 <vTaskStartScheduler+0x4a>
 800614c:	2301      	movs	r3, #1
 800614e:	617b      	str	r3, [r7, #20]
 8006150:	e001      	b.n	8006156 <vTaskStartScheduler+0x4e>
 8006152:	2300      	movs	r3, #0
 8006154:	617b      	str	r3, [r7, #20]
 8006156:	697b      	ldr	r3, [r7, #20]
 8006158:	2b01      	cmp	r3, #1
 800615a:	d116      	bne.n	800618a <vTaskStartScheduler+0x82>
 800615c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006160:	f383 8811 	msr	BASEPRI, r3
 8006164:	f3bf 8f6f 	isb	sy
 8006168:	f3bf 8f4f 	dsb	sy
 800616c:	613b      	str	r3, [r7, #16]
 800616e:	bf00      	nop
 8006170:	4b12      	ldr	r3, [pc, #72]	; (80061bc <vTaskStartScheduler+0xb4>)
 8006172:	f04f 32ff 	mov.w	r2, #4294967295
 8006176:	601a      	str	r2, [r3, #0]
 8006178:	4b11      	ldr	r3, [pc, #68]	; (80061c0 <vTaskStartScheduler+0xb8>)
 800617a:	2201      	movs	r2, #1
 800617c:	601a      	str	r2, [r3, #0]
 800617e:	4b11      	ldr	r3, [pc, #68]	; (80061c4 <vTaskStartScheduler+0xbc>)
 8006180:	2200      	movs	r2, #0
 8006182:	601a      	str	r2, [r3, #0]
 8006184:	f000 fba4 	bl	80068d0 <xPortStartScheduler>
 8006188:	e00e      	b.n	80061a8 <vTaskStartScheduler+0xa0>
 800618a:	697b      	ldr	r3, [r7, #20]
 800618c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006190:	d10a      	bne.n	80061a8 <vTaskStartScheduler+0xa0>
 8006192:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006196:	f383 8811 	msr	BASEPRI, r3
 800619a:	f3bf 8f6f 	isb	sy
 800619e:	f3bf 8f4f 	dsb	sy
 80061a2:	60fb      	str	r3, [r7, #12]
 80061a4:	bf00      	nop
 80061a6:	e7fe      	b.n	80061a6 <vTaskStartScheduler+0x9e>
 80061a8:	bf00      	nop
 80061aa:	3718      	adds	r7, #24
 80061ac:	46bd      	mov	sp, r7
 80061ae:	bd80      	pop	{r7, pc}
 80061b0:	08007774 	.word	0x08007774
 80061b4:	08006545 	.word	0x08006545
 80061b8:	2000078c 	.word	0x2000078c
 80061bc:	20000788 	.word	0x20000788
 80061c0:	20000774 	.word	0x20000774
 80061c4:	2000076c 	.word	0x2000076c

080061c8 <vTaskSuspendAll>:
 80061c8:	b480      	push	{r7}
 80061ca:	af00      	add	r7, sp, #0
 80061cc:	4b04      	ldr	r3, [pc, #16]	; (80061e0 <vTaskSuspendAll+0x18>)
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	3301      	adds	r3, #1
 80061d2:	4a03      	ldr	r2, [pc, #12]	; (80061e0 <vTaskSuspendAll+0x18>)
 80061d4:	6013      	str	r3, [r2, #0]
 80061d6:	bf00      	nop
 80061d8:	46bd      	mov	sp, r7
 80061da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061de:	4770      	bx	lr
 80061e0:	20000790 	.word	0x20000790

080061e4 <xTaskResumeAll>:
 80061e4:	b580      	push	{r7, lr}
 80061e6:	b084      	sub	sp, #16
 80061e8:	af00      	add	r7, sp, #0
 80061ea:	2300      	movs	r3, #0
 80061ec:	60fb      	str	r3, [r7, #12]
 80061ee:	2300      	movs	r3, #0
 80061f0:	60bb      	str	r3, [r7, #8]
 80061f2:	4b41      	ldr	r3, [pc, #260]	; (80062f8 <xTaskResumeAll+0x114>)
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d10a      	bne.n	8006210 <xTaskResumeAll+0x2c>
 80061fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061fe:	f383 8811 	msr	BASEPRI, r3
 8006202:	f3bf 8f6f 	isb	sy
 8006206:	f3bf 8f4f 	dsb	sy
 800620a:	603b      	str	r3, [r7, #0]
 800620c:	bf00      	nop
 800620e:	e7fe      	b.n	800620e <xTaskResumeAll+0x2a>
 8006210:	f000 fc00 	bl	8006a14 <vPortEnterCritical>
 8006214:	4b38      	ldr	r3, [pc, #224]	; (80062f8 <xTaskResumeAll+0x114>)
 8006216:	681b      	ldr	r3, [r3, #0]
 8006218:	3b01      	subs	r3, #1
 800621a:	4a37      	ldr	r2, [pc, #220]	; (80062f8 <xTaskResumeAll+0x114>)
 800621c:	6013      	str	r3, [r2, #0]
 800621e:	4b36      	ldr	r3, [pc, #216]	; (80062f8 <xTaskResumeAll+0x114>)
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	2b00      	cmp	r3, #0
 8006224:	d161      	bne.n	80062ea <xTaskResumeAll+0x106>
 8006226:	4b35      	ldr	r3, [pc, #212]	; (80062fc <xTaskResumeAll+0x118>)
 8006228:	681b      	ldr	r3, [r3, #0]
 800622a:	2b00      	cmp	r3, #0
 800622c:	d05d      	beq.n	80062ea <xTaskResumeAll+0x106>
 800622e:	e02e      	b.n	800628e <xTaskResumeAll+0xaa>
 8006230:	4b33      	ldr	r3, [pc, #204]	; (8006300 <xTaskResumeAll+0x11c>)
 8006232:	68db      	ldr	r3, [r3, #12]
 8006234:	68db      	ldr	r3, [r3, #12]
 8006236:	60fb      	str	r3, [r7, #12]
 8006238:	68fb      	ldr	r3, [r7, #12]
 800623a:	3318      	adds	r3, #24
 800623c:	4618      	mov	r0, r3
 800623e:	f7ff fd72 	bl	8005d26 <uxListRemove>
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	3304      	adds	r3, #4
 8006246:	4618      	mov	r0, r3
 8006248:	f7ff fd6d 	bl	8005d26 <uxListRemove>
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006250:	2201      	movs	r2, #1
 8006252:	409a      	lsls	r2, r3
 8006254:	4b2b      	ldr	r3, [pc, #172]	; (8006304 <xTaskResumeAll+0x120>)
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	4313      	orrs	r3, r2
 800625a:	4a2a      	ldr	r2, [pc, #168]	; (8006304 <xTaskResumeAll+0x120>)
 800625c:	6013      	str	r3, [r2, #0]
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006262:	4613      	mov	r3, r2
 8006264:	009b      	lsls	r3, r3, #2
 8006266:	4413      	add	r3, r2
 8006268:	009b      	lsls	r3, r3, #2
 800626a:	4a27      	ldr	r2, [pc, #156]	; (8006308 <xTaskResumeAll+0x124>)
 800626c:	441a      	add	r2, r3
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	3304      	adds	r3, #4
 8006272:	4619      	mov	r1, r3
 8006274:	4610      	mov	r0, r2
 8006276:	f7ff fcf9 	bl	8005c6c <vListInsertEnd>
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800627e:	4b23      	ldr	r3, [pc, #140]	; (800630c <xTaskResumeAll+0x128>)
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006284:	429a      	cmp	r2, r3
 8006286:	d302      	bcc.n	800628e <xTaskResumeAll+0xaa>
 8006288:	4b21      	ldr	r3, [pc, #132]	; (8006310 <xTaskResumeAll+0x12c>)
 800628a:	2201      	movs	r2, #1
 800628c:	601a      	str	r2, [r3, #0]
 800628e:	4b1c      	ldr	r3, [pc, #112]	; (8006300 <xTaskResumeAll+0x11c>)
 8006290:	681b      	ldr	r3, [r3, #0]
 8006292:	2b00      	cmp	r3, #0
 8006294:	d1cc      	bne.n	8006230 <xTaskResumeAll+0x4c>
 8006296:	68fb      	ldr	r3, [r7, #12]
 8006298:	2b00      	cmp	r3, #0
 800629a:	d001      	beq.n	80062a0 <xTaskResumeAll+0xbc>
 800629c:	f000 fa08 	bl	80066b0 <prvResetNextTaskUnblockTime>
 80062a0:	4b1c      	ldr	r3, [pc, #112]	; (8006314 <xTaskResumeAll+0x130>)
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	607b      	str	r3, [r7, #4]
 80062a6:	687b      	ldr	r3, [r7, #4]
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d010      	beq.n	80062ce <xTaskResumeAll+0xea>
 80062ac:	f000 f836 	bl	800631c <xTaskIncrementTick>
 80062b0:	4603      	mov	r3, r0
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d002      	beq.n	80062bc <xTaskResumeAll+0xd8>
 80062b6:	4b16      	ldr	r3, [pc, #88]	; (8006310 <xTaskResumeAll+0x12c>)
 80062b8:	2201      	movs	r2, #1
 80062ba:	601a      	str	r2, [r3, #0]
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	3b01      	subs	r3, #1
 80062c0:	607b      	str	r3, [r7, #4]
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d1f1      	bne.n	80062ac <xTaskResumeAll+0xc8>
 80062c8:	4b12      	ldr	r3, [pc, #72]	; (8006314 <xTaskResumeAll+0x130>)
 80062ca:	2200      	movs	r2, #0
 80062cc:	601a      	str	r2, [r3, #0]
 80062ce:	4b10      	ldr	r3, [pc, #64]	; (8006310 <xTaskResumeAll+0x12c>)
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d009      	beq.n	80062ea <xTaskResumeAll+0x106>
 80062d6:	2301      	movs	r3, #1
 80062d8:	60bb      	str	r3, [r7, #8]
 80062da:	4b0f      	ldr	r3, [pc, #60]	; (8006318 <xTaskResumeAll+0x134>)
 80062dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80062e0:	601a      	str	r2, [r3, #0]
 80062e2:	f3bf 8f4f 	dsb	sy
 80062e6:	f3bf 8f6f 	isb	sy
 80062ea:	f000 fbc3 	bl	8006a74 <vPortExitCritical>
 80062ee:	68bb      	ldr	r3, [r7, #8]
 80062f0:	4618      	mov	r0, r3
 80062f2:	3710      	adds	r7, #16
 80062f4:	46bd      	mov	sp, r7
 80062f6:	bd80      	pop	{r7, pc}
 80062f8:	20000790 	.word	0x20000790
 80062fc:	20000768 	.word	0x20000768
 8006300:	20000728 	.word	0x20000728
 8006304:	20000770 	.word	0x20000770
 8006308:	2000066c 	.word	0x2000066c
 800630c:	20000668 	.word	0x20000668
 8006310:	2000077c 	.word	0x2000077c
 8006314:	20000778 	.word	0x20000778
 8006318:	e000ed04 	.word	0xe000ed04

0800631c <xTaskIncrementTick>:
 800631c:	b580      	push	{r7, lr}
 800631e:	b086      	sub	sp, #24
 8006320:	af00      	add	r7, sp, #0
 8006322:	2300      	movs	r3, #0
 8006324:	617b      	str	r3, [r7, #20]
 8006326:	4b4e      	ldr	r3, [pc, #312]	; (8006460 <xTaskIncrementTick+0x144>)
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	2b00      	cmp	r3, #0
 800632c:	f040 808e 	bne.w	800644c <xTaskIncrementTick+0x130>
 8006330:	4b4c      	ldr	r3, [pc, #304]	; (8006464 <xTaskIncrementTick+0x148>)
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	3301      	adds	r3, #1
 8006336:	613b      	str	r3, [r7, #16]
 8006338:	4a4a      	ldr	r2, [pc, #296]	; (8006464 <xTaskIncrementTick+0x148>)
 800633a:	693b      	ldr	r3, [r7, #16]
 800633c:	6013      	str	r3, [r2, #0]
 800633e:	693b      	ldr	r3, [r7, #16]
 8006340:	2b00      	cmp	r3, #0
 8006342:	d120      	bne.n	8006386 <xTaskIncrementTick+0x6a>
 8006344:	4b48      	ldr	r3, [pc, #288]	; (8006468 <xTaskIncrementTick+0x14c>)
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	2b00      	cmp	r3, #0
 800634c:	d00a      	beq.n	8006364 <xTaskIncrementTick+0x48>
 800634e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006352:	f383 8811 	msr	BASEPRI, r3
 8006356:	f3bf 8f6f 	isb	sy
 800635a:	f3bf 8f4f 	dsb	sy
 800635e:	603b      	str	r3, [r7, #0]
 8006360:	bf00      	nop
 8006362:	e7fe      	b.n	8006362 <xTaskIncrementTick+0x46>
 8006364:	4b40      	ldr	r3, [pc, #256]	; (8006468 <xTaskIncrementTick+0x14c>)
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	60fb      	str	r3, [r7, #12]
 800636a:	4b40      	ldr	r3, [pc, #256]	; (800646c <xTaskIncrementTick+0x150>)
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	4a3e      	ldr	r2, [pc, #248]	; (8006468 <xTaskIncrementTick+0x14c>)
 8006370:	6013      	str	r3, [r2, #0]
 8006372:	4a3e      	ldr	r2, [pc, #248]	; (800646c <xTaskIncrementTick+0x150>)
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	6013      	str	r3, [r2, #0]
 8006378:	4b3d      	ldr	r3, [pc, #244]	; (8006470 <xTaskIncrementTick+0x154>)
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	3301      	adds	r3, #1
 800637e:	4a3c      	ldr	r2, [pc, #240]	; (8006470 <xTaskIncrementTick+0x154>)
 8006380:	6013      	str	r3, [r2, #0]
 8006382:	f000 f995 	bl	80066b0 <prvResetNextTaskUnblockTime>
 8006386:	4b3b      	ldr	r3, [pc, #236]	; (8006474 <xTaskIncrementTick+0x158>)
 8006388:	681b      	ldr	r3, [r3, #0]
 800638a:	693a      	ldr	r2, [r7, #16]
 800638c:	429a      	cmp	r2, r3
 800638e:	d348      	bcc.n	8006422 <xTaskIncrementTick+0x106>
 8006390:	4b35      	ldr	r3, [pc, #212]	; (8006468 <xTaskIncrementTick+0x14c>)
 8006392:	681b      	ldr	r3, [r3, #0]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	2b00      	cmp	r3, #0
 8006398:	d104      	bne.n	80063a4 <xTaskIncrementTick+0x88>
 800639a:	4b36      	ldr	r3, [pc, #216]	; (8006474 <xTaskIncrementTick+0x158>)
 800639c:	f04f 32ff 	mov.w	r2, #4294967295
 80063a0:	601a      	str	r2, [r3, #0]
 80063a2:	e03e      	b.n	8006422 <xTaskIncrementTick+0x106>
 80063a4:	4b30      	ldr	r3, [pc, #192]	; (8006468 <xTaskIncrementTick+0x14c>)
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	68db      	ldr	r3, [r3, #12]
 80063aa:	68db      	ldr	r3, [r3, #12]
 80063ac:	60bb      	str	r3, [r7, #8]
 80063ae:	68bb      	ldr	r3, [r7, #8]
 80063b0:	685b      	ldr	r3, [r3, #4]
 80063b2:	607b      	str	r3, [r7, #4]
 80063b4:	693a      	ldr	r2, [r7, #16]
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	429a      	cmp	r2, r3
 80063ba:	d203      	bcs.n	80063c4 <xTaskIncrementTick+0xa8>
 80063bc:	4a2d      	ldr	r2, [pc, #180]	; (8006474 <xTaskIncrementTick+0x158>)
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	6013      	str	r3, [r2, #0]
 80063c2:	e02e      	b.n	8006422 <xTaskIncrementTick+0x106>
 80063c4:	68bb      	ldr	r3, [r7, #8]
 80063c6:	3304      	adds	r3, #4
 80063c8:	4618      	mov	r0, r3
 80063ca:	f7ff fcac 	bl	8005d26 <uxListRemove>
 80063ce:	68bb      	ldr	r3, [r7, #8]
 80063d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80063d2:	2b00      	cmp	r3, #0
 80063d4:	d004      	beq.n	80063e0 <xTaskIncrementTick+0xc4>
 80063d6:	68bb      	ldr	r3, [r7, #8]
 80063d8:	3318      	adds	r3, #24
 80063da:	4618      	mov	r0, r3
 80063dc:	f7ff fca3 	bl	8005d26 <uxListRemove>
 80063e0:	68bb      	ldr	r3, [r7, #8]
 80063e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80063e4:	2201      	movs	r2, #1
 80063e6:	409a      	lsls	r2, r3
 80063e8:	4b23      	ldr	r3, [pc, #140]	; (8006478 <xTaskIncrementTick+0x15c>)
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	4313      	orrs	r3, r2
 80063ee:	4a22      	ldr	r2, [pc, #136]	; (8006478 <xTaskIncrementTick+0x15c>)
 80063f0:	6013      	str	r3, [r2, #0]
 80063f2:	68bb      	ldr	r3, [r7, #8]
 80063f4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80063f6:	4613      	mov	r3, r2
 80063f8:	009b      	lsls	r3, r3, #2
 80063fa:	4413      	add	r3, r2
 80063fc:	009b      	lsls	r3, r3, #2
 80063fe:	4a1f      	ldr	r2, [pc, #124]	; (800647c <xTaskIncrementTick+0x160>)
 8006400:	441a      	add	r2, r3
 8006402:	68bb      	ldr	r3, [r7, #8]
 8006404:	3304      	adds	r3, #4
 8006406:	4619      	mov	r1, r3
 8006408:	4610      	mov	r0, r2
 800640a:	f7ff fc2f 	bl	8005c6c <vListInsertEnd>
 800640e:	68bb      	ldr	r3, [r7, #8]
 8006410:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006412:	4b1b      	ldr	r3, [pc, #108]	; (8006480 <xTaskIncrementTick+0x164>)
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006418:	429a      	cmp	r2, r3
 800641a:	d3b9      	bcc.n	8006390 <xTaskIncrementTick+0x74>
 800641c:	2301      	movs	r3, #1
 800641e:	617b      	str	r3, [r7, #20]
 8006420:	e7b6      	b.n	8006390 <xTaskIncrementTick+0x74>
 8006422:	4b17      	ldr	r3, [pc, #92]	; (8006480 <xTaskIncrementTick+0x164>)
 8006424:	681b      	ldr	r3, [r3, #0]
 8006426:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006428:	4914      	ldr	r1, [pc, #80]	; (800647c <xTaskIncrementTick+0x160>)
 800642a:	4613      	mov	r3, r2
 800642c:	009b      	lsls	r3, r3, #2
 800642e:	4413      	add	r3, r2
 8006430:	009b      	lsls	r3, r3, #2
 8006432:	440b      	add	r3, r1
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	2b01      	cmp	r3, #1
 8006438:	d901      	bls.n	800643e <xTaskIncrementTick+0x122>
 800643a:	2301      	movs	r3, #1
 800643c:	617b      	str	r3, [r7, #20]
 800643e:	4b11      	ldr	r3, [pc, #68]	; (8006484 <xTaskIncrementTick+0x168>)
 8006440:	681b      	ldr	r3, [r3, #0]
 8006442:	2b00      	cmp	r3, #0
 8006444:	d007      	beq.n	8006456 <xTaskIncrementTick+0x13a>
 8006446:	2301      	movs	r3, #1
 8006448:	617b      	str	r3, [r7, #20]
 800644a:	e004      	b.n	8006456 <xTaskIncrementTick+0x13a>
 800644c:	4b0e      	ldr	r3, [pc, #56]	; (8006488 <xTaskIncrementTick+0x16c>)
 800644e:	681b      	ldr	r3, [r3, #0]
 8006450:	3301      	adds	r3, #1
 8006452:	4a0d      	ldr	r2, [pc, #52]	; (8006488 <xTaskIncrementTick+0x16c>)
 8006454:	6013      	str	r3, [r2, #0]
 8006456:	697b      	ldr	r3, [r7, #20]
 8006458:	4618      	mov	r0, r3
 800645a:	3718      	adds	r7, #24
 800645c:	46bd      	mov	sp, r7
 800645e:	bd80      	pop	{r7, pc}
 8006460:	20000790 	.word	0x20000790
 8006464:	2000076c 	.word	0x2000076c
 8006468:	20000720 	.word	0x20000720
 800646c:	20000724 	.word	0x20000724
 8006470:	20000780 	.word	0x20000780
 8006474:	20000788 	.word	0x20000788
 8006478:	20000770 	.word	0x20000770
 800647c:	2000066c 	.word	0x2000066c
 8006480:	20000668 	.word	0x20000668
 8006484:	2000077c 	.word	0x2000077c
 8006488:	20000778 	.word	0x20000778

0800648c <vTaskSwitchContext>:
 800648c:	b480      	push	{r7}
 800648e:	b087      	sub	sp, #28
 8006490:	af00      	add	r7, sp, #0
 8006492:	4b27      	ldr	r3, [pc, #156]	; (8006530 <vTaskSwitchContext+0xa4>)
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	2b00      	cmp	r3, #0
 8006498:	d003      	beq.n	80064a2 <vTaskSwitchContext+0x16>
 800649a:	4b26      	ldr	r3, [pc, #152]	; (8006534 <vTaskSwitchContext+0xa8>)
 800649c:	2201      	movs	r2, #1
 800649e:	601a      	str	r2, [r3, #0]
 80064a0:	e03f      	b.n	8006522 <vTaskSwitchContext+0x96>
 80064a2:	4b24      	ldr	r3, [pc, #144]	; (8006534 <vTaskSwitchContext+0xa8>)
 80064a4:	2200      	movs	r2, #0
 80064a6:	601a      	str	r2, [r3, #0]
 80064a8:	4b23      	ldr	r3, [pc, #140]	; (8006538 <vTaskSwitchContext+0xac>)
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	60fb      	str	r3, [r7, #12]
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	fab3 f383 	clz	r3, r3
 80064b4:	72fb      	strb	r3, [r7, #11]
 80064b6:	7afb      	ldrb	r3, [r7, #11]
 80064b8:	f1c3 031f 	rsb	r3, r3, #31
 80064bc:	617b      	str	r3, [r7, #20]
 80064be:	491f      	ldr	r1, [pc, #124]	; (800653c <vTaskSwitchContext+0xb0>)
 80064c0:	697a      	ldr	r2, [r7, #20]
 80064c2:	4613      	mov	r3, r2
 80064c4:	009b      	lsls	r3, r3, #2
 80064c6:	4413      	add	r3, r2
 80064c8:	009b      	lsls	r3, r3, #2
 80064ca:	440b      	add	r3, r1
 80064cc:	681b      	ldr	r3, [r3, #0]
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d10a      	bne.n	80064e8 <vTaskSwitchContext+0x5c>
 80064d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064d6:	f383 8811 	msr	BASEPRI, r3
 80064da:	f3bf 8f6f 	isb	sy
 80064de:	f3bf 8f4f 	dsb	sy
 80064e2:	607b      	str	r3, [r7, #4]
 80064e4:	bf00      	nop
 80064e6:	e7fe      	b.n	80064e6 <vTaskSwitchContext+0x5a>
 80064e8:	697a      	ldr	r2, [r7, #20]
 80064ea:	4613      	mov	r3, r2
 80064ec:	009b      	lsls	r3, r3, #2
 80064ee:	4413      	add	r3, r2
 80064f0:	009b      	lsls	r3, r3, #2
 80064f2:	4a12      	ldr	r2, [pc, #72]	; (800653c <vTaskSwitchContext+0xb0>)
 80064f4:	4413      	add	r3, r2
 80064f6:	613b      	str	r3, [r7, #16]
 80064f8:	693b      	ldr	r3, [r7, #16]
 80064fa:	685b      	ldr	r3, [r3, #4]
 80064fc:	685a      	ldr	r2, [r3, #4]
 80064fe:	693b      	ldr	r3, [r7, #16]
 8006500:	605a      	str	r2, [r3, #4]
 8006502:	693b      	ldr	r3, [r7, #16]
 8006504:	685a      	ldr	r2, [r3, #4]
 8006506:	693b      	ldr	r3, [r7, #16]
 8006508:	3308      	adds	r3, #8
 800650a:	429a      	cmp	r2, r3
 800650c:	d104      	bne.n	8006518 <vTaskSwitchContext+0x8c>
 800650e:	693b      	ldr	r3, [r7, #16]
 8006510:	685b      	ldr	r3, [r3, #4]
 8006512:	685a      	ldr	r2, [r3, #4]
 8006514:	693b      	ldr	r3, [r7, #16]
 8006516:	605a      	str	r2, [r3, #4]
 8006518:	693b      	ldr	r3, [r7, #16]
 800651a:	685b      	ldr	r3, [r3, #4]
 800651c:	68db      	ldr	r3, [r3, #12]
 800651e:	4a08      	ldr	r2, [pc, #32]	; (8006540 <vTaskSwitchContext+0xb4>)
 8006520:	6013      	str	r3, [r2, #0]
 8006522:	bf00      	nop
 8006524:	371c      	adds	r7, #28
 8006526:	46bd      	mov	sp, r7
 8006528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800652c:	4770      	bx	lr
 800652e:	bf00      	nop
 8006530:	20000790 	.word	0x20000790
 8006534:	2000077c 	.word	0x2000077c
 8006538:	20000770 	.word	0x20000770
 800653c:	2000066c 	.word	0x2000066c
 8006540:	20000668 	.word	0x20000668

08006544 <prvIdleTask>:
 8006544:	b580      	push	{r7, lr}
 8006546:	b082      	sub	sp, #8
 8006548:	af00      	add	r7, sp, #0
 800654a:	6078      	str	r0, [r7, #4]
 800654c:	f000 f852 	bl	80065f4 <prvCheckTasksWaitingTermination>
 8006550:	4b06      	ldr	r3, [pc, #24]	; (800656c <prvIdleTask+0x28>)
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	2b01      	cmp	r3, #1
 8006556:	d9f9      	bls.n	800654c <prvIdleTask+0x8>
 8006558:	4b05      	ldr	r3, [pc, #20]	; (8006570 <prvIdleTask+0x2c>)
 800655a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800655e:	601a      	str	r2, [r3, #0]
 8006560:	f3bf 8f4f 	dsb	sy
 8006564:	f3bf 8f6f 	isb	sy
 8006568:	e7f0      	b.n	800654c <prvIdleTask+0x8>
 800656a:	bf00      	nop
 800656c:	2000066c 	.word	0x2000066c
 8006570:	e000ed04 	.word	0xe000ed04

08006574 <prvInitialiseTaskLists>:
 8006574:	b580      	push	{r7, lr}
 8006576:	b082      	sub	sp, #8
 8006578:	af00      	add	r7, sp, #0
 800657a:	2300      	movs	r3, #0
 800657c:	607b      	str	r3, [r7, #4]
 800657e:	e00c      	b.n	800659a <prvInitialiseTaskLists+0x26>
 8006580:	687a      	ldr	r2, [r7, #4]
 8006582:	4613      	mov	r3, r2
 8006584:	009b      	lsls	r3, r3, #2
 8006586:	4413      	add	r3, r2
 8006588:	009b      	lsls	r3, r3, #2
 800658a:	4a12      	ldr	r2, [pc, #72]	; (80065d4 <prvInitialiseTaskLists+0x60>)
 800658c:	4413      	add	r3, r2
 800658e:	4618      	mov	r0, r3
 8006590:	f7ff fb3f 	bl	8005c12 <vListInitialise>
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	3301      	adds	r3, #1
 8006598:	607b      	str	r3, [r7, #4]
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	2b06      	cmp	r3, #6
 800659e:	d9ef      	bls.n	8006580 <prvInitialiseTaskLists+0xc>
 80065a0:	480d      	ldr	r0, [pc, #52]	; (80065d8 <prvInitialiseTaskLists+0x64>)
 80065a2:	f7ff fb36 	bl	8005c12 <vListInitialise>
 80065a6:	480d      	ldr	r0, [pc, #52]	; (80065dc <prvInitialiseTaskLists+0x68>)
 80065a8:	f7ff fb33 	bl	8005c12 <vListInitialise>
 80065ac:	480c      	ldr	r0, [pc, #48]	; (80065e0 <prvInitialiseTaskLists+0x6c>)
 80065ae:	f7ff fb30 	bl	8005c12 <vListInitialise>
 80065b2:	480c      	ldr	r0, [pc, #48]	; (80065e4 <prvInitialiseTaskLists+0x70>)
 80065b4:	f7ff fb2d 	bl	8005c12 <vListInitialise>
 80065b8:	480b      	ldr	r0, [pc, #44]	; (80065e8 <prvInitialiseTaskLists+0x74>)
 80065ba:	f7ff fb2a 	bl	8005c12 <vListInitialise>
 80065be:	4b0b      	ldr	r3, [pc, #44]	; (80065ec <prvInitialiseTaskLists+0x78>)
 80065c0:	4a05      	ldr	r2, [pc, #20]	; (80065d8 <prvInitialiseTaskLists+0x64>)
 80065c2:	601a      	str	r2, [r3, #0]
 80065c4:	4b0a      	ldr	r3, [pc, #40]	; (80065f0 <prvInitialiseTaskLists+0x7c>)
 80065c6:	4a05      	ldr	r2, [pc, #20]	; (80065dc <prvInitialiseTaskLists+0x68>)
 80065c8:	601a      	str	r2, [r3, #0]
 80065ca:	bf00      	nop
 80065cc:	3708      	adds	r7, #8
 80065ce:	46bd      	mov	sp, r7
 80065d0:	bd80      	pop	{r7, pc}
 80065d2:	bf00      	nop
 80065d4:	2000066c 	.word	0x2000066c
 80065d8:	200006f8 	.word	0x200006f8
 80065dc:	2000070c 	.word	0x2000070c
 80065e0:	20000728 	.word	0x20000728
 80065e4:	2000073c 	.word	0x2000073c
 80065e8:	20000754 	.word	0x20000754
 80065ec:	20000720 	.word	0x20000720
 80065f0:	20000724 	.word	0x20000724

080065f4 <prvCheckTasksWaitingTermination>:
 80065f4:	b580      	push	{r7, lr}
 80065f6:	b082      	sub	sp, #8
 80065f8:	af00      	add	r7, sp, #0
 80065fa:	e019      	b.n	8006630 <prvCheckTasksWaitingTermination+0x3c>
 80065fc:	f000 fa0a 	bl	8006a14 <vPortEnterCritical>
 8006600:	4b10      	ldr	r3, [pc, #64]	; (8006644 <prvCheckTasksWaitingTermination+0x50>)
 8006602:	68db      	ldr	r3, [r3, #12]
 8006604:	68db      	ldr	r3, [r3, #12]
 8006606:	607b      	str	r3, [r7, #4]
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	3304      	adds	r3, #4
 800660c:	4618      	mov	r0, r3
 800660e:	f7ff fb8a 	bl	8005d26 <uxListRemove>
 8006612:	4b0d      	ldr	r3, [pc, #52]	; (8006648 <prvCheckTasksWaitingTermination+0x54>)
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	3b01      	subs	r3, #1
 8006618:	4a0b      	ldr	r2, [pc, #44]	; (8006648 <prvCheckTasksWaitingTermination+0x54>)
 800661a:	6013      	str	r3, [r2, #0]
 800661c:	4b0b      	ldr	r3, [pc, #44]	; (800664c <prvCheckTasksWaitingTermination+0x58>)
 800661e:	681b      	ldr	r3, [r3, #0]
 8006620:	3b01      	subs	r3, #1
 8006622:	4a0a      	ldr	r2, [pc, #40]	; (800664c <prvCheckTasksWaitingTermination+0x58>)
 8006624:	6013      	str	r3, [r2, #0]
 8006626:	f000 fa25 	bl	8006a74 <vPortExitCritical>
 800662a:	6878      	ldr	r0, [r7, #4]
 800662c:	f000 f810 	bl	8006650 <prvDeleteTCB>
 8006630:	4b06      	ldr	r3, [pc, #24]	; (800664c <prvCheckTasksWaitingTermination+0x58>)
 8006632:	681b      	ldr	r3, [r3, #0]
 8006634:	2b00      	cmp	r3, #0
 8006636:	d1e1      	bne.n	80065fc <prvCheckTasksWaitingTermination+0x8>
 8006638:	bf00      	nop
 800663a:	bf00      	nop
 800663c:	3708      	adds	r7, #8
 800663e:	46bd      	mov	sp, r7
 8006640:	bd80      	pop	{r7, pc}
 8006642:	bf00      	nop
 8006644:	2000073c 	.word	0x2000073c
 8006648:	20000768 	.word	0x20000768
 800664c:	20000750 	.word	0x20000750

08006650 <prvDeleteTCB>:
 8006650:	b580      	push	{r7, lr}
 8006652:	b084      	sub	sp, #16
 8006654:	af00      	add	r7, sp, #0
 8006656:	6078      	str	r0, [r7, #4]
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800665e:	2b00      	cmp	r3, #0
 8006660:	d108      	bne.n	8006674 <prvDeleteTCB+0x24>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006666:	4618      	mov	r0, r3
 8006668:	f000 fb82 	bl	8006d70 <vPortFree>
 800666c:	6878      	ldr	r0, [r7, #4]
 800666e:	f000 fb7f 	bl	8006d70 <vPortFree>
 8006672:	e018      	b.n	80066a6 <prvDeleteTCB+0x56>
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800667a:	2b01      	cmp	r3, #1
 800667c:	d103      	bne.n	8006686 <prvDeleteTCB+0x36>
 800667e:	6878      	ldr	r0, [r7, #4]
 8006680:	f000 fb76 	bl	8006d70 <vPortFree>
 8006684:	e00f      	b.n	80066a6 <prvDeleteTCB+0x56>
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800668c:	2b02      	cmp	r3, #2
 800668e:	d00a      	beq.n	80066a6 <prvDeleteTCB+0x56>
 8006690:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006694:	f383 8811 	msr	BASEPRI, r3
 8006698:	f3bf 8f6f 	isb	sy
 800669c:	f3bf 8f4f 	dsb	sy
 80066a0:	60fb      	str	r3, [r7, #12]
 80066a2:	bf00      	nop
 80066a4:	e7fe      	b.n	80066a4 <prvDeleteTCB+0x54>
 80066a6:	bf00      	nop
 80066a8:	3710      	adds	r7, #16
 80066aa:	46bd      	mov	sp, r7
 80066ac:	bd80      	pop	{r7, pc}
	...

080066b0 <prvResetNextTaskUnblockTime>:
 80066b0:	b480      	push	{r7}
 80066b2:	b083      	sub	sp, #12
 80066b4:	af00      	add	r7, sp, #0
 80066b6:	4b0c      	ldr	r3, [pc, #48]	; (80066e8 <prvResetNextTaskUnblockTime+0x38>)
 80066b8:	681b      	ldr	r3, [r3, #0]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d104      	bne.n	80066ca <prvResetNextTaskUnblockTime+0x1a>
 80066c0:	4b0a      	ldr	r3, [pc, #40]	; (80066ec <prvResetNextTaskUnblockTime+0x3c>)
 80066c2:	f04f 32ff 	mov.w	r2, #4294967295
 80066c6:	601a      	str	r2, [r3, #0]
 80066c8:	e008      	b.n	80066dc <prvResetNextTaskUnblockTime+0x2c>
 80066ca:	4b07      	ldr	r3, [pc, #28]	; (80066e8 <prvResetNextTaskUnblockTime+0x38>)
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	68db      	ldr	r3, [r3, #12]
 80066d0:	68db      	ldr	r3, [r3, #12]
 80066d2:	607b      	str	r3, [r7, #4]
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	685b      	ldr	r3, [r3, #4]
 80066d8:	4a04      	ldr	r2, [pc, #16]	; (80066ec <prvResetNextTaskUnblockTime+0x3c>)
 80066da:	6013      	str	r3, [r2, #0]
 80066dc:	bf00      	nop
 80066de:	370c      	adds	r7, #12
 80066e0:	46bd      	mov	sp, r7
 80066e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066e6:	4770      	bx	lr
 80066e8:	20000720 	.word	0x20000720
 80066ec:	20000788 	.word	0x20000788

080066f0 <prvAddCurrentTaskToDelayedList>:
 80066f0:	b580      	push	{r7, lr}
 80066f2:	b084      	sub	sp, #16
 80066f4:	af00      	add	r7, sp, #0
 80066f6:	6078      	str	r0, [r7, #4]
 80066f8:	6039      	str	r1, [r7, #0]
 80066fa:	4b29      	ldr	r3, [pc, #164]	; (80067a0 <prvAddCurrentTaskToDelayedList+0xb0>)
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	60fb      	str	r3, [r7, #12]
 8006700:	4b28      	ldr	r3, [pc, #160]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	3304      	adds	r3, #4
 8006706:	4618      	mov	r0, r3
 8006708:	f7ff fb0d 	bl	8005d26 <uxListRemove>
 800670c:	4603      	mov	r3, r0
 800670e:	2b00      	cmp	r3, #0
 8006710:	d10b      	bne.n	800672a <prvAddCurrentTaskToDelayedList+0x3a>
 8006712:	4b24      	ldr	r3, [pc, #144]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006714:	681b      	ldr	r3, [r3, #0]
 8006716:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006718:	2201      	movs	r2, #1
 800671a:	fa02 f303 	lsl.w	r3, r2, r3
 800671e:	43da      	mvns	r2, r3
 8006720:	4b21      	ldr	r3, [pc, #132]	; (80067a8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8006722:	681b      	ldr	r3, [r3, #0]
 8006724:	4013      	ands	r3, r2
 8006726:	4a20      	ldr	r2, [pc, #128]	; (80067a8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8006728:	6013      	str	r3, [r2, #0]
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006730:	d10a      	bne.n	8006748 <prvAddCurrentTaskToDelayedList+0x58>
 8006732:	683b      	ldr	r3, [r7, #0]
 8006734:	2b00      	cmp	r3, #0
 8006736:	d007      	beq.n	8006748 <prvAddCurrentTaskToDelayedList+0x58>
 8006738:	4b1a      	ldr	r3, [pc, #104]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	3304      	adds	r3, #4
 800673e:	4619      	mov	r1, r3
 8006740:	481a      	ldr	r0, [pc, #104]	; (80067ac <prvAddCurrentTaskToDelayedList+0xbc>)
 8006742:	f7ff fa93 	bl	8005c6c <vListInsertEnd>
 8006746:	e026      	b.n	8006796 <prvAddCurrentTaskToDelayedList+0xa6>
 8006748:	68fa      	ldr	r2, [r7, #12]
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	4413      	add	r3, r2
 800674e:	60bb      	str	r3, [r7, #8]
 8006750:	4b14      	ldr	r3, [pc, #80]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	68ba      	ldr	r2, [r7, #8]
 8006756:	605a      	str	r2, [r3, #4]
 8006758:	68ba      	ldr	r2, [r7, #8]
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	429a      	cmp	r2, r3
 800675e:	d209      	bcs.n	8006774 <prvAddCurrentTaskToDelayedList+0x84>
 8006760:	4b13      	ldr	r3, [pc, #76]	; (80067b0 <prvAddCurrentTaskToDelayedList+0xc0>)
 8006762:	681a      	ldr	r2, [r3, #0]
 8006764:	4b0f      	ldr	r3, [pc, #60]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8006766:	681b      	ldr	r3, [r3, #0]
 8006768:	3304      	adds	r3, #4
 800676a:	4619      	mov	r1, r3
 800676c:	4610      	mov	r0, r2
 800676e:	f7ff faa1 	bl	8005cb4 <vListInsert>
 8006772:	e010      	b.n	8006796 <prvAddCurrentTaskToDelayedList+0xa6>
 8006774:	4b0f      	ldr	r3, [pc, #60]	; (80067b4 <prvAddCurrentTaskToDelayedList+0xc4>)
 8006776:	681a      	ldr	r2, [r3, #0]
 8006778:	4b0a      	ldr	r3, [pc, #40]	; (80067a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	3304      	adds	r3, #4
 800677e:	4619      	mov	r1, r3
 8006780:	4610      	mov	r0, r2
 8006782:	f7ff fa97 	bl	8005cb4 <vListInsert>
 8006786:	4b0c      	ldr	r3, [pc, #48]	; (80067b8 <prvAddCurrentTaskToDelayedList+0xc8>)
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	68ba      	ldr	r2, [r7, #8]
 800678c:	429a      	cmp	r2, r3
 800678e:	d202      	bcs.n	8006796 <prvAddCurrentTaskToDelayedList+0xa6>
 8006790:	4a09      	ldr	r2, [pc, #36]	; (80067b8 <prvAddCurrentTaskToDelayedList+0xc8>)
 8006792:	68bb      	ldr	r3, [r7, #8]
 8006794:	6013      	str	r3, [r2, #0]
 8006796:	bf00      	nop
 8006798:	3710      	adds	r7, #16
 800679a:	46bd      	mov	sp, r7
 800679c:	bd80      	pop	{r7, pc}
 800679e:	bf00      	nop
 80067a0:	2000076c 	.word	0x2000076c
 80067a4:	20000668 	.word	0x20000668
 80067a8:	20000770 	.word	0x20000770
 80067ac:	20000754 	.word	0x20000754
 80067b0:	20000724 	.word	0x20000724
 80067b4:	20000720 	.word	0x20000720
 80067b8:	20000788 	.word	0x20000788

080067bc <pxPortInitialiseStack>:
 80067bc:	b480      	push	{r7}
 80067be:	b085      	sub	sp, #20
 80067c0:	af00      	add	r7, sp, #0
 80067c2:	60f8      	str	r0, [r7, #12]
 80067c4:	60b9      	str	r1, [r7, #8]
 80067c6:	607a      	str	r2, [r7, #4]
 80067c8:	68fb      	ldr	r3, [r7, #12]
 80067ca:	3b04      	subs	r3, #4
 80067cc:	60fb      	str	r3, [r7, #12]
 80067ce:	68fb      	ldr	r3, [r7, #12]
 80067d0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80067d4:	601a      	str	r2, [r3, #0]
 80067d6:	68fb      	ldr	r3, [r7, #12]
 80067d8:	3b04      	subs	r3, #4
 80067da:	60fb      	str	r3, [r7, #12]
 80067dc:	68bb      	ldr	r3, [r7, #8]
 80067de:	f023 0201 	bic.w	r2, r3, #1
 80067e2:	68fb      	ldr	r3, [r7, #12]
 80067e4:	601a      	str	r2, [r3, #0]
 80067e6:	68fb      	ldr	r3, [r7, #12]
 80067e8:	3b04      	subs	r3, #4
 80067ea:	60fb      	str	r3, [r7, #12]
 80067ec:	4a0c      	ldr	r2, [pc, #48]	; (8006820 <pxPortInitialiseStack+0x64>)
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	601a      	str	r2, [r3, #0]
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	3b14      	subs	r3, #20
 80067f6:	60fb      	str	r3, [r7, #12]
 80067f8:	687a      	ldr	r2, [r7, #4]
 80067fa:	68fb      	ldr	r3, [r7, #12]
 80067fc:	601a      	str	r2, [r3, #0]
 80067fe:	68fb      	ldr	r3, [r7, #12]
 8006800:	3b04      	subs	r3, #4
 8006802:	60fb      	str	r3, [r7, #12]
 8006804:	68fb      	ldr	r3, [r7, #12]
 8006806:	f06f 0202 	mvn.w	r2, #2
 800680a:	601a      	str	r2, [r3, #0]
 800680c:	68fb      	ldr	r3, [r7, #12]
 800680e:	3b20      	subs	r3, #32
 8006810:	60fb      	str	r3, [r7, #12]
 8006812:	68fb      	ldr	r3, [r7, #12]
 8006814:	4618      	mov	r0, r3
 8006816:	3714      	adds	r7, #20
 8006818:	46bd      	mov	sp, r7
 800681a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800681e:	4770      	bx	lr
 8006820:	08006825 	.word	0x08006825

08006824 <prvTaskExitError>:
 8006824:	b480      	push	{r7}
 8006826:	b085      	sub	sp, #20
 8006828:	af00      	add	r7, sp, #0
 800682a:	2300      	movs	r3, #0
 800682c:	607b      	str	r3, [r7, #4]
 800682e:	4b12      	ldr	r3, [pc, #72]	; (8006878 <prvTaskExitError+0x54>)
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006836:	d00a      	beq.n	800684e <prvTaskExitError+0x2a>
 8006838:	f04f 0350 	mov.w	r3, #80	; 0x50
 800683c:	f383 8811 	msr	BASEPRI, r3
 8006840:	f3bf 8f6f 	isb	sy
 8006844:	f3bf 8f4f 	dsb	sy
 8006848:	60fb      	str	r3, [r7, #12]
 800684a:	bf00      	nop
 800684c:	e7fe      	b.n	800684c <prvTaskExitError+0x28>
 800684e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006852:	f383 8811 	msr	BASEPRI, r3
 8006856:	f3bf 8f6f 	isb	sy
 800685a:	f3bf 8f4f 	dsb	sy
 800685e:	60bb      	str	r3, [r7, #8]
 8006860:	bf00      	nop
 8006862:	bf00      	nop
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	2b00      	cmp	r3, #0
 8006868:	d0fc      	beq.n	8006864 <prvTaskExitError+0x40>
 800686a:	bf00      	nop
 800686c:	bf00      	nop
 800686e:	3714      	adds	r7, #20
 8006870:	46bd      	mov	sp, r7
 8006872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006876:	4770      	bx	lr
 8006878:	2000009c 	.word	0x2000009c
 800687c:	00000000 	.word	0x00000000

08006880 <SVC_Handler>:
 8006880:	4b07      	ldr	r3, [pc, #28]	; (80068a0 <pxCurrentTCBConst2>)
 8006882:	6819      	ldr	r1, [r3, #0]
 8006884:	6808      	ldr	r0, [r1, #0]
 8006886:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800688a:	f380 8809 	msr	PSP, r0
 800688e:	f3bf 8f6f 	isb	sy
 8006892:	f04f 0000 	mov.w	r0, #0
 8006896:	f380 8811 	msr	BASEPRI, r0
 800689a:	4770      	bx	lr
 800689c:	f3af 8000 	nop.w

080068a0 <pxCurrentTCBConst2>:
 80068a0:	20000668 	.word	0x20000668
 80068a4:	bf00      	nop
 80068a6:	bf00      	nop

080068a8 <prvPortStartFirstTask>:
 80068a8:	4808      	ldr	r0, [pc, #32]	; (80068cc <prvPortStartFirstTask+0x24>)
 80068aa:	6800      	ldr	r0, [r0, #0]
 80068ac:	6800      	ldr	r0, [r0, #0]
 80068ae:	f380 8808 	msr	MSP, r0
 80068b2:	f04f 0000 	mov.w	r0, #0
 80068b6:	f380 8814 	msr	CONTROL, r0
 80068ba:	b662      	cpsie	i
 80068bc:	b661      	cpsie	f
 80068be:	f3bf 8f4f 	dsb	sy
 80068c2:	f3bf 8f6f 	isb	sy
 80068c6:	df00      	svc	0
 80068c8:	bf00      	nop
 80068ca:	bf00      	nop
 80068cc:	e000ed08 	.word	0xe000ed08

080068d0 <xPortStartScheduler>:
 80068d0:	b580      	push	{r7, lr}
 80068d2:	b086      	sub	sp, #24
 80068d4:	af00      	add	r7, sp, #0
 80068d6:	4b46      	ldr	r3, [pc, #280]	; (80069f0 <xPortStartScheduler+0x120>)
 80068d8:	681b      	ldr	r3, [r3, #0]
 80068da:	4a46      	ldr	r2, [pc, #280]	; (80069f4 <xPortStartScheduler+0x124>)
 80068dc:	4293      	cmp	r3, r2
 80068de:	d10a      	bne.n	80068f6 <xPortStartScheduler+0x26>
 80068e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80068e4:	f383 8811 	msr	BASEPRI, r3
 80068e8:	f3bf 8f6f 	isb	sy
 80068ec:	f3bf 8f4f 	dsb	sy
 80068f0:	613b      	str	r3, [r7, #16]
 80068f2:	bf00      	nop
 80068f4:	e7fe      	b.n	80068f4 <xPortStartScheduler+0x24>
 80068f6:	4b3e      	ldr	r3, [pc, #248]	; (80069f0 <xPortStartScheduler+0x120>)
 80068f8:	681b      	ldr	r3, [r3, #0]
 80068fa:	4a3f      	ldr	r2, [pc, #252]	; (80069f8 <xPortStartScheduler+0x128>)
 80068fc:	4293      	cmp	r3, r2
 80068fe:	d10a      	bne.n	8006916 <xPortStartScheduler+0x46>
 8006900:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006904:	f383 8811 	msr	BASEPRI, r3
 8006908:	f3bf 8f6f 	isb	sy
 800690c:	f3bf 8f4f 	dsb	sy
 8006910:	60fb      	str	r3, [r7, #12]
 8006912:	bf00      	nop
 8006914:	e7fe      	b.n	8006914 <xPortStartScheduler+0x44>
 8006916:	4b39      	ldr	r3, [pc, #228]	; (80069fc <xPortStartScheduler+0x12c>)
 8006918:	617b      	str	r3, [r7, #20]
 800691a:	697b      	ldr	r3, [r7, #20]
 800691c:	781b      	ldrb	r3, [r3, #0]
 800691e:	b2db      	uxtb	r3, r3
 8006920:	607b      	str	r3, [r7, #4]
 8006922:	697b      	ldr	r3, [r7, #20]
 8006924:	22ff      	movs	r2, #255	; 0xff
 8006926:	701a      	strb	r2, [r3, #0]
 8006928:	697b      	ldr	r3, [r7, #20]
 800692a:	781b      	ldrb	r3, [r3, #0]
 800692c:	b2db      	uxtb	r3, r3
 800692e:	70fb      	strb	r3, [r7, #3]
 8006930:	78fb      	ldrb	r3, [r7, #3]
 8006932:	b2db      	uxtb	r3, r3
 8006934:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006938:	b2da      	uxtb	r2, r3
 800693a:	4b31      	ldr	r3, [pc, #196]	; (8006a00 <xPortStartScheduler+0x130>)
 800693c:	701a      	strb	r2, [r3, #0]
 800693e:	4b31      	ldr	r3, [pc, #196]	; (8006a04 <xPortStartScheduler+0x134>)
 8006940:	2207      	movs	r2, #7
 8006942:	601a      	str	r2, [r3, #0]
 8006944:	e009      	b.n	800695a <xPortStartScheduler+0x8a>
 8006946:	4b2f      	ldr	r3, [pc, #188]	; (8006a04 <xPortStartScheduler+0x134>)
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	3b01      	subs	r3, #1
 800694c:	4a2d      	ldr	r2, [pc, #180]	; (8006a04 <xPortStartScheduler+0x134>)
 800694e:	6013      	str	r3, [r2, #0]
 8006950:	78fb      	ldrb	r3, [r7, #3]
 8006952:	b2db      	uxtb	r3, r3
 8006954:	005b      	lsls	r3, r3, #1
 8006956:	b2db      	uxtb	r3, r3
 8006958:	70fb      	strb	r3, [r7, #3]
 800695a:	78fb      	ldrb	r3, [r7, #3]
 800695c:	b2db      	uxtb	r3, r3
 800695e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006962:	2b80      	cmp	r3, #128	; 0x80
 8006964:	d0ef      	beq.n	8006946 <xPortStartScheduler+0x76>
 8006966:	4b27      	ldr	r3, [pc, #156]	; (8006a04 <xPortStartScheduler+0x134>)
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	f1c3 0307 	rsb	r3, r3, #7
 800696e:	2b04      	cmp	r3, #4
 8006970:	d00a      	beq.n	8006988 <xPortStartScheduler+0xb8>
 8006972:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006976:	f383 8811 	msr	BASEPRI, r3
 800697a:	f3bf 8f6f 	isb	sy
 800697e:	f3bf 8f4f 	dsb	sy
 8006982:	60bb      	str	r3, [r7, #8]
 8006984:	bf00      	nop
 8006986:	e7fe      	b.n	8006986 <xPortStartScheduler+0xb6>
 8006988:	4b1e      	ldr	r3, [pc, #120]	; (8006a04 <xPortStartScheduler+0x134>)
 800698a:	681b      	ldr	r3, [r3, #0]
 800698c:	021b      	lsls	r3, r3, #8
 800698e:	4a1d      	ldr	r2, [pc, #116]	; (8006a04 <xPortStartScheduler+0x134>)
 8006990:	6013      	str	r3, [r2, #0]
 8006992:	4b1c      	ldr	r3, [pc, #112]	; (8006a04 <xPortStartScheduler+0x134>)
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800699a:	4a1a      	ldr	r2, [pc, #104]	; (8006a04 <xPortStartScheduler+0x134>)
 800699c:	6013      	str	r3, [r2, #0]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	b2da      	uxtb	r2, r3
 80069a2:	697b      	ldr	r3, [r7, #20]
 80069a4:	701a      	strb	r2, [r3, #0]
 80069a6:	4b18      	ldr	r3, [pc, #96]	; (8006a08 <xPortStartScheduler+0x138>)
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	4a17      	ldr	r2, [pc, #92]	; (8006a08 <xPortStartScheduler+0x138>)
 80069ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80069b0:	6013      	str	r3, [r2, #0]
 80069b2:	4b15      	ldr	r3, [pc, #84]	; (8006a08 <xPortStartScheduler+0x138>)
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	4a14      	ldr	r2, [pc, #80]	; (8006a08 <xPortStartScheduler+0x138>)
 80069b8:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80069bc:	6013      	str	r3, [r2, #0]
 80069be:	f000 f8dd 	bl	8006b7c <vPortSetupTimerInterrupt>
 80069c2:	4b12      	ldr	r3, [pc, #72]	; (8006a0c <xPortStartScheduler+0x13c>)
 80069c4:	2200      	movs	r2, #0
 80069c6:	601a      	str	r2, [r3, #0]
 80069c8:	f000 f8fc 	bl	8006bc4 <vPortEnableVFP>
 80069cc:	4b10      	ldr	r3, [pc, #64]	; (8006a10 <xPortStartScheduler+0x140>)
 80069ce:	681b      	ldr	r3, [r3, #0]
 80069d0:	4a0f      	ldr	r2, [pc, #60]	; (8006a10 <xPortStartScheduler+0x140>)
 80069d2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80069d6:	6013      	str	r3, [r2, #0]
 80069d8:	f7ff ff66 	bl	80068a8 <prvPortStartFirstTask>
 80069dc:	f7ff fd56 	bl	800648c <vTaskSwitchContext>
 80069e0:	f7ff ff20 	bl	8006824 <prvTaskExitError>
 80069e4:	2300      	movs	r3, #0
 80069e6:	4618      	mov	r0, r3
 80069e8:	3718      	adds	r7, #24
 80069ea:	46bd      	mov	sp, r7
 80069ec:	bd80      	pop	{r7, pc}
 80069ee:	bf00      	nop
 80069f0:	e000ed00 	.word	0xe000ed00
 80069f4:	410fc271 	.word	0x410fc271
 80069f8:	410fc270 	.word	0x410fc270
 80069fc:	e000e400 	.word	0xe000e400
 8006a00:	20000794 	.word	0x20000794
 8006a04:	20000798 	.word	0x20000798
 8006a08:	e000ed20 	.word	0xe000ed20
 8006a0c:	2000009c 	.word	0x2000009c
 8006a10:	e000ef34 	.word	0xe000ef34

08006a14 <vPortEnterCritical>:
 8006a14:	b480      	push	{r7}
 8006a16:	b083      	sub	sp, #12
 8006a18:	af00      	add	r7, sp, #0
 8006a1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a1e:	f383 8811 	msr	BASEPRI, r3
 8006a22:	f3bf 8f6f 	isb	sy
 8006a26:	f3bf 8f4f 	dsb	sy
 8006a2a:	607b      	str	r3, [r7, #4]
 8006a2c:	bf00      	nop
 8006a2e:	4b0f      	ldr	r3, [pc, #60]	; (8006a6c <vPortEnterCritical+0x58>)
 8006a30:	681b      	ldr	r3, [r3, #0]
 8006a32:	3301      	adds	r3, #1
 8006a34:	4a0d      	ldr	r2, [pc, #52]	; (8006a6c <vPortEnterCritical+0x58>)
 8006a36:	6013      	str	r3, [r2, #0]
 8006a38:	4b0c      	ldr	r3, [pc, #48]	; (8006a6c <vPortEnterCritical+0x58>)
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	2b01      	cmp	r3, #1
 8006a3e:	d10f      	bne.n	8006a60 <vPortEnterCritical+0x4c>
 8006a40:	4b0b      	ldr	r3, [pc, #44]	; (8006a70 <vPortEnterCritical+0x5c>)
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	b2db      	uxtb	r3, r3
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	d00a      	beq.n	8006a60 <vPortEnterCritical+0x4c>
 8006a4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a4e:	f383 8811 	msr	BASEPRI, r3
 8006a52:	f3bf 8f6f 	isb	sy
 8006a56:	f3bf 8f4f 	dsb	sy
 8006a5a:	603b      	str	r3, [r7, #0]
 8006a5c:	bf00      	nop
 8006a5e:	e7fe      	b.n	8006a5e <vPortEnterCritical+0x4a>
 8006a60:	bf00      	nop
 8006a62:	370c      	adds	r7, #12
 8006a64:	46bd      	mov	sp, r7
 8006a66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a6a:	4770      	bx	lr
 8006a6c:	2000009c 	.word	0x2000009c
 8006a70:	e000ed04 	.word	0xe000ed04

08006a74 <vPortExitCritical>:
 8006a74:	b480      	push	{r7}
 8006a76:	b083      	sub	sp, #12
 8006a78:	af00      	add	r7, sp, #0
 8006a7a:	4b12      	ldr	r3, [pc, #72]	; (8006ac4 <vPortExitCritical+0x50>)
 8006a7c:	681b      	ldr	r3, [r3, #0]
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d10a      	bne.n	8006a98 <vPortExitCritical+0x24>
 8006a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a86:	f383 8811 	msr	BASEPRI, r3
 8006a8a:	f3bf 8f6f 	isb	sy
 8006a8e:	f3bf 8f4f 	dsb	sy
 8006a92:	607b      	str	r3, [r7, #4]
 8006a94:	bf00      	nop
 8006a96:	e7fe      	b.n	8006a96 <vPortExitCritical+0x22>
 8006a98:	4b0a      	ldr	r3, [pc, #40]	; (8006ac4 <vPortExitCritical+0x50>)
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	3b01      	subs	r3, #1
 8006a9e:	4a09      	ldr	r2, [pc, #36]	; (8006ac4 <vPortExitCritical+0x50>)
 8006aa0:	6013      	str	r3, [r2, #0]
 8006aa2:	4b08      	ldr	r3, [pc, #32]	; (8006ac4 <vPortExitCritical+0x50>)
 8006aa4:	681b      	ldr	r3, [r3, #0]
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	d105      	bne.n	8006ab6 <vPortExitCritical+0x42>
 8006aaa:	2300      	movs	r3, #0
 8006aac:	603b      	str	r3, [r7, #0]
 8006aae:	683b      	ldr	r3, [r7, #0]
 8006ab0:	f383 8811 	msr	BASEPRI, r3
 8006ab4:	bf00      	nop
 8006ab6:	bf00      	nop
 8006ab8:	370c      	adds	r7, #12
 8006aba:	46bd      	mov	sp, r7
 8006abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ac0:	4770      	bx	lr
 8006ac2:	bf00      	nop
 8006ac4:	2000009c 	.word	0x2000009c
	...

08006ad0 <PendSV_Handler>:
 8006ad0:	f3ef 8009 	mrs	r0, PSP
 8006ad4:	f3bf 8f6f 	isb	sy
 8006ad8:	4b15      	ldr	r3, [pc, #84]	; (8006b30 <pxCurrentTCBConst>)
 8006ada:	681a      	ldr	r2, [r3, #0]
 8006adc:	f01e 0f10 	tst.w	lr, #16
 8006ae0:	bf08      	it	eq
 8006ae2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006ae6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006aea:	6010      	str	r0, [r2, #0]
 8006aec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006af0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006af4:	f380 8811 	msr	BASEPRI, r0
 8006af8:	f3bf 8f4f 	dsb	sy
 8006afc:	f3bf 8f6f 	isb	sy
 8006b00:	f7ff fcc4 	bl	800648c <vTaskSwitchContext>
 8006b04:	f04f 0000 	mov.w	r0, #0
 8006b08:	f380 8811 	msr	BASEPRI, r0
 8006b0c:	bc09      	pop	{r0, r3}
 8006b0e:	6819      	ldr	r1, [r3, #0]
 8006b10:	6808      	ldr	r0, [r1, #0]
 8006b12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b16:	f01e 0f10 	tst.w	lr, #16
 8006b1a:	bf08      	it	eq
 8006b1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006b20:	f380 8809 	msr	PSP, r0
 8006b24:	f3bf 8f6f 	isb	sy
 8006b28:	4770      	bx	lr
 8006b2a:	bf00      	nop
 8006b2c:	f3af 8000 	nop.w

08006b30 <pxCurrentTCBConst>:
 8006b30:	20000668 	.word	0x20000668
 8006b34:	bf00      	nop
 8006b36:	bf00      	nop

08006b38 <SysTick_Handler>:
 8006b38:	b580      	push	{r7, lr}
 8006b3a:	b082      	sub	sp, #8
 8006b3c:	af00      	add	r7, sp, #0
 8006b3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b42:	f383 8811 	msr	BASEPRI, r3
 8006b46:	f3bf 8f6f 	isb	sy
 8006b4a:	f3bf 8f4f 	dsb	sy
 8006b4e:	607b      	str	r3, [r7, #4]
 8006b50:	bf00      	nop
 8006b52:	f7ff fbe3 	bl	800631c <xTaskIncrementTick>
 8006b56:	4603      	mov	r3, r0
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d003      	beq.n	8006b64 <SysTick_Handler+0x2c>
 8006b5c:	4b06      	ldr	r3, [pc, #24]	; (8006b78 <SysTick_Handler+0x40>)
 8006b5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b62:	601a      	str	r2, [r3, #0]
 8006b64:	2300      	movs	r3, #0
 8006b66:	603b      	str	r3, [r7, #0]
 8006b68:	683b      	ldr	r3, [r7, #0]
 8006b6a:	f383 8811 	msr	BASEPRI, r3
 8006b6e:	bf00      	nop
 8006b70:	bf00      	nop
 8006b72:	3708      	adds	r7, #8
 8006b74:	46bd      	mov	sp, r7
 8006b76:	bd80      	pop	{r7, pc}
 8006b78:	e000ed04 	.word	0xe000ed04

08006b7c <vPortSetupTimerInterrupt>:
 8006b7c:	b480      	push	{r7}
 8006b7e:	af00      	add	r7, sp, #0
 8006b80:	4b0b      	ldr	r3, [pc, #44]	; (8006bb0 <vPortSetupTimerInterrupt+0x34>)
 8006b82:	2200      	movs	r2, #0
 8006b84:	601a      	str	r2, [r3, #0]
 8006b86:	4b0b      	ldr	r3, [pc, #44]	; (8006bb4 <vPortSetupTimerInterrupt+0x38>)
 8006b88:	2200      	movs	r2, #0
 8006b8a:	601a      	str	r2, [r3, #0]
 8006b8c:	4b0a      	ldr	r3, [pc, #40]	; (8006bb8 <vPortSetupTimerInterrupt+0x3c>)
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	4a0a      	ldr	r2, [pc, #40]	; (8006bbc <vPortSetupTimerInterrupt+0x40>)
 8006b92:	fba2 2303 	umull	r2, r3, r2, r3
 8006b96:	099b      	lsrs	r3, r3, #6
 8006b98:	4a09      	ldr	r2, [pc, #36]	; (8006bc0 <vPortSetupTimerInterrupt+0x44>)
 8006b9a:	3b01      	subs	r3, #1
 8006b9c:	6013      	str	r3, [r2, #0]
 8006b9e:	4b04      	ldr	r3, [pc, #16]	; (8006bb0 <vPortSetupTimerInterrupt+0x34>)
 8006ba0:	2207      	movs	r2, #7
 8006ba2:	601a      	str	r2, [r3, #0]
 8006ba4:	bf00      	nop
 8006ba6:	46bd      	mov	sp, r7
 8006ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bac:	4770      	bx	lr
 8006bae:	bf00      	nop
 8006bb0:	e000e010 	.word	0xe000e010
 8006bb4:	e000e018 	.word	0xe000e018
 8006bb8:	20000090 	.word	0x20000090
 8006bbc:	10624dd3 	.word	0x10624dd3
 8006bc0:	e000e014 	.word	0xe000e014

08006bc4 <vPortEnableVFP>:
 8006bc4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006bd4 <vPortEnableVFP+0x10>
 8006bc8:	6801      	ldr	r1, [r0, #0]
 8006bca:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006bce:	6001      	str	r1, [r0, #0]
 8006bd0:	4770      	bx	lr
 8006bd2:	bf00      	nop
 8006bd4:	e000ed88 	.word	0xe000ed88

08006bd8 <pvPortMalloc>:
 8006bd8:	b580      	push	{r7, lr}
 8006bda:	b08a      	sub	sp, #40	; 0x28
 8006bdc:	af00      	add	r7, sp, #0
 8006bde:	6078      	str	r0, [r7, #4]
 8006be0:	2300      	movs	r3, #0
 8006be2:	61fb      	str	r3, [r7, #28]
 8006be4:	f7ff faf0 	bl	80061c8 <vTaskSuspendAll>
 8006be8:	4b5b      	ldr	r3, [pc, #364]	; (8006d58 <pvPortMalloc+0x180>)
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	2b00      	cmp	r3, #0
 8006bee:	d101      	bne.n	8006bf4 <pvPortMalloc+0x1c>
 8006bf0:	f000 f920 	bl	8006e34 <prvHeapInit>
 8006bf4:	4b59      	ldr	r3, [pc, #356]	; (8006d5c <pvPortMalloc+0x184>)
 8006bf6:	681a      	ldr	r2, [r3, #0]
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	4013      	ands	r3, r2
 8006bfc:	2b00      	cmp	r3, #0
 8006bfe:	f040 8093 	bne.w	8006d28 <pvPortMalloc+0x150>
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d01d      	beq.n	8006c44 <pvPortMalloc+0x6c>
 8006c08:	2208      	movs	r2, #8
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	4413      	add	r3, r2
 8006c0e:	607b      	str	r3, [r7, #4]
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	f003 0307 	and.w	r3, r3, #7
 8006c16:	2b00      	cmp	r3, #0
 8006c18:	d014      	beq.n	8006c44 <pvPortMalloc+0x6c>
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	f023 0307 	bic.w	r3, r3, #7
 8006c20:	3308      	adds	r3, #8
 8006c22:	607b      	str	r3, [r7, #4]
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	f003 0307 	and.w	r3, r3, #7
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d00a      	beq.n	8006c44 <pvPortMalloc+0x6c>
 8006c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c32:	f383 8811 	msr	BASEPRI, r3
 8006c36:	f3bf 8f6f 	isb	sy
 8006c3a:	f3bf 8f4f 	dsb	sy
 8006c3e:	617b      	str	r3, [r7, #20]
 8006c40:	bf00      	nop
 8006c42:	e7fe      	b.n	8006c42 <pvPortMalloc+0x6a>
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	d06e      	beq.n	8006d28 <pvPortMalloc+0x150>
 8006c4a:	4b45      	ldr	r3, [pc, #276]	; (8006d60 <pvPortMalloc+0x188>)
 8006c4c:	681b      	ldr	r3, [r3, #0]
 8006c4e:	687a      	ldr	r2, [r7, #4]
 8006c50:	429a      	cmp	r2, r3
 8006c52:	d869      	bhi.n	8006d28 <pvPortMalloc+0x150>
 8006c54:	4b43      	ldr	r3, [pc, #268]	; (8006d64 <pvPortMalloc+0x18c>)
 8006c56:	623b      	str	r3, [r7, #32]
 8006c58:	4b42      	ldr	r3, [pc, #264]	; (8006d64 <pvPortMalloc+0x18c>)
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	627b      	str	r3, [r7, #36]	; 0x24
 8006c5e:	e004      	b.n	8006c6a <pvPortMalloc+0x92>
 8006c60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c62:	623b      	str	r3, [r7, #32]
 8006c64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	627b      	str	r3, [r7, #36]	; 0x24
 8006c6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c6c:	685b      	ldr	r3, [r3, #4]
 8006c6e:	687a      	ldr	r2, [r7, #4]
 8006c70:	429a      	cmp	r2, r3
 8006c72:	d903      	bls.n	8006c7c <pvPortMalloc+0xa4>
 8006c74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c76:	681b      	ldr	r3, [r3, #0]
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d1f1      	bne.n	8006c60 <pvPortMalloc+0x88>
 8006c7c:	4b36      	ldr	r3, [pc, #216]	; (8006d58 <pvPortMalloc+0x180>)
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006c82:	429a      	cmp	r2, r3
 8006c84:	d050      	beq.n	8006d28 <pvPortMalloc+0x150>
 8006c86:	6a3b      	ldr	r3, [r7, #32]
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	2208      	movs	r2, #8
 8006c8c:	4413      	add	r3, r2
 8006c8e:	61fb      	str	r3, [r7, #28]
 8006c90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c92:	681a      	ldr	r2, [r3, #0]
 8006c94:	6a3b      	ldr	r3, [r7, #32]
 8006c96:	601a      	str	r2, [r3, #0]
 8006c98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c9a:	685a      	ldr	r2, [r3, #4]
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	1ad2      	subs	r2, r2, r3
 8006ca0:	2308      	movs	r3, #8
 8006ca2:	005b      	lsls	r3, r3, #1
 8006ca4:	429a      	cmp	r2, r3
 8006ca6:	d91f      	bls.n	8006ce8 <pvPortMalloc+0x110>
 8006ca8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	4413      	add	r3, r2
 8006cae:	61bb      	str	r3, [r7, #24]
 8006cb0:	69bb      	ldr	r3, [r7, #24]
 8006cb2:	f003 0307 	and.w	r3, r3, #7
 8006cb6:	2b00      	cmp	r3, #0
 8006cb8:	d00a      	beq.n	8006cd0 <pvPortMalloc+0xf8>
 8006cba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cbe:	f383 8811 	msr	BASEPRI, r3
 8006cc2:	f3bf 8f6f 	isb	sy
 8006cc6:	f3bf 8f4f 	dsb	sy
 8006cca:	613b      	str	r3, [r7, #16]
 8006ccc:	bf00      	nop
 8006cce:	e7fe      	b.n	8006cce <pvPortMalloc+0xf6>
 8006cd0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cd2:	685a      	ldr	r2, [r3, #4]
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	1ad2      	subs	r2, r2, r3
 8006cd8:	69bb      	ldr	r3, [r7, #24]
 8006cda:	605a      	str	r2, [r3, #4]
 8006cdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cde:	687a      	ldr	r2, [r7, #4]
 8006ce0:	605a      	str	r2, [r3, #4]
 8006ce2:	69b8      	ldr	r0, [r7, #24]
 8006ce4:	f000 f908 	bl	8006ef8 <prvInsertBlockIntoFreeList>
 8006ce8:	4b1d      	ldr	r3, [pc, #116]	; (8006d60 <pvPortMalloc+0x188>)
 8006cea:	681a      	ldr	r2, [r3, #0]
 8006cec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cee:	685b      	ldr	r3, [r3, #4]
 8006cf0:	1ad3      	subs	r3, r2, r3
 8006cf2:	4a1b      	ldr	r2, [pc, #108]	; (8006d60 <pvPortMalloc+0x188>)
 8006cf4:	6013      	str	r3, [r2, #0]
 8006cf6:	4b1a      	ldr	r3, [pc, #104]	; (8006d60 <pvPortMalloc+0x188>)
 8006cf8:	681a      	ldr	r2, [r3, #0]
 8006cfa:	4b1b      	ldr	r3, [pc, #108]	; (8006d68 <pvPortMalloc+0x190>)
 8006cfc:	681b      	ldr	r3, [r3, #0]
 8006cfe:	429a      	cmp	r2, r3
 8006d00:	d203      	bcs.n	8006d0a <pvPortMalloc+0x132>
 8006d02:	4b17      	ldr	r3, [pc, #92]	; (8006d60 <pvPortMalloc+0x188>)
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	4a18      	ldr	r2, [pc, #96]	; (8006d68 <pvPortMalloc+0x190>)
 8006d08:	6013      	str	r3, [r2, #0]
 8006d0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006d0c:	685a      	ldr	r2, [r3, #4]
 8006d0e:	4b13      	ldr	r3, [pc, #76]	; (8006d5c <pvPortMalloc+0x184>)
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	431a      	orrs	r2, r3
 8006d14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006d16:	605a      	str	r2, [r3, #4]
 8006d18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006d1a:	2200      	movs	r2, #0
 8006d1c:	601a      	str	r2, [r3, #0]
 8006d1e:	4b13      	ldr	r3, [pc, #76]	; (8006d6c <pvPortMalloc+0x194>)
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	3301      	adds	r3, #1
 8006d24:	4a11      	ldr	r2, [pc, #68]	; (8006d6c <pvPortMalloc+0x194>)
 8006d26:	6013      	str	r3, [r2, #0]
 8006d28:	f7ff fa5c 	bl	80061e4 <xTaskResumeAll>
 8006d2c:	69fb      	ldr	r3, [r7, #28]
 8006d2e:	f003 0307 	and.w	r3, r3, #7
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d00a      	beq.n	8006d4c <pvPortMalloc+0x174>
 8006d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d3a:	f383 8811 	msr	BASEPRI, r3
 8006d3e:	f3bf 8f6f 	isb	sy
 8006d42:	f3bf 8f4f 	dsb	sy
 8006d46:	60fb      	str	r3, [r7, #12]
 8006d48:	bf00      	nop
 8006d4a:	e7fe      	b.n	8006d4a <pvPortMalloc+0x172>
 8006d4c:	69fb      	ldr	r3, [r7, #28]
 8006d4e:	4618      	mov	r0, r3
 8006d50:	3728      	adds	r7, #40	; 0x28
 8006d52:	46bd      	mov	sp, r7
 8006d54:	bd80      	pop	{r7, pc}
 8006d56:	bf00      	nop
 8006d58:	200043a4 	.word	0x200043a4
 8006d5c:	200043b8 	.word	0x200043b8
 8006d60:	200043a8 	.word	0x200043a8
 8006d64:	2000439c 	.word	0x2000439c
 8006d68:	200043ac 	.word	0x200043ac
 8006d6c:	200043b0 	.word	0x200043b0

08006d70 <vPortFree>:
 8006d70:	b580      	push	{r7, lr}
 8006d72:	b086      	sub	sp, #24
 8006d74:	af00      	add	r7, sp, #0
 8006d76:	6078      	str	r0, [r7, #4]
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	617b      	str	r3, [r7, #20]
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d04d      	beq.n	8006e1e <vPortFree+0xae>
 8006d82:	2308      	movs	r3, #8
 8006d84:	425b      	negs	r3, r3
 8006d86:	697a      	ldr	r2, [r7, #20]
 8006d88:	4413      	add	r3, r2
 8006d8a:	617b      	str	r3, [r7, #20]
 8006d8c:	697b      	ldr	r3, [r7, #20]
 8006d8e:	613b      	str	r3, [r7, #16]
 8006d90:	693b      	ldr	r3, [r7, #16]
 8006d92:	685a      	ldr	r2, [r3, #4]
 8006d94:	4b24      	ldr	r3, [pc, #144]	; (8006e28 <vPortFree+0xb8>)
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	4013      	ands	r3, r2
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d10a      	bne.n	8006db4 <vPortFree+0x44>
 8006d9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006da2:	f383 8811 	msr	BASEPRI, r3
 8006da6:	f3bf 8f6f 	isb	sy
 8006daa:	f3bf 8f4f 	dsb	sy
 8006dae:	60fb      	str	r3, [r7, #12]
 8006db0:	bf00      	nop
 8006db2:	e7fe      	b.n	8006db2 <vPortFree+0x42>
 8006db4:	693b      	ldr	r3, [r7, #16]
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	d00a      	beq.n	8006dd2 <vPortFree+0x62>
 8006dbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dc0:	f383 8811 	msr	BASEPRI, r3
 8006dc4:	f3bf 8f6f 	isb	sy
 8006dc8:	f3bf 8f4f 	dsb	sy
 8006dcc:	60bb      	str	r3, [r7, #8]
 8006dce:	bf00      	nop
 8006dd0:	e7fe      	b.n	8006dd0 <vPortFree+0x60>
 8006dd2:	693b      	ldr	r3, [r7, #16]
 8006dd4:	685a      	ldr	r2, [r3, #4]
 8006dd6:	4b14      	ldr	r3, [pc, #80]	; (8006e28 <vPortFree+0xb8>)
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	4013      	ands	r3, r2
 8006ddc:	2b00      	cmp	r3, #0
 8006dde:	d01e      	beq.n	8006e1e <vPortFree+0xae>
 8006de0:	693b      	ldr	r3, [r7, #16]
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d11a      	bne.n	8006e1e <vPortFree+0xae>
 8006de8:	693b      	ldr	r3, [r7, #16]
 8006dea:	685a      	ldr	r2, [r3, #4]
 8006dec:	4b0e      	ldr	r3, [pc, #56]	; (8006e28 <vPortFree+0xb8>)
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	43db      	mvns	r3, r3
 8006df2:	401a      	ands	r2, r3
 8006df4:	693b      	ldr	r3, [r7, #16]
 8006df6:	605a      	str	r2, [r3, #4]
 8006df8:	f7ff f9e6 	bl	80061c8 <vTaskSuspendAll>
 8006dfc:	693b      	ldr	r3, [r7, #16]
 8006dfe:	685a      	ldr	r2, [r3, #4]
 8006e00:	4b0a      	ldr	r3, [pc, #40]	; (8006e2c <vPortFree+0xbc>)
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	4413      	add	r3, r2
 8006e06:	4a09      	ldr	r2, [pc, #36]	; (8006e2c <vPortFree+0xbc>)
 8006e08:	6013      	str	r3, [r2, #0]
 8006e0a:	6938      	ldr	r0, [r7, #16]
 8006e0c:	f000 f874 	bl	8006ef8 <prvInsertBlockIntoFreeList>
 8006e10:	4b07      	ldr	r3, [pc, #28]	; (8006e30 <vPortFree+0xc0>)
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	3301      	adds	r3, #1
 8006e16:	4a06      	ldr	r2, [pc, #24]	; (8006e30 <vPortFree+0xc0>)
 8006e18:	6013      	str	r3, [r2, #0]
 8006e1a:	f7ff f9e3 	bl	80061e4 <xTaskResumeAll>
 8006e1e:	bf00      	nop
 8006e20:	3718      	adds	r7, #24
 8006e22:	46bd      	mov	sp, r7
 8006e24:	bd80      	pop	{r7, pc}
 8006e26:	bf00      	nop
 8006e28:	200043b8 	.word	0x200043b8
 8006e2c:	200043a8 	.word	0x200043a8
 8006e30:	200043b4 	.word	0x200043b4

08006e34 <prvHeapInit>:
 8006e34:	b480      	push	{r7}
 8006e36:	b085      	sub	sp, #20
 8006e38:	af00      	add	r7, sp, #0
 8006e3a:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 8006e3e:	60bb      	str	r3, [r7, #8]
 8006e40:	4b27      	ldr	r3, [pc, #156]	; (8006ee0 <prvHeapInit+0xac>)
 8006e42:	60fb      	str	r3, [r7, #12]
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	f003 0307 	and.w	r3, r3, #7
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d00c      	beq.n	8006e68 <prvHeapInit+0x34>
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	3307      	adds	r3, #7
 8006e52:	60fb      	str	r3, [r7, #12]
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	f023 0307 	bic.w	r3, r3, #7
 8006e5a:	60fb      	str	r3, [r7, #12]
 8006e5c:	68ba      	ldr	r2, [r7, #8]
 8006e5e:	68fb      	ldr	r3, [r7, #12]
 8006e60:	1ad3      	subs	r3, r2, r3
 8006e62:	4a1f      	ldr	r2, [pc, #124]	; (8006ee0 <prvHeapInit+0xac>)
 8006e64:	4413      	add	r3, r2
 8006e66:	60bb      	str	r3, [r7, #8]
 8006e68:	68fb      	ldr	r3, [r7, #12]
 8006e6a:	607b      	str	r3, [r7, #4]
 8006e6c:	4a1d      	ldr	r2, [pc, #116]	; (8006ee4 <prvHeapInit+0xb0>)
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	6013      	str	r3, [r2, #0]
 8006e72:	4b1c      	ldr	r3, [pc, #112]	; (8006ee4 <prvHeapInit+0xb0>)
 8006e74:	2200      	movs	r2, #0
 8006e76:	605a      	str	r2, [r3, #4]
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	68ba      	ldr	r2, [r7, #8]
 8006e7c:	4413      	add	r3, r2
 8006e7e:	60fb      	str	r3, [r7, #12]
 8006e80:	2208      	movs	r2, #8
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	1a9b      	subs	r3, r3, r2
 8006e86:	60fb      	str	r3, [r7, #12]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	f023 0307 	bic.w	r3, r3, #7
 8006e8e:	60fb      	str	r3, [r7, #12]
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	4a15      	ldr	r2, [pc, #84]	; (8006ee8 <prvHeapInit+0xb4>)
 8006e94:	6013      	str	r3, [r2, #0]
 8006e96:	4b14      	ldr	r3, [pc, #80]	; (8006ee8 <prvHeapInit+0xb4>)
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	2200      	movs	r2, #0
 8006e9c:	605a      	str	r2, [r3, #4]
 8006e9e:	4b12      	ldr	r3, [pc, #72]	; (8006ee8 <prvHeapInit+0xb4>)
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	2200      	movs	r2, #0
 8006ea4:	601a      	str	r2, [r3, #0]
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	603b      	str	r3, [r7, #0]
 8006eaa:	683b      	ldr	r3, [r7, #0]
 8006eac:	68fa      	ldr	r2, [r7, #12]
 8006eae:	1ad2      	subs	r2, r2, r3
 8006eb0:	683b      	ldr	r3, [r7, #0]
 8006eb2:	605a      	str	r2, [r3, #4]
 8006eb4:	4b0c      	ldr	r3, [pc, #48]	; (8006ee8 <prvHeapInit+0xb4>)
 8006eb6:	681a      	ldr	r2, [r3, #0]
 8006eb8:	683b      	ldr	r3, [r7, #0]
 8006eba:	601a      	str	r2, [r3, #0]
 8006ebc:	683b      	ldr	r3, [r7, #0]
 8006ebe:	685b      	ldr	r3, [r3, #4]
 8006ec0:	4a0a      	ldr	r2, [pc, #40]	; (8006eec <prvHeapInit+0xb8>)
 8006ec2:	6013      	str	r3, [r2, #0]
 8006ec4:	683b      	ldr	r3, [r7, #0]
 8006ec6:	685b      	ldr	r3, [r3, #4]
 8006ec8:	4a09      	ldr	r2, [pc, #36]	; (8006ef0 <prvHeapInit+0xbc>)
 8006eca:	6013      	str	r3, [r2, #0]
 8006ecc:	4b09      	ldr	r3, [pc, #36]	; (8006ef4 <prvHeapInit+0xc0>)
 8006ece:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8006ed2:	601a      	str	r2, [r3, #0]
 8006ed4:	bf00      	nop
 8006ed6:	3714      	adds	r7, #20
 8006ed8:	46bd      	mov	sp, r7
 8006eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ede:	4770      	bx	lr
 8006ee0:	2000079c 	.word	0x2000079c
 8006ee4:	2000439c 	.word	0x2000439c
 8006ee8:	200043a4 	.word	0x200043a4
 8006eec:	200043ac 	.word	0x200043ac
 8006ef0:	200043a8 	.word	0x200043a8
 8006ef4:	200043b8 	.word	0x200043b8

08006ef8 <prvInsertBlockIntoFreeList>:
 8006ef8:	b480      	push	{r7}
 8006efa:	b085      	sub	sp, #20
 8006efc:	af00      	add	r7, sp, #0
 8006efe:	6078      	str	r0, [r7, #4]
 8006f00:	4b28      	ldr	r3, [pc, #160]	; (8006fa4 <prvInsertBlockIntoFreeList+0xac>)
 8006f02:	60fb      	str	r3, [r7, #12]
 8006f04:	e002      	b.n	8006f0c <prvInsertBlockIntoFreeList+0x14>
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	681b      	ldr	r3, [r3, #0]
 8006f0a:	60fb      	str	r3, [r7, #12]
 8006f0c:	68fb      	ldr	r3, [r7, #12]
 8006f0e:	681b      	ldr	r3, [r3, #0]
 8006f10:	687a      	ldr	r2, [r7, #4]
 8006f12:	429a      	cmp	r2, r3
 8006f14:	d8f7      	bhi.n	8006f06 <prvInsertBlockIntoFreeList+0xe>
 8006f16:	68fb      	ldr	r3, [r7, #12]
 8006f18:	60bb      	str	r3, [r7, #8]
 8006f1a:	68fb      	ldr	r3, [r7, #12]
 8006f1c:	685b      	ldr	r3, [r3, #4]
 8006f1e:	68ba      	ldr	r2, [r7, #8]
 8006f20:	4413      	add	r3, r2
 8006f22:	687a      	ldr	r2, [r7, #4]
 8006f24:	429a      	cmp	r2, r3
 8006f26:	d108      	bne.n	8006f3a <prvInsertBlockIntoFreeList+0x42>
 8006f28:	68fb      	ldr	r3, [r7, #12]
 8006f2a:	685a      	ldr	r2, [r3, #4]
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	685b      	ldr	r3, [r3, #4]
 8006f30:	441a      	add	r2, r3
 8006f32:	68fb      	ldr	r3, [r7, #12]
 8006f34:	605a      	str	r2, [r3, #4]
 8006f36:	68fb      	ldr	r3, [r7, #12]
 8006f38:	607b      	str	r3, [r7, #4]
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	60bb      	str	r3, [r7, #8]
 8006f3e:	687b      	ldr	r3, [r7, #4]
 8006f40:	685b      	ldr	r3, [r3, #4]
 8006f42:	68ba      	ldr	r2, [r7, #8]
 8006f44:	441a      	add	r2, r3
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	429a      	cmp	r2, r3
 8006f4c:	d118      	bne.n	8006f80 <prvInsertBlockIntoFreeList+0x88>
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	681a      	ldr	r2, [r3, #0]
 8006f52:	4b15      	ldr	r3, [pc, #84]	; (8006fa8 <prvInsertBlockIntoFreeList+0xb0>)
 8006f54:	681b      	ldr	r3, [r3, #0]
 8006f56:	429a      	cmp	r2, r3
 8006f58:	d00d      	beq.n	8006f76 <prvInsertBlockIntoFreeList+0x7e>
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	685a      	ldr	r2, [r3, #4]
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	685b      	ldr	r3, [r3, #4]
 8006f64:	441a      	add	r2, r3
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	605a      	str	r2, [r3, #4]
 8006f6a:	68fb      	ldr	r3, [r7, #12]
 8006f6c:	681b      	ldr	r3, [r3, #0]
 8006f6e:	681a      	ldr	r2, [r3, #0]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	601a      	str	r2, [r3, #0]
 8006f74:	e008      	b.n	8006f88 <prvInsertBlockIntoFreeList+0x90>
 8006f76:	4b0c      	ldr	r3, [pc, #48]	; (8006fa8 <prvInsertBlockIntoFreeList+0xb0>)
 8006f78:	681a      	ldr	r2, [r3, #0]
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	601a      	str	r2, [r3, #0]
 8006f7e:	e003      	b.n	8006f88 <prvInsertBlockIntoFreeList+0x90>
 8006f80:	68fb      	ldr	r3, [r7, #12]
 8006f82:	681a      	ldr	r2, [r3, #0]
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	601a      	str	r2, [r3, #0]
 8006f88:	68fa      	ldr	r2, [r7, #12]
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	429a      	cmp	r2, r3
 8006f8e:	d002      	beq.n	8006f96 <prvInsertBlockIntoFreeList+0x9e>
 8006f90:	68fb      	ldr	r3, [r7, #12]
 8006f92:	687a      	ldr	r2, [r7, #4]
 8006f94:	601a      	str	r2, [r3, #0]
 8006f96:	bf00      	nop
 8006f98:	3714      	adds	r7, #20
 8006f9a:	46bd      	mov	sp, r7
 8006f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fa0:	4770      	bx	lr
 8006fa2:	bf00      	nop
 8006fa4:	2000439c 	.word	0x2000439c
 8006fa8:	200043a4 	.word	0x200043a4

08006fac <memset>:
 8006fac:	4402      	add	r2, r0
 8006fae:	4603      	mov	r3, r0
 8006fb0:	4293      	cmp	r3, r2
 8006fb2:	d100      	bne.n	8006fb6 <memset+0xa>
 8006fb4:	4770      	bx	lr
 8006fb6:	f803 1b01 	strb.w	r1, [r3], #1
 8006fba:	e7f9      	b.n	8006fb0 <memset+0x4>

08006fbc <__errno>:
 8006fbc:	4b01      	ldr	r3, [pc, #4]	; (8006fc4 <__errno+0x8>)
 8006fbe:	6818      	ldr	r0, [r3, #0]
 8006fc0:	4770      	bx	lr
 8006fc2:	bf00      	nop
 8006fc4:	200000ec 	.word	0x200000ec

08006fc8 <__libc_init_array>:
 8006fc8:	b570      	push	{r4, r5, r6, lr}
 8006fca:	4d0d      	ldr	r5, [pc, #52]	; (8007000 <__libc_init_array+0x38>)
 8006fcc:	4c0d      	ldr	r4, [pc, #52]	; (8007004 <__libc_init_array+0x3c>)
 8006fce:	1b64      	subs	r4, r4, r5
 8006fd0:	10a4      	asrs	r4, r4, #2
 8006fd2:	2600      	movs	r6, #0
 8006fd4:	42a6      	cmp	r6, r4
 8006fd6:	d109      	bne.n	8006fec <__libc_init_array+0x24>
 8006fd8:	4d0b      	ldr	r5, [pc, #44]	; (8007008 <__libc_init_array+0x40>)
 8006fda:	4c0c      	ldr	r4, [pc, #48]	; (800700c <__libc_init_array+0x44>)
 8006fdc:	f000 fb92 	bl	8007704 <_init>
 8006fe0:	1b64      	subs	r4, r4, r5
 8006fe2:	10a4      	asrs	r4, r4, #2
 8006fe4:	2600      	movs	r6, #0
 8006fe6:	42a6      	cmp	r6, r4
 8006fe8:	d105      	bne.n	8006ff6 <__libc_init_array+0x2e>
 8006fea:	bd70      	pop	{r4, r5, r6, pc}
 8006fec:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ff0:	4798      	blx	r3
 8006ff2:	3601      	adds	r6, #1
 8006ff4:	e7ee      	b.n	8006fd4 <__libc_init_array+0xc>
 8006ff6:	f855 3b04 	ldr.w	r3, [r5], #4
 8006ffa:	4798      	blx	r3
 8006ffc:	3601      	adds	r6, #1
 8006ffe:	e7f2      	b.n	8006fe6 <__libc_init_array+0x1e>
 8007000:	08007810 	.word	0x08007810
 8007004:	08007810 	.word	0x08007810
 8007008:	08007810 	.word	0x08007810
 800700c:	08007814 	.word	0x08007814

08007010 <atan2>:
 8007010:	f000 bab2 	b.w	8007578 <__ieee754_atan2>

08007014 <sqrt>:
 8007014:	b538      	push	{r3, r4, r5, lr}
 8007016:	ed2d 8b02 	vpush	{d8}
 800701a:	ec55 4b10 	vmov	r4, r5, d0
 800701e:	f000 f9d1 	bl	80073c4 <__ieee754_sqrt>
 8007022:	4622      	mov	r2, r4
 8007024:	462b      	mov	r3, r5
 8007026:	4620      	mov	r0, r4
 8007028:	4629      	mov	r1, r5
 800702a:	eeb0 8a40 	vmov.f32	s16, s0
 800702e:	eef0 8a60 	vmov.f32	s17, s1
 8007032:	f7f9 fd23 	bl	8000a7c <__aeabi_dcmpun>
 8007036:	b990      	cbnz	r0, 800705e <sqrt+0x4a>
 8007038:	2200      	movs	r2, #0
 800703a:	2300      	movs	r3, #0
 800703c:	4620      	mov	r0, r4
 800703e:	4629      	mov	r1, r5
 8007040:	f7f9 fcf4 	bl	8000a2c <__aeabi_dcmplt>
 8007044:	b158      	cbz	r0, 800705e <sqrt+0x4a>
 8007046:	f7ff ffb9 	bl	8006fbc <__errno>
 800704a:	2321      	movs	r3, #33	; 0x21
 800704c:	6003      	str	r3, [r0, #0]
 800704e:	2200      	movs	r2, #0
 8007050:	2300      	movs	r3, #0
 8007052:	4610      	mov	r0, r2
 8007054:	4619      	mov	r1, r3
 8007056:	f7f9 fba1 	bl	800079c <__aeabi_ddiv>
 800705a:	ec41 0b18 	vmov	d8, r0, r1
 800705e:	eeb0 0a48 	vmov.f32	s0, s16
 8007062:	eef0 0a68 	vmov.f32	s1, s17
 8007066:	ecbd 8b02 	vpop	{d8}
 800706a:	bd38      	pop	{r3, r4, r5, pc}
 800706c:	0000      	movs	r0, r0
	...

08007070 <atan>:
 8007070:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007074:	ec55 4b10 	vmov	r4, r5, d0
 8007078:	4bc3      	ldr	r3, [pc, #780]	; (8007388 <atan+0x318>)
 800707a:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800707e:	429e      	cmp	r6, r3
 8007080:	46ab      	mov	fp, r5
 8007082:	dd18      	ble.n	80070b6 <atan+0x46>
 8007084:	4bc1      	ldr	r3, [pc, #772]	; (800738c <atan+0x31c>)
 8007086:	429e      	cmp	r6, r3
 8007088:	dc01      	bgt.n	800708e <atan+0x1e>
 800708a:	d109      	bne.n	80070a0 <atan+0x30>
 800708c:	b144      	cbz	r4, 80070a0 <atan+0x30>
 800708e:	4622      	mov	r2, r4
 8007090:	462b      	mov	r3, r5
 8007092:	4620      	mov	r0, r4
 8007094:	4629      	mov	r1, r5
 8007096:	f7f9 f8a1 	bl	80001dc <__adddf3>
 800709a:	4604      	mov	r4, r0
 800709c:	460d      	mov	r5, r1
 800709e:	e006      	b.n	80070ae <atan+0x3e>
 80070a0:	f1bb 0f00 	cmp.w	fp, #0
 80070a4:	f300 8131 	bgt.w	800730a <atan+0x29a>
 80070a8:	a59b      	add	r5, pc, #620	; (adr r5, 8007318 <atan+0x2a8>)
 80070aa:	e9d5 4500 	ldrd	r4, r5, [r5]
 80070ae:	ec45 4b10 	vmov	d0, r4, r5
 80070b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070b6:	4bb6      	ldr	r3, [pc, #728]	; (8007390 <atan+0x320>)
 80070b8:	429e      	cmp	r6, r3
 80070ba:	dc14      	bgt.n	80070e6 <atan+0x76>
 80070bc:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 80070c0:	429e      	cmp	r6, r3
 80070c2:	dc0d      	bgt.n	80070e0 <atan+0x70>
 80070c4:	a396      	add	r3, pc, #600	; (adr r3, 8007320 <atan+0x2b0>)
 80070c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070ca:	ee10 0a10 	vmov	r0, s0
 80070ce:	4629      	mov	r1, r5
 80070d0:	f7f9 f884 	bl	80001dc <__adddf3>
 80070d4:	4baf      	ldr	r3, [pc, #700]	; (8007394 <atan+0x324>)
 80070d6:	2200      	movs	r2, #0
 80070d8:	f7f9 fcc6 	bl	8000a68 <__aeabi_dcmpgt>
 80070dc:	2800      	cmp	r0, #0
 80070de:	d1e6      	bne.n	80070ae <atan+0x3e>
 80070e0:	f04f 3aff 	mov.w	sl, #4294967295
 80070e4:	e02b      	b.n	800713e <atan+0xce>
 80070e6:	f000 f963 	bl	80073b0 <fabs>
 80070ea:	4bab      	ldr	r3, [pc, #684]	; (8007398 <atan+0x328>)
 80070ec:	429e      	cmp	r6, r3
 80070ee:	ec55 4b10 	vmov	r4, r5, d0
 80070f2:	f300 80bf 	bgt.w	8007274 <atan+0x204>
 80070f6:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 80070fa:	429e      	cmp	r6, r3
 80070fc:	f300 80a0 	bgt.w	8007240 <atan+0x1d0>
 8007100:	ee10 2a10 	vmov	r2, s0
 8007104:	ee10 0a10 	vmov	r0, s0
 8007108:	462b      	mov	r3, r5
 800710a:	4629      	mov	r1, r5
 800710c:	f7f9 f866 	bl	80001dc <__adddf3>
 8007110:	4ba0      	ldr	r3, [pc, #640]	; (8007394 <atan+0x324>)
 8007112:	2200      	movs	r2, #0
 8007114:	f7f9 f860 	bl	80001d8 <__aeabi_dsub>
 8007118:	2200      	movs	r2, #0
 800711a:	4606      	mov	r6, r0
 800711c:	460f      	mov	r7, r1
 800711e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8007122:	4620      	mov	r0, r4
 8007124:	4629      	mov	r1, r5
 8007126:	f7f9 f859 	bl	80001dc <__adddf3>
 800712a:	4602      	mov	r2, r0
 800712c:	460b      	mov	r3, r1
 800712e:	4630      	mov	r0, r6
 8007130:	4639      	mov	r1, r7
 8007132:	f7f9 fb33 	bl	800079c <__aeabi_ddiv>
 8007136:	f04f 0a00 	mov.w	sl, #0
 800713a:	4604      	mov	r4, r0
 800713c:	460d      	mov	r5, r1
 800713e:	4622      	mov	r2, r4
 8007140:	462b      	mov	r3, r5
 8007142:	4620      	mov	r0, r4
 8007144:	4629      	mov	r1, r5
 8007146:	f7f9 f9ff 	bl	8000548 <__aeabi_dmul>
 800714a:	4602      	mov	r2, r0
 800714c:	460b      	mov	r3, r1
 800714e:	4680      	mov	r8, r0
 8007150:	4689      	mov	r9, r1
 8007152:	f7f9 f9f9 	bl	8000548 <__aeabi_dmul>
 8007156:	a374      	add	r3, pc, #464	; (adr r3, 8007328 <atan+0x2b8>)
 8007158:	e9d3 2300 	ldrd	r2, r3, [r3]
 800715c:	4606      	mov	r6, r0
 800715e:	460f      	mov	r7, r1
 8007160:	f7f9 f9f2 	bl	8000548 <__aeabi_dmul>
 8007164:	a372      	add	r3, pc, #456	; (adr r3, 8007330 <atan+0x2c0>)
 8007166:	e9d3 2300 	ldrd	r2, r3, [r3]
 800716a:	f7f9 f837 	bl	80001dc <__adddf3>
 800716e:	4632      	mov	r2, r6
 8007170:	463b      	mov	r3, r7
 8007172:	f7f9 f9e9 	bl	8000548 <__aeabi_dmul>
 8007176:	a370      	add	r3, pc, #448	; (adr r3, 8007338 <atan+0x2c8>)
 8007178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800717c:	f7f9 f82e 	bl	80001dc <__adddf3>
 8007180:	4632      	mov	r2, r6
 8007182:	463b      	mov	r3, r7
 8007184:	f7f9 f9e0 	bl	8000548 <__aeabi_dmul>
 8007188:	a36d      	add	r3, pc, #436	; (adr r3, 8007340 <atan+0x2d0>)
 800718a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800718e:	f7f9 f825 	bl	80001dc <__adddf3>
 8007192:	4632      	mov	r2, r6
 8007194:	463b      	mov	r3, r7
 8007196:	f7f9 f9d7 	bl	8000548 <__aeabi_dmul>
 800719a:	a36b      	add	r3, pc, #428	; (adr r3, 8007348 <atan+0x2d8>)
 800719c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071a0:	f7f9 f81c 	bl	80001dc <__adddf3>
 80071a4:	4632      	mov	r2, r6
 80071a6:	463b      	mov	r3, r7
 80071a8:	f7f9 f9ce 	bl	8000548 <__aeabi_dmul>
 80071ac:	a368      	add	r3, pc, #416	; (adr r3, 8007350 <atan+0x2e0>)
 80071ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071b2:	f7f9 f813 	bl	80001dc <__adddf3>
 80071b6:	4642      	mov	r2, r8
 80071b8:	464b      	mov	r3, r9
 80071ba:	f7f9 f9c5 	bl	8000548 <__aeabi_dmul>
 80071be:	a366      	add	r3, pc, #408	; (adr r3, 8007358 <atan+0x2e8>)
 80071c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071c4:	4680      	mov	r8, r0
 80071c6:	4689      	mov	r9, r1
 80071c8:	4630      	mov	r0, r6
 80071ca:	4639      	mov	r1, r7
 80071cc:	f7f9 f9bc 	bl	8000548 <__aeabi_dmul>
 80071d0:	a363      	add	r3, pc, #396	; (adr r3, 8007360 <atan+0x2f0>)
 80071d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071d6:	f7f8 ffff 	bl	80001d8 <__aeabi_dsub>
 80071da:	4632      	mov	r2, r6
 80071dc:	463b      	mov	r3, r7
 80071de:	f7f9 f9b3 	bl	8000548 <__aeabi_dmul>
 80071e2:	a361      	add	r3, pc, #388	; (adr r3, 8007368 <atan+0x2f8>)
 80071e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071e8:	f7f8 fff6 	bl	80001d8 <__aeabi_dsub>
 80071ec:	4632      	mov	r2, r6
 80071ee:	463b      	mov	r3, r7
 80071f0:	f7f9 f9aa 	bl	8000548 <__aeabi_dmul>
 80071f4:	a35e      	add	r3, pc, #376	; (adr r3, 8007370 <atan+0x300>)
 80071f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071fa:	f7f8 ffed 	bl	80001d8 <__aeabi_dsub>
 80071fe:	4632      	mov	r2, r6
 8007200:	463b      	mov	r3, r7
 8007202:	f7f9 f9a1 	bl	8000548 <__aeabi_dmul>
 8007206:	a35c      	add	r3, pc, #368	; (adr r3, 8007378 <atan+0x308>)
 8007208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800720c:	f7f8 ffe4 	bl	80001d8 <__aeabi_dsub>
 8007210:	4632      	mov	r2, r6
 8007212:	463b      	mov	r3, r7
 8007214:	f7f9 f998 	bl	8000548 <__aeabi_dmul>
 8007218:	4602      	mov	r2, r0
 800721a:	460b      	mov	r3, r1
 800721c:	4640      	mov	r0, r8
 800721e:	4649      	mov	r1, r9
 8007220:	f7f8 ffdc 	bl	80001dc <__adddf3>
 8007224:	4622      	mov	r2, r4
 8007226:	462b      	mov	r3, r5
 8007228:	f7f9 f98e 	bl	8000548 <__aeabi_dmul>
 800722c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8007230:	4602      	mov	r2, r0
 8007232:	460b      	mov	r3, r1
 8007234:	d14b      	bne.n	80072ce <atan+0x25e>
 8007236:	4620      	mov	r0, r4
 8007238:	4629      	mov	r1, r5
 800723a:	f7f8 ffcd 	bl	80001d8 <__aeabi_dsub>
 800723e:	e72c      	b.n	800709a <atan+0x2a>
 8007240:	ee10 0a10 	vmov	r0, s0
 8007244:	4b53      	ldr	r3, [pc, #332]	; (8007394 <atan+0x324>)
 8007246:	2200      	movs	r2, #0
 8007248:	4629      	mov	r1, r5
 800724a:	f7f8 ffc5 	bl	80001d8 <__aeabi_dsub>
 800724e:	4b51      	ldr	r3, [pc, #324]	; (8007394 <atan+0x324>)
 8007250:	4606      	mov	r6, r0
 8007252:	460f      	mov	r7, r1
 8007254:	2200      	movs	r2, #0
 8007256:	4620      	mov	r0, r4
 8007258:	4629      	mov	r1, r5
 800725a:	f7f8 ffbf 	bl	80001dc <__adddf3>
 800725e:	4602      	mov	r2, r0
 8007260:	460b      	mov	r3, r1
 8007262:	4630      	mov	r0, r6
 8007264:	4639      	mov	r1, r7
 8007266:	f7f9 fa99 	bl	800079c <__aeabi_ddiv>
 800726a:	f04f 0a01 	mov.w	sl, #1
 800726e:	4604      	mov	r4, r0
 8007270:	460d      	mov	r5, r1
 8007272:	e764      	b.n	800713e <atan+0xce>
 8007274:	4b49      	ldr	r3, [pc, #292]	; (800739c <atan+0x32c>)
 8007276:	429e      	cmp	r6, r3
 8007278:	da1d      	bge.n	80072b6 <atan+0x246>
 800727a:	ee10 0a10 	vmov	r0, s0
 800727e:	4b48      	ldr	r3, [pc, #288]	; (80073a0 <atan+0x330>)
 8007280:	2200      	movs	r2, #0
 8007282:	4629      	mov	r1, r5
 8007284:	f7f8 ffa8 	bl	80001d8 <__aeabi_dsub>
 8007288:	4b45      	ldr	r3, [pc, #276]	; (80073a0 <atan+0x330>)
 800728a:	4606      	mov	r6, r0
 800728c:	460f      	mov	r7, r1
 800728e:	2200      	movs	r2, #0
 8007290:	4620      	mov	r0, r4
 8007292:	4629      	mov	r1, r5
 8007294:	f7f9 f958 	bl	8000548 <__aeabi_dmul>
 8007298:	4b3e      	ldr	r3, [pc, #248]	; (8007394 <atan+0x324>)
 800729a:	2200      	movs	r2, #0
 800729c:	f7f8 ff9e 	bl	80001dc <__adddf3>
 80072a0:	4602      	mov	r2, r0
 80072a2:	460b      	mov	r3, r1
 80072a4:	4630      	mov	r0, r6
 80072a6:	4639      	mov	r1, r7
 80072a8:	f7f9 fa78 	bl	800079c <__aeabi_ddiv>
 80072ac:	f04f 0a02 	mov.w	sl, #2
 80072b0:	4604      	mov	r4, r0
 80072b2:	460d      	mov	r5, r1
 80072b4:	e743      	b.n	800713e <atan+0xce>
 80072b6:	462b      	mov	r3, r5
 80072b8:	ee10 2a10 	vmov	r2, s0
 80072bc:	4939      	ldr	r1, [pc, #228]	; (80073a4 <atan+0x334>)
 80072be:	2000      	movs	r0, #0
 80072c0:	f7f9 fa6c 	bl	800079c <__aeabi_ddiv>
 80072c4:	f04f 0a03 	mov.w	sl, #3
 80072c8:	4604      	mov	r4, r0
 80072ca:	460d      	mov	r5, r1
 80072cc:	e737      	b.n	800713e <atan+0xce>
 80072ce:	4b36      	ldr	r3, [pc, #216]	; (80073a8 <atan+0x338>)
 80072d0:	4e36      	ldr	r6, [pc, #216]	; (80073ac <atan+0x33c>)
 80072d2:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80072d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80072da:	f7f8 ff7d 	bl	80001d8 <__aeabi_dsub>
 80072de:	4622      	mov	r2, r4
 80072e0:	462b      	mov	r3, r5
 80072e2:	f7f8 ff79 	bl	80001d8 <__aeabi_dsub>
 80072e6:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80072ea:	4602      	mov	r2, r0
 80072ec:	460b      	mov	r3, r1
 80072ee:	e9d6 0100 	ldrd	r0, r1, [r6]
 80072f2:	f7f8 ff71 	bl	80001d8 <__aeabi_dsub>
 80072f6:	f1bb 0f00 	cmp.w	fp, #0
 80072fa:	4604      	mov	r4, r0
 80072fc:	460d      	mov	r5, r1
 80072fe:	f6bf aed6 	bge.w	80070ae <atan+0x3e>
 8007302:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8007306:	461d      	mov	r5, r3
 8007308:	e6d1      	b.n	80070ae <atan+0x3e>
 800730a:	a51d      	add	r5, pc, #116	; (adr r5, 8007380 <atan+0x310>)
 800730c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8007310:	e6cd      	b.n	80070ae <atan+0x3e>
 8007312:	bf00      	nop
 8007314:	f3af 8000 	nop.w
 8007318:	54442d18 	.word	0x54442d18
 800731c:	bff921fb 	.word	0xbff921fb
 8007320:	8800759c 	.word	0x8800759c
 8007324:	7e37e43c 	.word	0x7e37e43c
 8007328:	e322da11 	.word	0xe322da11
 800732c:	3f90ad3a 	.word	0x3f90ad3a
 8007330:	24760deb 	.word	0x24760deb
 8007334:	3fa97b4b 	.word	0x3fa97b4b
 8007338:	a0d03d51 	.word	0xa0d03d51
 800733c:	3fb10d66 	.word	0x3fb10d66
 8007340:	c54c206e 	.word	0xc54c206e
 8007344:	3fb745cd 	.word	0x3fb745cd
 8007348:	920083ff 	.word	0x920083ff
 800734c:	3fc24924 	.word	0x3fc24924
 8007350:	5555550d 	.word	0x5555550d
 8007354:	3fd55555 	.word	0x3fd55555
 8007358:	2c6a6c2f 	.word	0x2c6a6c2f
 800735c:	bfa2b444 	.word	0xbfa2b444
 8007360:	52defd9a 	.word	0x52defd9a
 8007364:	3fadde2d 	.word	0x3fadde2d
 8007368:	af749a6d 	.word	0xaf749a6d
 800736c:	3fb3b0f2 	.word	0x3fb3b0f2
 8007370:	fe231671 	.word	0xfe231671
 8007374:	3fbc71c6 	.word	0x3fbc71c6
 8007378:	9998ebc4 	.word	0x9998ebc4
 800737c:	3fc99999 	.word	0x3fc99999
 8007380:	54442d18 	.word	0x54442d18
 8007384:	3ff921fb 	.word	0x3ff921fb
 8007388:	440fffff 	.word	0x440fffff
 800738c:	7ff00000 	.word	0x7ff00000
 8007390:	3fdbffff 	.word	0x3fdbffff
 8007394:	3ff00000 	.word	0x3ff00000
 8007398:	3ff2ffff 	.word	0x3ff2ffff
 800739c:	40038000 	.word	0x40038000
 80073a0:	3ff80000 	.word	0x3ff80000
 80073a4:	bff00000 	.word	0xbff00000
 80073a8:	080077b8 	.word	0x080077b8
 80073ac:	08007798 	.word	0x08007798

080073b0 <fabs>:
 80073b0:	ec51 0b10 	vmov	r0, r1, d0
 80073b4:	ee10 2a10 	vmov	r2, s0
 80073b8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80073bc:	ec43 2b10 	vmov	d0, r2, r3
 80073c0:	4770      	bx	lr
	...

080073c4 <__ieee754_sqrt>:
 80073c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073c8:	ec55 4b10 	vmov	r4, r5, d0
 80073cc:	4e67      	ldr	r6, [pc, #412]	; (800756c <__ieee754_sqrt+0x1a8>)
 80073ce:	43ae      	bics	r6, r5
 80073d0:	ee10 0a10 	vmov	r0, s0
 80073d4:	ee10 2a10 	vmov	r2, s0
 80073d8:	4629      	mov	r1, r5
 80073da:	462b      	mov	r3, r5
 80073dc:	d10d      	bne.n	80073fa <__ieee754_sqrt+0x36>
 80073de:	f7f9 f8b3 	bl	8000548 <__aeabi_dmul>
 80073e2:	4602      	mov	r2, r0
 80073e4:	460b      	mov	r3, r1
 80073e6:	4620      	mov	r0, r4
 80073e8:	4629      	mov	r1, r5
 80073ea:	f7f8 fef7 	bl	80001dc <__adddf3>
 80073ee:	4604      	mov	r4, r0
 80073f0:	460d      	mov	r5, r1
 80073f2:	ec45 4b10 	vmov	d0, r4, r5
 80073f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073fa:	2d00      	cmp	r5, #0
 80073fc:	dc0b      	bgt.n	8007416 <__ieee754_sqrt+0x52>
 80073fe:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8007402:	4326      	orrs	r6, r4
 8007404:	d0f5      	beq.n	80073f2 <__ieee754_sqrt+0x2e>
 8007406:	b135      	cbz	r5, 8007416 <__ieee754_sqrt+0x52>
 8007408:	f7f8 fee6 	bl	80001d8 <__aeabi_dsub>
 800740c:	4602      	mov	r2, r0
 800740e:	460b      	mov	r3, r1
 8007410:	f7f9 f9c4 	bl	800079c <__aeabi_ddiv>
 8007414:	e7eb      	b.n	80073ee <__ieee754_sqrt+0x2a>
 8007416:	1509      	asrs	r1, r1, #20
 8007418:	f000 808d 	beq.w	8007536 <__ieee754_sqrt+0x172>
 800741c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8007420:	f2a1 36ff 	subw	r6, r1, #1023	; 0x3ff
 8007424:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007428:	07c9      	lsls	r1, r1, #31
 800742a:	bf5c      	itt	pl
 800742c:	005b      	lslpl	r3, r3, #1
 800742e:	eb03 73d2 	addpl.w	r3, r3, r2, lsr #31
 8007432:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007436:	bf58      	it	pl
 8007438:	0052      	lslpl	r2, r2, #1
 800743a:	2500      	movs	r5, #0
 800743c:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007440:	1076      	asrs	r6, r6, #1
 8007442:	0052      	lsls	r2, r2, #1
 8007444:	f04f 0e16 	mov.w	lr, #22
 8007448:	46ac      	mov	ip, r5
 800744a:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800744e:	eb0c 0001 	add.w	r0, ip, r1
 8007452:	4298      	cmp	r0, r3
 8007454:	bfde      	ittt	le
 8007456:	1a1b      	suble	r3, r3, r0
 8007458:	eb00 0c01 	addle.w	ip, r0, r1
 800745c:	186d      	addle	r5, r5, r1
 800745e:	005b      	lsls	r3, r3, #1
 8007460:	f1be 0e01 	subs.w	lr, lr, #1
 8007464:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8007468:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800746c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8007470:	d1ed      	bne.n	800744e <__ieee754_sqrt+0x8a>
 8007472:	4674      	mov	r4, lr
 8007474:	2720      	movs	r7, #32
 8007476:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 800747a:	4563      	cmp	r3, ip
 800747c:	eb01 000e 	add.w	r0, r1, lr
 8007480:	dc02      	bgt.n	8007488 <__ieee754_sqrt+0xc4>
 8007482:	d113      	bne.n	80074ac <__ieee754_sqrt+0xe8>
 8007484:	4290      	cmp	r0, r2
 8007486:	d811      	bhi.n	80074ac <__ieee754_sqrt+0xe8>
 8007488:	2800      	cmp	r0, #0
 800748a:	eb00 0e01 	add.w	lr, r0, r1
 800748e:	da57      	bge.n	8007540 <__ieee754_sqrt+0x17c>
 8007490:	f1be 0f00 	cmp.w	lr, #0
 8007494:	db54      	blt.n	8007540 <__ieee754_sqrt+0x17c>
 8007496:	f10c 0801 	add.w	r8, ip, #1
 800749a:	eba3 030c 	sub.w	r3, r3, ip
 800749e:	4290      	cmp	r0, r2
 80074a0:	bf88      	it	hi
 80074a2:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80074a6:	1a12      	subs	r2, r2, r0
 80074a8:	440c      	add	r4, r1
 80074aa:	46c4      	mov	ip, r8
 80074ac:	005b      	lsls	r3, r3, #1
 80074ae:	3f01      	subs	r7, #1
 80074b0:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 80074b4:	ea4f 0151 	mov.w	r1, r1, lsr #1
 80074b8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80074bc:	d1dd      	bne.n	800747a <__ieee754_sqrt+0xb6>
 80074be:	4313      	orrs	r3, r2
 80074c0:	d01b      	beq.n	80074fa <__ieee754_sqrt+0x136>
 80074c2:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8007570 <__ieee754_sqrt+0x1ac>
 80074c6:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8007574 <__ieee754_sqrt+0x1b0>
 80074ca:	e9da 0100 	ldrd	r0, r1, [sl]
 80074ce:	e9db 2300 	ldrd	r2, r3, [fp]
 80074d2:	f7f8 fe81 	bl	80001d8 <__aeabi_dsub>
 80074d6:	e9da 8900 	ldrd	r8, r9, [sl]
 80074da:	4602      	mov	r2, r0
 80074dc:	460b      	mov	r3, r1
 80074de:	4640      	mov	r0, r8
 80074e0:	4649      	mov	r1, r9
 80074e2:	f7f9 faad 	bl	8000a40 <__aeabi_dcmple>
 80074e6:	b140      	cbz	r0, 80074fa <__ieee754_sqrt+0x136>
 80074e8:	f1b4 3fff 	cmp.w	r4, #4294967295
 80074ec:	e9da 0100 	ldrd	r0, r1, [sl]
 80074f0:	e9db 2300 	ldrd	r2, r3, [fp]
 80074f4:	d126      	bne.n	8007544 <__ieee754_sqrt+0x180>
 80074f6:	3501      	adds	r5, #1
 80074f8:	463c      	mov	r4, r7
 80074fa:	106a      	asrs	r2, r5, #1
 80074fc:	0863      	lsrs	r3, r4, #1
 80074fe:	07e9      	lsls	r1, r5, #31
 8007500:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8007504:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8007508:	bf48      	it	mi
 800750a:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 800750e:	eb02 5506 	add.w	r5, r2, r6, lsl #20
 8007512:	461c      	mov	r4, r3
 8007514:	e76d      	b.n	80073f2 <__ieee754_sqrt+0x2e>
 8007516:	0ad3      	lsrs	r3, r2, #11
 8007518:	3815      	subs	r0, #21
 800751a:	0552      	lsls	r2, r2, #21
 800751c:	2b00      	cmp	r3, #0
 800751e:	d0fa      	beq.n	8007516 <__ieee754_sqrt+0x152>
 8007520:	02dc      	lsls	r4, r3, #11
 8007522:	d50a      	bpl.n	800753a <__ieee754_sqrt+0x176>
 8007524:	f1c1 0420 	rsb	r4, r1, #32
 8007528:	fa22 f404 	lsr.w	r4, r2, r4
 800752c:	1e4d      	subs	r5, r1, #1
 800752e:	408a      	lsls	r2, r1
 8007530:	4323      	orrs	r3, r4
 8007532:	1b41      	subs	r1, r0, r5
 8007534:	e772      	b.n	800741c <__ieee754_sqrt+0x58>
 8007536:	4608      	mov	r0, r1
 8007538:	e7f0      	b.n	800751c <__ieee754_sqrt+0x158>
 800753a:	005b      	lsls	r3, r3, #1
 800753c:	3101      	adds	r1, #1
 800753e:	e7ef      	b.n	8007520 <__ieee754_sqrt+0x15c>
 8007540:	46e0      	mov	r8, ip
 8007542:	e7aa      	b.n	800749a <__ieee754_sqrt+0xd6>
 8007544:	f7f8 fe4a 	bl	80001dc <__adddf3>
 8007548:	e9da 8900 	ldrd	r8, r9, [sl]
 800754c:	4602      	mov	r2, r0
 800754e:	460b      	mov	r3, r1
 8007550:	4640      	mov	r0, r8
 8007552:	4649      	mov	r1, r9
 8007554:	f7f9 fa6a 	bl	8000a2c <__aeabi_dcmplt>
 8007558:	b120      	cbz	r0, 8007564 <__ieee754_sqrt+0x1a0>
 800755a:	1ca0      	adds	r0, r4, #2
 800755c:	bf08      	it	eq
 800755e:	3501      	addeq	r5, #1
 8007560:	3402      	adds	r4, #2
 8007562:	e7ca      	b.n	80074fa <__ieee754_sqrt+0x136>
 8007564:	3401      	adds	r4, #1
 8007566:	f024 0401 	bic.w	r4, r4, #1
 800756a:	e7c6      	b.n	80074fa <__ieee754_sqrt+0x136>
 800756c:	7ff00000 	.word	0x7ff00000
 8007570:	200000f0 	.word	0x200000f0
 8007574:	200000f8 	.word	0x200000f8

08007578 <__ieee754_atan2>:
 8007578:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800757c:	ec57 6b11 	vmov	r6, r7, d1
 8007580:	4273      	negs	r3, r6
 8007582:	f8df 817c 	ldr.w	r8, [pc, #380]	; 8007700 <__ieee754_atan2+0x188>
 8007586:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800758a:	4333      	orrs	r3, r6
 800758c:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8007590:	4543      	cmp	r3, r8
 8007592:	ec51 0b10 	vmov	r0, r1, d0
 8007596:	ee11 5a10 	vmov	r5, s2
 800759a:	d80a      	bhi.n	80075b2 <__ieee754_atan2+0x3a>
 800759c:	4244      	negs	r4, r0
 800759e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80075a2:	4304      	orrs	r4, r0
 80075a4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 80075a8:	4544      	cmp	r4, r8
 80075aa:	ee10 9a10 	vmov	r9, s0
 80075ae:	468e      	mov	lr, r1
 80075b0:	d907      	bls.n	80075c2 <__ieee754_atan2+0x4a>
 80075b2:	4632      	mov	r2, r6
 80075b4:	463b      	mov	r3, r7
 80075b6:	f7f8 fe11 	bl	80001dc <__adddf3>
 80075ba:	ec41 0b10 	vmov	d0, r0, r1
 80075be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80075c2:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 80075c6:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80075ca:	4334      	orrs	r4, r6
 80075cc:	d103      	bne.n	80075d6 <__ieee754_atan2+0x5e>
 80075ce:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80075d2:	f7ff bd4d 	b.w	8007070 <atan>
 80075d6:	17bc      	asrs	r4, r7, #30
 80075d8:	f004 0402 	and.w	r4, r4, #2
 80075dc:	ea53 0909 	orrs.w	r9, r3, r9
 80075e0:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80075e4:	d107      	bne.n	80075f6 <__ieee754_atan2+0x7e>
 80075e6:	2c02      	cmp	r4, #2
 80075e8:	d05f      	beq.n	80076aa <__ieee754_atan2+0x132>
 80075ea:	2c03      	cmp	r4, #3
 80075ec:	d1e5      	bne.n	80075ba <__ieee754_atan2+0x42>
 80075ee:	a140      	add	r1, pc, #256	; (adr r1, 80076f0 <__ieee754_atan2+0x178>)
 80075f0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80075f4:	e7e1      	b.n	80075ba <__ieee754_atan2+0x42>
 80075f6:	4315      	orrs	r5, r2
 80075f8:	d106      	bne.n	8007608 <__ieee754_atan2+0x90>
 80075fa:	f1be 0f00 	cmp.w	lr, #0
 80075fe:	da5f      	bge.n	80076c0 <__ieee754_atan2+0x148>
 8007600:	a13d      	add	r1, pc, #244	; (adr r1, 80076f8 <__ieee754_atan2+0x180>)
 8007602:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007606:	e7d8      	b.n	80075ba <__ieee754_atan2+0x42>
 8007608:	4542      	cmp	r2, r8
 800760a:	d10f      	bne.n	800762c <__ieee754_atan2+0xb4>
 800760c:	4293      	cmp	r3, r2
 800760e:	f104 34ff 	add.w	r4, r4, #4294967295
 8007612:	d107      	bne.n	8007624 <__ieee754_atan2+0xac>
 8007614:	2c02      	cmp	r4, #2
 8007616:	d84c      	bhi.n	80076b2 <__ieee754_atan2+0x13a>
 8007618:	4b33      	ldr	r3, [pc, #204]	; (80076e8 <__ieee754_atan2+0x170>)
 800761a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800761e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007622:	e7ca      	b.n	80075ba <__ieee754_atan2+0x42>
 8007624:	2c02      	cmp	r4, #2
 8007626:	d848      	bhi.n	80076ba <__ieee754_atan2+0x142>
 8007628:	4b30      	ldr	r3, [pc, #192]	; (80076ec <__ieee754_atan2+0x174>)
 800762a:	e7f6      	b.n	800761a <__ieee754_atan2+0xa2>
 800762c:	4543      	cmp	r3, r8
 800762e:	d0e4      	beq.n	80075fa <__ieee754_atan2+0x82>
 8007630:	1a9b      	subs	r3, r3, r2
 8007632:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8007636:	ea4f 5223 	mov.w	r2, r3, asr #20
 800763a:	da1e      	bge.n	800767a <__ieee754_atan2+0x102>
 800763c:	2f00      	cmp	r7, #0
 800763e:	da01      	bge.n	8007644 <__ieee754_atan2+0xcc>
 8007640:	323c      	adds	r2, #60	; 0x3c
 8007642:	db1e      	blt.n	8007682 <__ieee754_atan2+0x10a>
 8007644:	4632      	mov	r2, r6
 8007646:	463b      	mov	r3, r7
 8007648:	f7f9 f8a8 	bl	800079c <__aeabi_ddiv>
 800764c:	ec41 0b10 	vmov	d0, r0, r1
 8007650:	f7ff feae 	bl	80073b0 <fabs>
 8007654:	f7ff fd0c 	bl	8007070 <atan>
 8007658:	ec51 0b10 	vmov	r0, r1, d0
 800765c:	2c01      	cmp	r4, #1
 800765e:	d013      	beq.n	8007688 <__ieee754_atan2+0x110>
 8007660:	2c02      	cmp	r4, #2
 8007662:	d015      	beq.n	8007690 <__ieee754_atan2+0x118>
 8007664:	2c00      	cmp	r4, #0
 8007666:	d0a8      	beq.n	80075ba <__ieee754_atan2+0x42>
 8007668:	a317      	add	r3, pc, #92	; (adr r3, 80076c8 <__ieee754_atan2+0x150>)
 800766a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800766e:	f7f8 fdb3 	bl	80001d8 <__aeabi_dsub>
 8007672:	a317      	add	r3, pc, #92	; (adr r3, 80076d0 <__ieee754_atan2+0x158>)
 8007674:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007678:	e014      	b.n	80076a4 <__ieee754_atan2+0x12c>
 800767a:	a117      	add	r1, pc, #92	; (adr r1, 80076d8 <__ieee754_atan2+0x160>)
 800767c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007680:	e7ec      	b.n	800765c <__ieee754_atan2+0xe4>
 8007682:	2000      	movs	r0, #0
 8007684:	2100      	movs	r1, #0
 8007686:	e7e9      	b.n	800765c <__ieee754_atan2+0xe4>
 8007688:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800768c:	4619      	mov	r1, r3
 800768e:	e794      	b.n	80075ba <__ieee754_atan2+0x42>
 8007690:	a30d      	add	r3, pc, #52	; (adr r3, 80076c8 <__ieee754_atan2+0x150>)
 8007692:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007696:	f7f8 fd9f 	bl	80001d8 <__aeabi_dsub>
 800769a:	4602      	mov	r2, r0
 800769c:	460b      	mov	r3, r1
 800769e:	a10c      	add	r1, pc, #48	; (adr r1, 80076d0 <__ieee754_atan2+0x158>)
 80076a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80076a4:	f7f8 fd98 	bl	80001d8 <__aeabi_dsub>
 80076a8:	e787      	b.n	80075ba <__ieee754_atan2+0x42>
 80076aa:	a109      	add	r1, pc, #36	; (adr r1, 80076d0 <__ieee754_atan2+0x158>)
 80076ac:	e9d1 0100 	ldrd	r0, r1, [r1]
 80076b0:	e783      	b.n	80075ba <__ieee754_atan2+0x42>
 80076b2:	a10b      	add	r1, pc, #44	; (adr r1, 80076e0 <__ieee754_atan2+0x168>)
 80076b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80076b8:	e77f      	b.n	80075ba <__ieee754_atan2+0x42>
 80076ba:	2000      	movs	r0, #0
 80076bc:	2100      	movs	r1, #0
 80076be:	e77c      	b.n	80075ba <__ieee754_atan2+0x42>
 80076c0:	a105      	add	r1, pc, #20	; (adr r1, 80076d8 <__ieee754_atan2+0x160>)
 80076c2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80076c6:	e778      	b.n	80075ba <__ieee754_atan2+0x42>
 80076c8:	33145c07 	.word	0x33145c07
 80076cc:	3ca1a626 	.word	0x3ca1a626
 80076d0:	54442d18 	.word	0x54442d18
 80076d4:	400921fb 	.word	0x400921fb
 80076d8:	54442d18 	.word	0x54442d18
 80076dc:	3ff921fb 	.word	0x3ff921fb
 80076e0:	54442d18 	.word	0x54442d18
 80076e4:	3fe921fb 	.word	0x3fe921fb
 80076e8:	080077d8 	.word	0x080077d8
 80076ec:	080077f0 	.word	0x080077f0
 80076f0:	54442d18 	.word	0x54442d18
 80076f4:	c00921fb 	.word	0xc00921fb
 80076f8:	54442d18 	.word	0x54442d18
 80076fc:	bff921fb 	.word	0xbff921fb
 8007700:	7ff00000 	.word	0x7ff00000

08007704 <_init>:
 8007704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007706:	bf00      	nop
 8007708:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800770a:	bc08      	pop	{r3}
 800770c:	469e      	mov	lr, r3
 800770e:	4770      	bx	lr

08007710 <_fini>:
 8007710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007712:	bf00      	nop
 8007714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007716:	bc08      	pop	{r3}
 8007718:	469e      	mov	lr, r3
 800771a:	4770      	bx	lr
